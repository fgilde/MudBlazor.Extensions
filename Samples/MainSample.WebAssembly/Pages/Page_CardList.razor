@page "/card"
@using MudBlazor.Extensions.Components.ObjectEdit.Options

@attribute [Demo(Name = "MudExCardList", Icon = Icons.Material.Outlined.HorizontalSplit, Documentation = "This Demo demonstrate using for the MudExCardList", ForComponentType = typeof(MudExCardList<>))]

<DemoComponent PageType="@GetType()" Title="MudExCardList">
    <MudSlider @bind-Value="itemCount" Min="0" Max="40" Color="Color.Info" Class="mb-6">Items: @itemCount.ToString()</MudSlider>
    <SplitContainer>
        <Left>
            <MudExCardList @ref="component" TData="object">
                @for (int i = 0; i < itemCount; i++)
                {
                    <MudCard>
                        <MudCardHeader>
                            <CardHeaderContent>
                                <MudText Typo="Typo.h6">Sample Headline</MudText>
                            </CardHeaderContent>
                            <CardHeaderActions>
                                <MudIconButton Icon="@Icons.Material.Filled.Camera" Color="Color.Default"/>
                            </CardHeaderActions>
                        </MudCardHeader>
                        <MudCardContent>
                            <MudText>Super sample Content text.</MudText>
                            <MudText Typo="Typo.body2">Subline descriptin for sample card.</MudText>
                        </MudCardContent>
                        <MudCardActions>
                            <MudButton Variant="Variant.Text" Color="Color.Primary">Read More</MudButton>
                        </MudCardActions>
                    </MudCard>
                }
            </MudExCardList>
        </Left>
        <Right>
            <ComponentPropertyGrid MetaConfiguration="@Configure()" Value="@component"></ComponentPropertyGrid>
        </Right>
    </SplitContainer>
</DemoComponent>

@code {
    MudExCardList<object> component;
    int itemCount = 5;
    private Action<ObjectEditMeta<MudExCardList<object>>> Configure()
    {
        return meta =>
        {
            meta.GroupByCategoryAttribute();
            meta.Property(m => m.ZoomOnHover).Ignore();
        };
    }
}
