@inject NavigationManager Navi;
@inject HttpClient Http
@page "/"

@using MudBlazor.Extensions.Helper
@using MudBlazor.Extensions.Core

<style>
    .mud-ex-object-edit-group-flat .mud-expand-panel-text:after {
        background-color: var(@Color.Secondary.CssVarName());
    }
</style>

<MudHidden Breakpoint="Breakpoint.SmAndDown">
    <MudExGradientText Animate="false"
                       Style="margin-top: -100px;margin-bottom: 30px;" Align="Align.Center" Typo="Typo.h2">MudBlazor.Extensions</MudExGradientText>
</MudHidden>
<MudHidden Breakpoint="Breakpoint.SmAndDown" Invert="true">
    <MudExGradientText Animate="false"
                       Style="margin-top: -100px;margin-bottom: 30px;" Align="Align.Center" Typo="Typo.h4">MudBlazor.Extensions</MudExGradientText>
</MudHidden>
<Support />

<MudExCardList HoverMode="@(MudExCardHoverMode.Zoom | MudExCardHoverMode.CardEffect3d | MudExCardHoverMode.LightBulb)" HoverColor="Color.Warning" TData="object">
    <MudCard Class="index-card" @onclick="@(() => { Navi.NavigateTo("/structured-data-edit"); })">
        <MudCardHeader>
            <CardHeaderContent>
                <div style="display: flex;">
                    <MudIcon Color="Color.Secondary" Size="Size.Large" Icon="@Icons.Custom.FileFormats.FileCode"/>
                    <MudText Class="ml-5" Typo="Typo.h6">Brand new Component MudExStructuredDataEditor</MudText>
                </div>
            </CardHeaderContent>
        </MudCardHeader>
        <MudCardContent>
            <MudText>You don't need an extra JsonEditor anymore</MudText>
            <MudText Typo="Typo.body2">Powerful UI Editor for json, xml or yaml content</MudText>
        </MudCardContent>
    </MudCard>
    
    <MudCard Class="index-card" @onclick="@(() => { Navi.NavigateTo(AppConstants.Urls.GetTryOnline(MainLayout.Instance.IsDark)); })">
        <MudCardHeader>
            <CardHeaderContent>
                <div style="display: flex;">
                    <MudIcon Color="Color.Primary" Size="Size.Large" Icon="@Icons.Custom.Brands.MicrosoftVisualStudio"/>
                    <MudText Class="ml-5" Typo="Typo.h6">Try MudEx online CodeEditor</MudText>
                </div>
            </CardHeaderContent>
        </MudCardHeader>
        <MudCardContent>
            <MudText>Play around with MudBlazor and MudBlazor.Extensions in an online Code Editor</MudText>
            <MudText Typo="Typo.body2">Test and use components live without required environment</MudText>
        </MudCardContent>
    </MudCard>

    <MudCard Class="index-card" @onclick="@(() => { Navi.NavigateTo("/theme-edit"); })">
        <MudCardHeader>
            <CardHeaderContent>
                <div style="display: flex;">
                    @((MarkupString)MudExSvg.ApplicationImage(ClientTheme.CurrentTheme, new MudExDimension(70, 50)))
                    <MudText Class="ml-5" Typo="Typo.h6">Check out the MudExThemeEdit Component</MudText>
                </div>
            </CardHeaderContent>
        </MudCardHeader>
        <MudCardContent>
            <MudText>Change or edit your theme</MudText>
            <MudText Typo="Typo.body2">Test the powerful MudExThemeEdit and change theme colors fonts and more</MudText>
        </MudCardContent>
    </MudCard>
</MudExCardList>

<div class="mt-5 mb-5" style="display: flex; justify-content: center; align-items: center;">

    <MudIcon Icon="@Icons.Filled.Circle" Size="Size.Small" Color="Color.Warning" />
    <MudText> New </MudText>

    <MudIcon Style="margin-left:20px" Size="Size.Small" Icon="@Icons.Filled.Circle" Color="Color.Info" />
    <MudText> Updated </MudText>
</div>

<MudExpansionPanels MultiExpansion="true">
    <MudExpansionPanel IsInitiallyExpanded="true" Class="@($"mt-3 {("mud-ex-object-edit-group-flat")}")" Text="DEMOS">
        <MudExCardList TData="object">

            @foreach (var nav in DemoAttribute.AllEntries(true))
            {
                <MudCard Class="index-card" @onclick="@(() => { Open(nav); })">
                    <MudCardHeader>
                        <CardHeaderContent>
                            @if (nav.Demo is DemoNewAttribute)
                            {
                                <MudAlert Icon="@Icons.Material.Filled.NewLabel" Style="margin-top: -15px;padding: 0;background: transparent;" Variant="Variant.Text" Severity="Severity.Warning">
                                    <MudText Typo="Typo.subtitle1">@($"NEW {(nav.Demo?.RelatedComponents?.FirstOrDefault()?.Name?.Split('`')?.FirstOrDefault() ?? nav.Text)}")</MudText>
                                </MudAlert>
                            }
                            else if (nav.Demo is DemoUpdatedAttribute)
                            {
                                <MudAlert Icon="@Icons.Material.Filled.Update" Style="margin-top: -15px;padding: 0;background: transparent;" Variant="Variant.Text" Severity="Severity.Info">
                                    <MudText Typo="Typo.subtitle1">@($"UPDATE {(nav.Demo?.RelatedComponents?.FirstOrDefault()?.Name?.Split('`')?.FirstOrDefault() ?? nav.Text)}")</MudText>
                                </MudAlert>
                            }
                            else
                            {
                                <MudText Typo="Typo.h6">@($"{(nav.Demo?.RelatedComponents?.FirstOrDefault()?.Name?.Split('`')?.FirstOrDefault() ?? nav.Text)}")</MudText>
                            }
                        </CardHeaderContent>
                        <CardHeaderActions>
                            <MudIcon Color="@nav.GetIconColor()" Icon="@nav.Icon" />
                        </CardHeaderActions>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudText>@nav.Text</MudText>
                        @if (!string.IsNullOrEmpty(nav.Documentation))
                        {
                            <MudText Typo="Typo.body2">@nav.Documentation</MudText>
                        }
                    </MudCardContent>
                </MudCard>
            }
        </MudExCardList>
    </MudExpansionPanel>

    <MudExpansionPanel IsInitiallyExpanded="true" Class="@($"mt-3 {("mud-ex-object-edit-group-flat")}")" Text="ALL COMPONENTS">
        <MudExCardList HoverColor="Color.Info" TData="object">

            @foreach (var nav in Navigations.ReflectMudExComponents())
            {
                <MudCard Class="index-card" @onclick="@(() => { Open(nav); })">
                    <MudCardHeader>
                        <CardHeaderContent>

                            @if (nav.Demo is DemoNewAttribute)
                            {
                                <MudAlert Icon="@Icons.Material.Filled.NewLabel" Style="margin-top: -15px;padding: 0;background: transparent;" Variant="Variant.Text" Severity="Severity.Warning">
                                    <MudText Typo="Typo.subtitle1">@($"NEW {(nav.Text)}")</MudText>
                                    </MudAlert>
                            }
                            else if (nav.Demo is DemoUpdatedAttribute)
                            {
                                <MudAlert Icon="@Icons.Material.Filled.Update" Style="margin-top: -15px;padding: 0;background: transparent;" Variant="Variant.Text" Severity="Severity.Info">
                                    <MudText Typo="Typo.subtitle1">@($"UPDATE {(nav.Text)}")</MudText>
                                    </MudAlert>
                            }
                            else
                            {
                                <MudText Typo="Typo.h6">@nav.Text</MudText>
                            }

                        </CardHeaderContent>
                        <CardHeaderActions>
                            @*<MudIconButton Icon="@nav.Icon" Color="Color.Default" />*@
                            <MudIcon Color="@nav.GetIconColor()" Icon="@nav.Icon" />
                        </CardHeaderActions>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudText>@nav.Text</MudText>
                        @if (!string.IsNullOrEmpty(nav.Documentation))
                        {
                            <MudText Typo="Typo.body2">@nav.Documentation</MudText>
                        }
                    </MudCardContent>
                </MudCard>
            }
        </MudExCardList>
    </MudExpansionPanel>

</MudExpansionPanels>


@code
{

    private void Open(NavigationEntry nav)
    {
        Navi.NavigateTo(nav.Href);

    }
}