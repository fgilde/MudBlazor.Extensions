@page "/object-edit"
@inject IDialogService dialogService;
@using Newtonsoft.Json
@using MudBlazor.Extensions.Options
@using MudBlazor.Extensions.Core

@attribute [Demo(Group = "MudExObjectEdit", Name = "With default configuration", Documentation = "Demo for using MudExObjectEdit only with bypassing an object", Order = 0, Icon = Icons.Material.Outlined.Edit, ForComponentTypes = new[] { typeof(MudExObjectEdit<>), typeof(MudExObjectEditForm<>) })]

<DemoComponent DocFiles="@(new [] {"Docs/ObjectEdit.md"})" PageType="@GetType()">
    <MudExObjectEditForm OnValidSubmit="@OnSubmit" Value="@User"></MudExObjectEditForm>
</DemoComponent>


@code {

    // Sample data for the form
    public UserInformation User { get; set; } = new()
    {
        Id = Guid.NewGuid().ToString(),
        FirstName = "Florian",
        LastName = "Gilde",
        SomeUnimportantTestModel = new TestModel
        {
            Property1 = "Value for Property 1",
            Property2 = "Value for Property 2",
        },
        MainAddress = new Address
        {
            Street = "Street",
            HouseNumber = "1",
            PostalCode = "12345",
            City = "City"
        },
        OtherAddresses = new List<Address>
        {
            new()
            {
                Street = "Street 2",
                HouseNumber = "2",
                PostalCode = "32365",
                City = "City 2"
            }
        },
        ProgramingSkills = new List<ProgramingSkill>
        {
            new()
            {
                Name = "C#"
            },
            new()
            {
                Name = "JavaScript"
            }
        }
    };

    public class UserInformation
    {
        public string Id { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public int Age { get; set; }
        public Gender Gender { get; set; }
        public ICollection<ProgramingSkill> ProgramingSkills { get; set; }
        public Address MainAddress { get; set; }
        public ICollection<Address> OtherAddresses { get; set; }
        public string Notice { get; set; }
        public TestModel SomeUnimportantTestModel { get; set; }
    }

    public class ProgramingSkill
    {
        public string Name { get; set; }
        public override string ToString() => Name;
    }

    public class Address
    {
        public string Street { get; set; }
        public string HouseNumber { get; set; }
        public string PostalCode { get; set; }
        public string City { get; set; }
        public override string ToString() => $"{Street} {HouseNumber}, {PostalCode} {City}";
    }
    
    public class TestModel
    {
        public string Property1 { get; set; }
        public string Property2 { get; set; }
    }

    public enum Gender
    {
        Male,
        Female,
        Other
    }
    
    private async Task OnSubmit(EditContext ctx)
    {
        var asString = JsonConvert.SerializeObject(ctx.Model, Formatting.Indented);
        await dialogService.ShowEx<SampleDialog>("Result", sd => sd.ContentMessage = asString, new DialogOptionsEx
        {
            Position = DialogPosition.TopCenter,
            Animation = AnimationType.Slide,
            MaxWidth = MaxWidth.Medium
        });
    }
    
}