@using MudBlazor.Extensions.Helper
@using MainSample.WebAssembly.Utils
@using System.Reflection

<MudDialog Class="mud-ex-dialog-initial">
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@icon" Class="mr-3" /> @Title
        </MudText>
    </TitleContent>
    <DialogContent>
        Dialog Content
        <br/>
        @ContentMessage       
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter] IMudDialogInstance MudDialog { get; set; }
    [Parameter] public string ContentMessage { get; set; }
    [Parameter] public string? Title { get; set; }

    void Submit() => MudDialog.CloseAnimatedIf(DialogResult.Ok(true));
    void Cancel() => MudDialog.CancelAnimatedIf();
    string icon;
    
    protected override void OnInitialized()
    {
        icon = GetRandomMember<string>(typeof(Icons.Material.Filled));
        Title ??= RandomTitleGenerator.GenerateRandomTitle();
        if (string.IsNullOrEmpty(icon))
            icon = Icons.Material.Filled.People;
        base.OnInitialized();
    }

    public static T GetRandomMember<T>(Type type = null)
    {
        type = type ?? typeof(Icons.Material.Filled);
        var random = new Random();
        var fields = type.GetFields(BindingFlags.Public | BindingFlags.Static)
            .Where(field => field.IsLiteral && !field.IsInitOnly && field.FieldType == typeof(T))
            .ToList();

        if (fields.Count == 0)
            return default;

        int index = random.Next(fields.Count);
        return (T)fields[index].GetValue(null);
    }


}