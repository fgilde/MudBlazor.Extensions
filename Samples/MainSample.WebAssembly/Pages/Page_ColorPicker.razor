@page "/mudexcolor-picker"

@using MudBlazor.Extensions.Components.ObjectEdit.Options
@using MudBlazor.Utilities

@attribute [Demo(Name = "MudExColorPicker", Icon = Icons.Material.Outlined.Colorize, Documentation = "See how you can use different pickers or delay change event with the MudExColorPicker", ForComponentType = typeof(MudExColorPicker))]

<DemoComponent PageType="@GetType()">
    <SplitContainer>
        <Left>
            <MudExColorPicker ShowToolbar="true" @bind-Value="@color" @ref="component"></MudExColorPicker>
        </Left>
        <Right>
            <ComponentPropertyGrid MetaConfiguration="@Configure()" Value="@component"></ComponentPropertyGrid>
        </Right>
    </SplitContainer>
</DemoComponent>


@code {
    MudExColorPicker component;
    MudColor color = new("#ff0000");
    private Action<ObjectEditMeta<MudExColorPicker>> Configure()
    {
        return meta =>
        {
            meta.Property(m => m.UseColorPaletteInNativeBrowserControl).IgnoreIf(m => !m.UseNativeBrowserControl);
            meta.Property(m => m.UseMudExColorBubble).IgnoreIf(m => m.UseNativeBrowserControl);
            meta.Property(m => m.UseNativeBrowserControl).IgnoreIf(m => m.UseMudExColorBubble);
            meta.Property(p => p.Palette)
                .WithGroup("Palette");
            meta
                .IgnoreAllReadOnlyFields()
                .IgnoreAllInheritedFields(p => p.Value, p => p.Palette, p => p.PickerVariant);
        };
    }

}