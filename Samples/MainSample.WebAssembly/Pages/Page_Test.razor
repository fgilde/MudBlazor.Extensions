@page "/test"
@using MudBlazor.Extensions.Core
@using MudBlazor.Extensions.Enums

<DemoComponent PageType="@GetType()">
    <SplitContainer>
        <Left>
            <MudExSelect @ref="component" ItemCollection="_states" SearchBox="true" T="string" Label="Standard Search" AnchorOrigin="Origin.BottomCenter" Variant="Variant.Outlined" HelperText="Search with 'Contains' logic" />
        </Left>
        <Right>
            <ComponentPropertyGrid Value="@component"></ComponentPropertyGrid>
        </Right>
    </SplitContainer>
</DemoComponent>


@code {

    MudExSelect<string> component;


    private string[] _states =
    {
        "Alabama", "Alaska", "American Samoa", "Arizona",
        "Arkansas", "California", "Colorado", "Connecticut",
        "Delaware", "District of Columbia", "Federated States of Micronesia",
        "Florida", "Georgia", "Guam", "Hawaii", "Idaho",
        "Illinois", "Indiana", "Iowa", "Kansas", "Kentucky",
        "Louisiana", "Maine", "Marshall Islands", "Maryland",
        "Massachusetts", "Michigan", "Minnesota", "Mississippi",
        "Missouri", "Montana", "Nebraska", "Nevada",
        "New Hampshire", "New Jersey", "New Mexico", "New York",
        "North Carolina", "North Dakota", "Northern Mariana Islands", "Ohio",
        "Oklahoma", "Oregon", "Palau", "Pennsylvania", "Puerto Rico",
        "Rhode Island", "South Carolina", "South Dakota", "Tennessee",
        "Texas", "Utah", "Vermont", "Virgin Island", "Virginia",
        "Washington", "West Virginia", "Wisconsin", "Wyoming",
    };

    private bool SearchItems(string value, string searchString)
    {
        if (searchString == "")
        {
            return true;
        }

        if (value.StartsWith(searchString, StringComparison.CurrentCultureIgnoreCase))
        {
            return true;
        }

        return false;
    }
    Tuple<string, string, bool>[] _players = new Tuple<string, string, bool>[]
    {
       new Tuple<string, string, bool>("Kareem Abdul-Jabbar", "38.387", true),
       new Tuple<string, string, bool>("LeBron James", "37.062", false),
       new Tuple<string, string, bool>("Karl Malone", "36.928", true),
       new Tuple<string, string, bool>("Kobe Bryant", "33.643", true),
       new Tuple<string, string, bool>("Michael Jordan", "32.292", true),
    };

    private string StringFunc(Tuple<string, string, bool> tuple)
    {
        if (tuple == null)
        {
            return null;
        }
        return tuple.Item1 + " - Total Score: " + tuple.Item2;
    }
}

