<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MudBlazor.Extensions</name>
    </assembly>
    <members>
        <member name="T:MudBlazor.Extensions.Attribute.BetaAttribute">
            <summary>
            Attribute to mark a class as beta
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Attribute.BetaAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message"></param>
        </member>
        <member name="P:MudBlazor.Extensions.Attribute.BetaAttribute.Message">
            <summary>
            Message
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Attribute.HasDocumentationAttribute">
            <summary>
            Attribute to mark and link a documentation for a class
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Attribute.HasDocumentationAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="markdownFile"></param>
        </member>
        <member name="P:MudBlazor.Extensions.Attribute.HasDocumentationAttribute.MarkdownFile">
            <summary>
            Documentation file
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Attribute.IgnoreOnObjectEditAttribute">
            <summary>
            IgnoreOnObjectEditAttribute if its set to a property this is completely ignored and cant accessed by meta
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Attribute.SafeCategoryAttribute">
            <summary>
            Don't know why i need this but however why MudBlazor think its a good idea to throw an exception if the category is not valid
            This is something I don't understand on a string name based param. So I created this attribute to prevent this exception.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Attribute.SafeCategoryAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.Base.MudExBaseComponent`1">
            <summary>
            Base component for the most of all MudExComponents
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:MudBlazor.Extensions.Components.Base.MudExBaseComponent`1.IsDisposed">
            <summary>
            Is true if dispose was called
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.Base.MudExBaseComponent`1.ElementId">
            <summary>
            Element id
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.Base.MudExBaseComponent`1.Localizer">
            <summary>
            Localizer for localize texts
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.Base.MudExBaseComponent`1.RenderKey">
            <summary>
            Render key for refresh component
            </summary>    
        </member>
        <member name="P:MudBlazor.Extensions.Components.Base.MudExBaseComponent`1.ServiceProvider">
            <summary>
            Injected service provider
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.Base.MudExBaseComponent`1.JsRuntime">
            <summary>
            JsRuntime
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.Base.MudExBaseComponent`1.MudExConfiguration">
            <summary>
            MudExConfiguration
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.Base.MudExBaseComponent`1.IsRendered">
            <summary>
            This is true if render has called already
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.Base.MudExBaseComponent`1.IsFullyRendered">
            <summary>
            This is true if render has called already and finished all after render calls
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.Base.MudExBaseComponent`1.DialogService">
            <summary>
            DialogService
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.Base.MudExBaseComponent`1.LocalizerToUse">
            <summary>
            The localizer to use
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.Base.MudExBaseComponent`1.Get``1">
            <summary>
            Returns the injected service for TService
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.Base.MudExBaseComponent`1.GetServices``1">
            <summary>
            Returns the injected services for TService
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.Base.MudExBaseComponent`1.TryLocalize(System.String,System.Object[])">
            <summary>
            Tries to localize given text if localizer and translation is available
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.Base.MudExBaseComponent`1.ShouldRender">
            <inheritdoc />
        </member>
        <member name="M:MudBlazor.Extensions.Components.Base.MudExBaseComponent`1.OnFinishedRenderAsync">
            <summary>
            Called when rendering is finished
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.Base.MudExBaseComponent`1.OnAfterRenderAsync(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:MudBlazor.Extensions.Components.Base.MudExBaseComponent`1.OnAfterRender(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:MudBlazor.Extensions.Components.Base.MudExBaseComponent`1.Refresh">
            <summary>
            Refreshes this component and forces render
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Components.Base.MudExBaseComponent`1.DisposeAsync">
            <inheritdoc />
        </member>
        <member name="T:MudBlazor.Extensions.Components.Base.MudExJsRequiredBaseComponent`1">
            <summary>
            Base class for components that require a JS module to be imported and a JS object to be created.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:MudBlazor.Extensions.Components.Base.MudExJsRequiredBaseComponent`1.JsReference">
            <summary>
            The JS object reference.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.Base.MudExJsRequiredBaseComponent`1.ModuleReference">
            <summary>
            The imported module reference
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.Base.MudExJsRequiredBaseComponent`1.ElementReference">
            <summary>
            Reference to rendered element
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.Base.MudExJsRequiredBaseComponent`1.OnAfterRenderAsync(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:MudBlazor.Extensions.Components.Base.MudExJsRequiredBaseComponent`1.GetJsArguments">
            <summary>
            Returns an object that is passed forward to the js initialize and constructor method
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.Base.MudExJsRequiredBaseComponent`1.CreateDotNetObjectReference">
            <summary>
            The dotnet object reference for the js module
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.Base.MudExJsRequiredBaseComponent`1.ImportModuleAndCreateJsAsync">
            <summary>
            Virtual base method to import the module
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.Base.MudExJsRequiredBaseComponent`1.DisposeAsync">
            <inheritdoc/>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MoveContentPosition">
            <summary>
            Position to move the ChildContent to a specific element that can defined by ElementSelector.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.MoveContentPosition.BeforeBegin">
            <summary>
            Move content before the element
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.MoveContentPosition.AfterBegin">
            <summary>
            Move content after begin of element
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.MoveContentPosition.BeforeEnd">
            <summary>
            Move content before end of element
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.MoveContentPosition.AfterEnd">
            <summary>
            Move content to last after end of element
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.MoveContentPosition.None">
            Can be used if you don't want to move the content but use the found or not found content
        </member>
        <member name="T:MudBlazor.Extensions.Components.MoveContentMode">
            <summary>
            Mode to move content
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.MoveContentMode.MoveToSelector">
            <summary>
            MoveContent to selector
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.MoveContentMode.MoveFromSelector">
            <summary>
            Move content from selector
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MoveContent">
            <summary>
            Component to move the ChildContent to a specific element that can defined by ElementSelector.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MoveContent.ChildContent">
            <summary>
            ChildContent
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MoveContent.Found">
            <summary>
            Content to render only if <see cref="P:MudBlazor.Extensions.Components.MoveContent.ElementSelector"/> found
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MoveContent.NotFound">
            <summary>
            Content to render only if <see cref="P:MudBlazor.Extensions.Components.MoveContent.ElementSelector"/> not found
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MoveContent.ElementSelector">
            <summary>
            Element selector to move content to
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MoveContent.Mode">
            <summary>
            Mode how to move the content you can MoveToSelector or move from MoveFromSelector
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MoveContent.Position">
            <summary>
            Position to move the ChildContent to
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MoveContent.ElementFound">
            <summary>
            Returns true if element is found
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MoveContent.OnInitializedAsync">
            <inheritdoc />
        </member>
        <member name="M:MudBlazor.Extensions.Components.MoveContent.ImportModuleAndCreateJsAsync">
            <inheritdoc />
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExBaseInput`1">
            <summary>
            MudExBaseInput
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExBaseInput`1.Localizer">
            <summary>
            Localizer for localize texts
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExBaseInput`1.ServiceProvider">
            <summary>
            Injected service provider
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExBaseInput`1.JsRuntime">
            <summary>
            JsRuntime
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExBaseInput`1.MudExConfiguration">
            <summary>
            MudExConfiguration
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExBaseInput`1.LocalizerToUse">
            <summary>
            The localizer to use
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExBaseInput`1.Get``1">
            <summary>
            Returns the injected service for TService
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExBaseInput`1.GetServices``1">
            <summary>
            Returns the injected services for TService
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExBaseInput`1.TryLocalize(System.String,System.Object[])">
            <summary>
            Tries to localize given text if localizer and translation is available
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExBaseInput`1.AdornmentStart">
            <summary>
            The Adornment if used. By default, it is set to None.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExBaseInput`1.AdornmentEnd">
            <summary>
            The Adornment if used. By default, it is set to None.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExBaseInput`1.ForceShrink">
            <summary>
            ForceShrink
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExBaseInput`1.ChildContentStyle">
            <summary>
            ChildContentStyle
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExBaseInput`1.SkipUpdateProcessOnSetParameters">
            <summary>
            SkipUpdateProcessOnSetParameters
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExBaseInput`1.ValidateValue">
            <inheritdoc />
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExBaseInput`1.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
            <inheritdoc />
        </member>
        <member name="F:MudBlazor.Extensions.Components.MudExCardHoverMode.LightBulb">
            <summary>
            A LightBulb follows the mouse
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.MudExCardHoverMode.Simple">
            <summary>
            Simple just change background
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.MudExCardHoverMode.Zoom">
            <summary>
            Card zooms in
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.MudExCardHoverMode.CardEffect3d">
            <summary>
            Card has a 3D effect
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExCardList`1">
            <summary>
            Simple Card List with a hover effect.
            </summary>
            <typeparam name="TData"></typeparam>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExCardList`1.JsRuntime">
            <summary>
            Dependency Injection for IJSRuntime Service.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExCardList`1.JsReference">
            <summary>
            Gets or Sets IJSObjectReference JsReference Property.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExCardList`1.ModuleReference">
            <summary>
            Gets or Sets IJSObjectReference ModuleReference Property.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExCardList`1.ElementReference">
            <summary>
            Gets or Sets ElementReference Property.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExCardList`1.BackgroundColor">
            <summary>
            Gets or Sets MudExColor BackgroundColor Property.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExCardList`1.HoverColor">
            <summary>
            Gets or Sets MudExColor HoverColor Property.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExCardList`1.ZoomOnHover">
            <summary>
            Gets or Sets bool ZoomOnHover Property.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExCardList`1.HoverMode">
            <summary>
            Gets or Sets MudExCardHoverMode HoverMode Property.
            </summary>
            <value>
            MudExCardHoverMode
            </value>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExCardList`1.Justify">
            <summary>
            Gets or Sets Justify Property.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExCardList`1.Spacing">
            <summary>
            Gets or Sets Spacing Property.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExCardList`1.LightBulbSize">
            <summary>
            Gets or Sets Light Bulb Size Property.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExCardList`1.LightBulbSizeUnit">
            <summary>
            Gets or Sets Light Bulb Size Unit Property.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExCardList`1.AllAppliedHoverModes">
            <summary>
            Methods returns List of MudExCardHoverMode, where hover modes are applied.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExCardList`1.GetStyle">
            <summary>
            Style for outer element.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExCardList`1.OnParametersSetAsync">
            <summary>
            Method gets called OnParametersSetAsync.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExCardList`1.UpdateJs">
            <summary>
            Method gets called UpdateJs for fetching JSRuntime.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExCardList`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method gets called OnAfterRenderAsync for rendering and Initializing Modules.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExCardList`1.GetJsArguments">
            <summary>
            Returns arguments for passed to JS code
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExCardList`1.DisposeAsync">
            <summary>
            Method to dispose the module.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExChipSelect`1">
            <summary>
            A component that allows the user to select a value from a list of possible values and display it as Chips or default Combobox.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExChipSelect`1.AutoFocusFilter">
            <summary>
            Gets or Sets the AutoFocus for the filter input.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExChipSelect`1.ChipColor">
            <summary>
            Gets or Sets the color of the chip in the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExChipSelect`1.FilterEnabled">
            <summary>
            Gets or Sets the option to enable filtering in the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExChipSelect`1.MultiSelect">
            <summary>
            Gets or Sets the option to enable multi-select functionality in the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExChipSelect`1.AvailableItems">
            <summary>
            Gets or Sets the list of items that are available for selection.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExChipSelect`1.Filter">
            <summary>
            Search filter
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExChipSelect`1.ViewMode">
            <summary>
            Gets or Sets the view mode for the component.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.ViewMode">
            <summary>
            ViewMode for the ChipSelect
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.ViewMode.ChipsOnly">
            <summary>
            Only Chips
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.ViewMode.ChipsAdditionalAbove">
            <summary>
            Chips above the filed
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.ViewMode.ChipsAdditionalBelow">
            <summary>
            Chips below the field
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.ViewMode.NoChips">
            <summary>
            No chips, just work as listbox
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExColorBubble">
            <summary>
            A Component to quickly select a color
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorBubble.SelectColorText">
            <summary>
            Gets or sets the text for the select color button.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorBubble.ShowColorPreview">
            <summary>
            Gets or sets a value indicating whether to show a preview of the selected color in the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorBubble.AllowSelectOnPreviewClick">
            <summary>
            Gets or sets a value indicating whether to allow selecting a color by clicking on the preview of the selected color.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorBubble.CloseAfterSelect">
            <summary>
            Gets or sets a value indicating whether to close the selector after selecting a color.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorBubble.MinLuminance">
            <summary>
            Gets or sets the minimum luminance of the selected color.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorBubble.MaxLuminance">
            <summary>
            Gets or sets the maximum luminance of the selected color.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorBubble.SelectorSize">
            <summary>
            Gets or sets the size of the color selector.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorBubble.ColorChanged">
            <summary>
            Gets or sets the event callback for when the user changes the selected color.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorBubble.Color">
            <summary>
            Gets or sets the currently selected color.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorBubble.Height">
            <summary>
            Gets or sets the height of the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorBubble.Width">
            <summary>
            Gets or sets the width of the component.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExColorBubble.GetJsArguments">
            <summary>
            Gets the JavaScript arguments to pass to the component.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExColorBubble.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Renders the component after a change has been made.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExColorBubble.OnColorChanged(System.String)">
            <summary>
            Event that is triggered when the user changes the color.
            </summary>
            <param name="color">The new color value.</param>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExColorBubble.OnColorPreviewClick">
            <summary>
            Event that is triggered when the user clicks on the preview of the selected color.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExColorBubble.ShowSelectorAsync">
            <summary>
            Shows the color selector as an asynchronous operation.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExColorEdit">
            <summary>
            Component to Edit MudExColor
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorEdit.ServiceProvider">
            <summary>
            Gets or sets the <see cref="T:System.IServiceProvider"/> to be used for dependency injection.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorEdit.JsRuntime">
            <summary>
            Gets or sets the <see cref="T:Microsoft.JSInterop.IJSRuntime"/> to be used.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorEdit.LocalizerToUse">
            <summary>
            Gets the <see cref="T:Microsoft.Extensions.Localization.IStringLocalizer"/> to be used for localizing strings.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorEdit.Localizer">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Extensions.Localization.IStringLocalizer"/> to be used for localizing strings.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorEdit.FilterVariant">
            <summary>
            Gets or sets the variant filter.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorEdit.Value">
            <summary>
            Gets or sets the value of the color picker.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorEdit.ValueChanged">
            <summary>
            Gets or sets the callback method when the value of the color picker is changed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorEdit.CssVars">
            <summary>
            Gets or sets the Css Variables.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorEdit.ValueString">
            <summary>
            Gets or sets the string value of the color picker selected by the user.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorEdit.ValueStringChanged">
            <summary>
            Gets or sets the callback method when the string value of the color picker is changed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorEdit.ShowThemeColors">
            <summary>
            Gets or sets a value indicating whether to show theme colors.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorEdit.ShowHtmlColors">
            <summary>
            Gets or sets a value indicating whether to show HTML colors.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorEdit.ShowCssColorVariables">
            <summary>
            Gets or sets a value indicating whether to show CSS color variables.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorEdit.Filter">
            <summary>
            Gets or sets the filter for the color picker.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorEdit.PreviewMode">
            <summary>
            Gets or sets the color preview mode.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorEdit.DelayValueChangeToPickerClose">
            <summary>
            Gets or sets a value indicating whether to delay the value change of the color picker until the picker is closed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorEdit.AutoCloseBehaviour">
            <summary>
            Gets or sets the auto close behavior.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorEdit.MudColorStringFormat">
            <summary>
            Gets or sets the <see cref="T:MudBlazor.Utilities.MudColorOutputFormats"/>.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorEdit.ForceSelectOfMudColor">
            <summary>
            Gets or sets a value indicating whether to have always <see cref="T:MudBlazor.Utilities.MudColor"/> filled in <see cref="T:MudBlazor.Extensions.Core.MudExColor"/> as the OneOf value.
            With this setting turned on, you can use this edit control for all of your Color Properties.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorEdit.LabelCustomTab">
            <summary>
            Gets or sets the label for the custom tab.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorEdit.LabelDefinedTab">
            <summary>
            Gets or sets the label for the defined tab.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExColorEdit.TryLocalize(System.String,System.Object[])">
            <summary>
            tries to localize given string
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExColorEdit.OnInitialized">
            <inheritdoc />
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExColorEdit.OnParametersSetAsync">
            <inheritdoc />
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExColorEdit.OnAfterRender(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExColorEdit.OnPickerClosed">
            <inheritdoc />
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExColorEdit.OnPickerOpened">
            <inheritdoc />
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExColorEdit.StringValueChanged(System.String)">
            <inheritdoc />
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExColorPicker">
            <summary>
            A simple ColorPicker component that inherits the MudColorPicker but adds the possibility to delay the close event and use a native picker component from browser
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorPicker.DelayValueChangeToPickerClose">
            <summary>
            Set to true to delay value change event to picker close event
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorPicker.UseNativeBrowserControl">
            <summary>
            Set to true to use the browser native control as picker element
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorPicker.UseMudExColorBubble">
            <summary>
            Set to true to use MudExColorBubble as picker element
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorPicker.UseColorPaletteInNativeBrowserControl">
            <summary>
            Set to true to use the palette from picker for native browser element as well
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorPicker.InitialColor">
            <summary>
            The Initial color that should be selected
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExColorPicker.Inherited">
            <summary>
            Render the base component
            </summary>
            <returns></returns>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExColorPicker.ColorConverter">
            <summary>
            Converter for string and MudColor
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExColorPicker.OnInitialized">
            <inheritdoc />
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExColorPicker.OnPickerOpened">
            <inheritdoc />
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExColorPicker.OnPickerClosed">
            <inheritdoc />
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExCultureSelect">
            <summary>
            Drop down component to select a culture
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExCultureSelect.Inherited">
            <summary>
            The inherited render
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExCultureSelect.GetAvailableItemsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExDialog">
            <summary>
            MudExDialog is the component to use when you want to show a dialog inlined in your page with all DialogExtensions.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExDialog.Inherited">
            <summary>
            Render base component
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExDialog.OnParametersSet">
            <inheritdoc />
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExDialog.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
            <inheritdoc />
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExDialog.Show(System.String,MudBlazor.DialogOptions)">
            <summary>Show this inlined dialog</summary>
            <param name="title"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExDialog.OptionsEx">
            <summary>
            DialogOptionsEx for this dialog
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExDivider">
            <summary>
            A divider to separate content
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExDivider.Inherited">
            <summary>
            Render base component
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExDivider.ServiceProvider">
            <summary>
            Injected service provider
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExDivider.JsRuntime">
            <summary>
            JsRuntime
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExDivider.Label">
            <summary>
            Label
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExDivider.Color">
            <summary>
            Color
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExDivider.Size">
            <summary>
            Size
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExDivider.UseBorder">
            <summary>
            If this option is true border size is used instead of element size
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExDivider.OnParametersSetAsync">
            <inheritdoc />
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExDivider.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
            <inheritdoc />
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExDivider.GetStyle">
            <summary>
            Style for divider
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExEnumSelect`1">
            <summary>
            Drop down component to select an enum value or multiple on flags enums
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExEnumSelect`1.OnInitialized">
            <inheritdoc />
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExEnumSelect`1.OnParametersSetAsync">
            <inheritdoc />
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExEnumSelect`1.OnBeforeSelectedChanged(System.Collections.Generic.IEnumerable{`0})">
            <inheritdoc />
        </member>
        <member name="T:MudBlazor.Extensions.Components.BrowserContentTypePlugin">
            <summary>
            Plugin information for a content type plugin
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.BrowserContentTypePlugin.BrowserNames">
            <summary>
            Names of browsers
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.BrowserContentTypePlugin.BrowserNames.Chrome">
            <summary>
            Chrome
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.BrowserContentTypePlugin.BrowserNames.Opera">
            <summary>
            Opera
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.BrowserContentTypePlugin.BrowserNames.Edge">
            <summary>
            Edge
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.BrowserContentTypePlugin.BrowserNames.Safari">
            <summary>
            Safari
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.BrowserContentTypePlugin.BrowserNames.Firefox">
            <summary>
            Firefox
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.BrowserContentTypePlugin.Name">
            <summary>
            Name of content type plugin
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.BrowserContentTypePlugin.SupportedBrowsers">
            <summary>
            By plugin supported browsers
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.BrowserContentTypePlugin.SupportedContentTypes">
            <summary>
            Supported content types
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.BrowserContentTypePlugin.Url">
            <summary>
            Url to get the plugin
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.BrowserContentTypePlugin.Find(System.String,System.String)">
            <summary>
            Tries to find a plugin for given browser and content type
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.BrowserContentTypePlugin.Available">
            <summary>
            Known available plugins
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.IMudExFileDisplay">
            <summary>
            Interface to register an own file display component
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.IMudExFileDisplay.Name">
            <summary>
            Name of component
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.IMudExFileDisplay.WrapInMudExFileDisplayDiv">
            <summary>
            If this is true the component will wrap the display inside a div
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.IMudExFileDisplay.FileDisplayInfos">
            <summary>
            FileDisplayInfos for file. Will be dynamically set
            Important. The property for FileDisplayInfos from interface IMudExFileDisplayInfos needs to have the [Parameter] attribute
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.IMudExFileDisplay.CanHandleFile(MudBlazor.Extensions.Components.IMudExFileDisplayInfos)">
            <summary>
            Should return true if this component can handle a file with thw given informations
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.IMudExFileDisplayInfos">
            <summary>
            Interface containing infos for a file
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.IMudExFileDisplayInfos.FileName">
            <summary>
            Filename
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.IMudExFileDisplayInfos.Url">
            <summary>
            Url. (Can also be a data uri)
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.IMudExFileDisplayInfos.ContentType">
            <summary>
            Content type of file
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.IMudExFileDisplayInfos.ContentStream">
            <summary>
            Stream of file if its already loaded or dynamically created on client
            Note: This stream should not be closed or disposed.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExFileDisplayContentErrorResult">
            <summary>
            Represents a result of a file display error in the MudEx framework.
            This class provides several static methods to create different types of error results.
            Implements the <see cref="T:MudBlazor.Extensions.Components.IMudExFileDisplayInfos"/> interface.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayContentErrorResult.Unhandled">
            <summary>
            Returns a new instance of MudExFileDisplayContentErrorResult with IsHandled set to false.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayContentErrorResult.Handled">
            <summary>
            Returns a new instance of MudExFileDisplayContentErrorResult with IsHandled set to true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExFileDisplayContentErrorResult.DisplayMessage(System.String)">
            <summary>
            Returns a new instance of MudExFileDisplayContentErrorResult with a specified message.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExFileDisplayContentErrorResult.RedirectTo(System.String,System.String)">
            <summary>
            Returns a new instance of MudExFileDisplayContentErrorResult with a redirection to a specific URL and content type.
            </summary>
            <param name="url">The redirection URL.</param>
            <param name="contentType">The content type of the redirection.</param>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExFileDisplayContentErrorResult.RedirectTo(System.IO.Stream,System.String)">
            <summary>
            Returns a new instance of MudExFileDisplayContentErrorResult with a redirection to a stream and content type.
            </summary>
            <param name="stream">The stream to redirect to.</param>
            <param name="contentType">The content type of the stream.</param>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExFileDisplayContentErrorResult.WithMessage(System.String)">
            <summary>
            Sets the Message property and returns the current MudExFileDisplayContentErrorResult instance.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayContentErrorResult.IsHandled">
            <summary>
            Gets or sets a value indicating whether the error is handled.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayContentErrorResult.FileName">
            <summary>
            Gets or sets the name of the file.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayContentErrorResult.Url">
            <summary>
            Gets or sets the redirection URL.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayContentErrorResult.ContentType">
            <summary>
            Gets or sets the content type.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayContentErrorResult.Message">
            <summary>
            Gets or sets the error message.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayContentErrorResult.ContentStream">
            <summary>
            Gets or sets the content stream for redirection.
            Note: This stream should not be closed or disposed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayContentErrorResult.FallBackInIframe">
            <summary>
            Gets or sets a value indicating whether to fall back in iframe.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayContentErrorResult.SandBoxIframes">
            <summary>
            Gets or sets a value indicating whether to sandbox iframes.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExFileDisplay">
            <summary>
            Component to display a file in a iframe or object tag or in a registered viewer that implements IMudExFileDisplay
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplay.Url">
            <summary>
            Url to access file can also be a data Url
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplay.ContentType">
            <summary>
            ContentType of loaded file
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplay.CanClose">
            <summary>
            Can close file
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplay.OnCloseClick">
            <summary>
            Event for on close click
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplay.FallBackInIframe">
            Should be true if file is not a binary one
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplay.ViewDependsOnContentType">
            <summary>
            Set this to false to show everything in iframe/object tag otherwise zip, images audio and video will displayed in correct tags
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplay.ImageAsBackgroundImage">
            <summary>
            Set to true to use image as background-url instead of img tag
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplay.ShowContentError">
            <summary>
            Set to true to display content error is content can't displayed
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplay.SandBoxIframes">
            <summary>
            Set to true to use sandbox mode on iframe to disallow some danger js invocation
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplay.AllowDownload">
            <summary>
            Set to true to allow user to download the loaded file
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplay.AllowCopyUrl">
            <summary>
            Set to true to allow user to copy the file url to clipboard
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplay.FileName">
            <summary>
            Filename
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplay.ContentStream">
            <summary>
            Content stream of the file.
            Note: This stream should not be closed or disposed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplay.HandleContentErrorFunc">
            <summary>
            A function to handle content error.
            Return true if you have handled the error and false if you want to show the error message
            For example you can reset Url here to create a proxy fallback or display own not supported image or what ever.
            If you reset Url or Data here you need also to reset ContentType
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplay.CustomContentErrorMessage">
            <summary>
            Custom content error message to show
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplay.MediaType">
            <summary>
            Media Type for current file
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplay.PossiblePlugin">
            <summary>
            Returns a plugin that is useful to show the content if the content cant displayed 
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplay.Info">
            <summary>
            Current browser informations
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExFileDisplay.HandleContentError">
            <summary>
            Called if the js side has a content render error.
            This function returns true if it's handled and false if not.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExFileDisplay.GetJsArguments">
            <inheritdoc/>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExFileDisplay.OnParametersSetAsync">
            <inheritdoc/>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExFileDisplayDialog">
            <summary>
            Dialog to display a file using <see cref="T:MudBlazor.Extensions.Components.MudExFileDisplay"/> component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayDialog.MudDialog">
            <summary>
            The MudDialog instance
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayDialog.ClassContent">
            <summary>
            CSS classes applied to the content of the dialog.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayDialog.ShowContentError">
            <summary>
            Whether to show content error if content cannot be displayed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayDialog.Icon">
            <summary>
            Icon to display in the dialog.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayDialog.Url">
            <summary>
            URL to access the file or resource.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayDialog.ContentType">
            <summary>
            Content type of the loaded file or resource.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayDialog.ContentStream">
            <summary>
            Stream of the file or resource content.
            Note: This stream should not be closed or disposed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayDialog.Buttons">
            <summary>
            Action buttons to display in the dialog.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayDialog.HandleContentErrorFunc">
            <summary>
            Function to handle content error. Return true if the error is handled, false to show the error message.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayDialog.CustomContentErrorMessage">
            <summary>
            Custom message to show in case of content error.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayDialog.FallBackInIframe">
            <summary>
            Whether to use fallback to iframe if file is not binary.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayDialog.ViewDependsOnContentType">
            <summary>
            Whether to use specific tags for certain content types or to always use iframe/object tag.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayDialog.ImageAsBackgroundImage">
            <summary>
            Whether to use the image as background image instead of img tag.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayDialog.SandBoxIframes">
            <summary>
            Whether to use sandbox mode on iframes to disallow dangerous JS invocation.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayDialog.AllowDownload">
            <summary>
            Whether to allow user to download the loaded file.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExFileDisplayDialog.OnInitialized">
            <inheritdoc />
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExFileDisplayMarkdown">
            <summary>
            Simple component to display markdown files with MudExFileDisplay
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayMarkdown.Name">
            <summary>
            The name of the component
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayMarkdown.Value">
            <summary>
            The Current markdown string provided from file
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayMarkdown.CodeBlockTheme">
            <summary>
            The theme of the code block
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayMarkdown.LinkCommand">
            <summary>
            LinkCommand
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayMarkdown.TableCellMinWidth">
            <summary>
            TableCellMinWidth
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayMarkdown.Styling">
            <summary>
            Styling
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayMarkdown.OverrideLinkUrl">
            <summary>
            OverrideLinkUrl
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayMarkdown.OverrideHeaderTypo">
            <summary>
            OverrideHeaderTypo
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayMarkdown.FileDisplayInfos">
            <summary>
            The file display infos
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExFileDisplayMarkdown.CanHandleFile(MudBlazor.Extensions.Components.IMudExFileDisplayInfos)">
            <summary>
            Returns true if its a markdown file and we can handle it
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExFileDisplayMarkdown.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
            <inheritdoc />
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExFileDisplayZip">
            <summary>
            A Component to display the content of a zip file
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayZip.Name">
            <inheritdoc />
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayZip.WrapInMudExFileDisplayDiv">
            <inheritdoc />
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayZip.FileDisplayInfos">
            <inheritdoc />
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayZip.SearchString">
            <summary>
            SearchString for current filter
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayZip.AllowSearch">
            <summary>
            If true user is able to search
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayZip.RootFolderName">
            <summary>
            Name of root folder
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayZip.Url">
            <summary>
            Url
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayZip.ContentType">
            <summary>
            Content Type 
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayZip.ContentStream">
            <inheritdoc />
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayZip.ShowAsTree">
            <summary>
            True to display structure as tree
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayZip.AllowToggleTree">
            <summary>
            If true user can toggle between flat and tree view
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayZip.AllowDownload">
            <summary>
            If true user can download all or specific files from zip
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayZip.AllowPreview">
            <summary>
            If true user can preview containing files
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayZip.ActionButtonColor">
            <summary>
            Button Color for action icon button
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayZip.FilterMode">
            <summary>
            PropertyFilterMode
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayZip.ToolBarPaperClass">
            <summary>
            Css Class for toolbar paper
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayZip.StickyToolbar">
            <summary>
            True to have a sticky toolbar on top
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayZip.StickyToolbarTop">
            <summary>
            Top position if toolbar is sticky
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayZip.SelectionMode">
            <summary>
            File Selection Mode
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayZip.Selected">
            <summary>
            Selected files
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayZip.SelectedChanged">
            <summary>
            Event on selection change
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExFileDisplayZip.IsSelected(Nextended.Blazor.Models.ZipBrowserFile)">
            <summary>
            Returns true if given ZipFile entry is selected
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayZip.ShowContentError">
            <summary>
            Show content error
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayZip.FallBackInIframe">
            <summary>
            Set to true to render all failures in iframe fallback
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayZip.ViewDependsOnContentType">
            <summary>
            Set this to false to show everything in iframe/object tag otherwise zip, images audio and video will displayed in correct tags
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayZip.ImageAsBackgroundImage">
            <summary>
            Render images as background image instead of img tag
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayZip.SandBoxIframes">
            <summary>
            Use sandbox mode for iframe
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayZip.HandleContentErrorFunc">
            <summary>
            A function to handle content error.
            Return true if you have handled the error and false if you want to show the error message For example you can reset Url here to create a proxy fallback or display own not supported image or what ever.
            If you reset Url or Data here you need also to reset ContentType
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayZip.CustomContentErrorMessage">
            <summary>
            Custom error message for content error
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExFileDisplayZip.OnParametersSetAsync">
            <inheritdoc />
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFileDisplayZip.FileName">
            <inheritdoc />
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExFileDisplayZip.CanHandleFile(MudBlazor.Extensions.Components.IMudExFileDisplayInfos)">
            <inheritdoc />
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExFontSelect">
            <summary>
            Dropdown list component to select one ore more fonts
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExFontSelect.Inherited">
            <summary>
            Render base component
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFontSelect.FontFamily">
            <summary>
            FontFamily
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExFontSelect.WithGoogleLatinFonts">
            <summary>
            Set to true to allow selection of google latin fonts
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExFontSelect.GetAvailableItemsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExFontSelect.OnInitialized">
            <inheritdoc />
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExGradientText">
            <summary>
            A Component to display text with a gradient foreground or background
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExGradientText.ServiceProvider">
            <summary>
            Gets or sets the service provider to use when retrieving services.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExGradientText.JsRuntime">
            <summary>
            Gets the JavaScript interop instance.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExGradientText.Radius">
            <summary>
            Gets or sets the radius of the gradient.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExGradientText.GradientForeground">
            <summary>
            Gets or sets a value indicating whether the gradient should be applied to the text foreground.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExGradientText.TextFillColor">
            <summary>
            Gets or sets the fill color of the text.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExGradientText.Animate">
            <summary>
            Gets or sets a value indicating whether to animate the gradient.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExGradientText.AnimationDuration">
            <summary>
            Gets or sets the duration of the animation.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExGradientText.Palette">
            <summary>
            Gets or sets the collection of colors to use for the gradient.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExGradientText.OnParametersSetAsync">
            <inheritdoc />
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExGrid">
            <summary>
            A simple grid component that supports Columns, and Rows and ColSpan and RowSpan for containing sections.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExGrid.ChildContent">
            <summary>
            Gets or sets the child content of the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExGrid.Column">
            <summary>
            Gets or sets the column size for the component. Default is 4.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExGrid.Row">
            <summary>
            Gets or sets the row size for the component. Default is 4.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExGrid.Height">
            <summary>
            Gets or sets the height of the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExGrid.OnClick">
            <summary>
            Event callback for the click event.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExGrid.OnClickStopPropagation">
            <summary>
            Gets or sets a value indicating whether the click event should stop propagation. Default is false.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExGrid.OnContextMenu">
            <summary>
            Event callback for the context menu event.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExGrid.OnContextMenuPreventDefault">
            <summary>
            Gets or sets a value indicating whether the context menu event should prevent its default action. Default is false.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExGrid.OnContextMenuStopPropagation">
            <summary>
            Gets or sets a value indicating whether the context menu event should stop propagation. Default is false.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExGrid.OnClickHandler(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            The on click handler
            </summary>    
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExGridSection">
            <summary>
            This section can placed inside a MudExGrid component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExGridSection.ChildContent">
            <summary>
            Gets or sets the child content of the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExGridSection.Column">
            <summary>
            Gets or sets the column position for the component. Default is 1.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExGridSection.ColSpan">
            <summary>
            Gets or sets the column span of the component. Default is 1.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExGridSection.Row">
            <summary>
            Gets or sets the row position for the component. Default is 1.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExGridSection.RowSpan">
            <summary>
            Gets or sets the row span of the component. Default is 1.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExGridSection.OnClick">
            <summary>
            Event callback for the click event.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExGridSection.OnClickStopPropagation">
            <summary>
            Gets or sets a value indicating whether the click event should stop propagation. Default is false.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExGridSection.OnContextMenu">
            <summary>
            Event callback for the context menu event.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExGridSection.OnContextMenuPreventDefault">
            <summary>
            Gets or sets a value indicating whether the context menu event should prevent its default action. Default is false.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExGridSection.OnContextMenuStopPropagation">
            <summary>
            Gets or sets a value indicating whether the context menu event should stop propagation. Default is false.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExGridSection.OnClickHandler(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            The on click handler
            </summary>    
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExIconPicker">
            <summary>
            Component to Edit Icon values
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExIconPicker.ServiceProvider">
            <summary>
            Gets or sets the <see cref="T:System.IServiceProvider"/> to be used for dependency injection.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExIconPicker.LocalizerToUse">
            <summary>
            Gets the <see cref="T:Microsoft.Extensions.Localization.IStringLocalizer"/> to be used for localizing strings.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExIconPicker.Localizer">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Extensions.Localization.IStringLocalizer"/> to be used for localizing strings.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExIconPicker.PickerWidth">
            <summary>
            The width of the picker in pixels.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExIconPicker.DisableList">
            <summary>
            Set this to true to disable the list view
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExIconPicker.PickerHeight">
            <summary>
            The height of the picker in pixels.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExIconPicker.FilterVariant">
            <summary>
            Gets or sets the variant filter.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExIconPicker.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExIconPicker.ValueChanged">
            <summary>
            Gets or sets the callback method when the value of the picker is changed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExIconPicker.PropertyNameChanged">
            <summary>
            Gets or sets the callback method when the property name for the value of the is changed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExIconPicker.Available">
            <summary>
            Available Icons in this Picker. If not set they will be filled automatically from <see cref="P:MudBlazor.Extensions.Components.MudExIconPicker.IconTypes"/>
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExIconPicker.IconTypes">
            <summary>
            Here you can specify the class of icons you want to show. Default is MudBlazor.Icons
            But if you have for example installed MudBlazor.MaterialDesignIcons you can also pass typeof(MaterialDesignIcons) 
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExIconPicker.Filter">
            <summary>
            Gets or sets the filter for the icons.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExIconPicker.DelayValueChangeToPickerClose">
            <summary>
            Gets or sets a value indicating whether to delay the value change of the picker until the picker is closed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExIconPicker.AutoCloseOnSelect">
            <summary>
            Gets or sets the auto close behavior.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExIconPicker.AlwaysShowValue">
            <summary>
            The visible text value is by default the property path if possible set this to true to show always the value
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExIconPicker.PropertyName">
            <summary>
            Gets or sets the string name of the property for the value.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExIconPicker.TryLocalize(System.String,System.Object[])">
            <summary>
            Localizes a text
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExIconPicker.OnInitialized">
            <inheritdoc />
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExIconPicker.OnParametersSetAsync">
            <inheritdoc />
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExIconPicker.OnAfterRenderAsync(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExIconPicker.OnPickerClosed">
            <inheritdoc />
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExIconPicker.OnPickerOpened">
            <inheritdoc />
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExIconPicker.StringValueChanged(System.String)">
            <inheritdoc />
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExInput`1.InputType">
            <summary>
            Type of the input element. It should be a valid HTML5 input type.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExInput`1.AutoSize">
            <summary>
            If true, automatically resize the height regard to the text. Needs Lines parameter to set more than 1.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExInput`1.OnInput">
            <summary>
            Fires on input.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExInput`1.OnChange">
            <summary>
            Fires on change.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExInput`1.OnPaste(Microsoft.AspNetCore.Components.Web.ClipboardEventArgs)">
            <summary>
            Paste hook for descendants.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExInput`1.ChildContent">
            <summary>
            ChildContent of the MudInput will only be displayed if InputType.Hidden and if its not null.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExInput`1.OnIncrement">
            <summary>
            Invokes the callback when the Up arrow button is clicked when the input is set to <see cref="F:MudBlazor.InputType.Number"/>.
            Note: use the optimized control <see cref="T:MudBlazor.MudNumericField`1"/> if you need to deal with numbers.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExInput`1.OnDecrement">
            <summary>
            Invokes the callback when the Down arrow button is clicked when the input is set to <see cref="F:MudBlazor.InputType.Number"/>.
            Note: use the optimized control <see cref="T:MudBlazor.MudNumericField`1"/> if you need to deal with numbers.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExInput`1.HideSpinButtons">
            <summary>
            Hides the spin buttons for <see cref="T:MudBlazor.MudNumericField`1"/>
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExInput`1.Clearable">
            <summary>
            Show clear button.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExInput`1.OnClearButtonClick">
            <summary>
            Button click event for clear button. Called after text and value has been cleared.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExInput`1.OnMouseWheel">
            <summary>
            Mouse wheel event for input.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExInput`1.ClearIcon">
            <summary>
            Custom clear icon.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExInput`1.NumericUpIcon">
            <summary>
            Custom numeric up icon.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExInput`1.NumericDownIcon">
            <summary>
            Custom numeric down icon.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExInput`1.SetText(System.String)">
            <summary>
            Sets the input text from outside programmatically
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.Color">
            <summary>
            The color of the selected List Item.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.ChildContent">
            <summary>
            Child content of component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.ItemTemplate">
            <summary>
            Optional presentation template for items
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.ItemSelectedTemplate">
            <summary>
            Optional presentation template for selected items
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.ItemDisabledTemplate">
            <summary>
            Optional presentation template for disabled items
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.SelectAllTemplate">
            <summary>
            Optional presentation template for select all item
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.ToStringFunc">
            <summary>
            Defines how values are displayed in the drop-down list
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.ItemCollection">
            <summary>
            Predefined enumerable items. If its not null, creates list items automatically.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.SearchFunc">
            <summary>
            Custom search func for searchbox. If doesn't set, it search with "Contains" logic by default. Passed value and searchString values.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.SearchBox">
            <summary>
            If true, shows a searchbox for filtering items. Only works with ItemCollection approach.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.SearchBoxVariant">
            <summary>
            Search box text field variant.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.SearchBoxAdornment">
            <summary>
            Search box icon position.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.SearchBoxAutoFocus">
            <summary>
            If true, the search-box will be focused when the dropdown is opened.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.SearchBoxClearable">
            <summary>
            If true, the search-box has a clear icon.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.ClassSearchBox">
            <summary>
            SearchBox's CSS classes, seperated by space.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.Virtualize">
            <summary>
            Allows virtualization. Only work if ItemCollection parameter is not null.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.MaxItems">
            <summary>
            Set max items to show in list. Other items can be scrolled. Works if list items populated with ItemCollection parameter.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.OverscanCount">
            <summary>
            Overscan value for Virtualized list. Default is 2.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.MultiSelection">
            <summary>
            Allows multi selection and adds MultiSelectionComponent for each list item.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.MultiSelectionAlign">
            <summary>
            The MultiSelectionComponent's placement. Accepts Align.Start and Align.End
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.MultiSelectionComponent">
            <summary>
            The component which shows as a MultiSelection check.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.Clickable">
            <summary>
            Set true to make the list items clickable. This is also the precondition for list selection to work.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.SelectValueOnTab">
            <summary>
            If true the active (hilighted) item select on tab key. Designed for only single selection. Default is true.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.DisablePadding">
            <summary>
            If true, vertical padding will be removed from the list.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.DisableSelectedItemStyle">
            <summary>
            If true, selected items doesn't have a selected background color.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.Dense">
            <summary>
            If true, compact vertical padding will be applied to all list items.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.DisableGutters">
            <summary>
            If true, the left and right padding is removed on all list items.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.Disabled">
            <summary>
            If true, will disable the list item if it has onclick.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.SelectAll">
            <summary>
            If set to true and the MultiSelection option is set to true, a "select all" checkbox is added at the top of the list of items.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.SelectAllPosition">
            <summary>
            Sets position of the Select All checkbox
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.SelectAllText">
            <summary>
            Define the text of the Select All option.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.SecondaryBackgroundForNestedItemHeader">
            <summary>
            If true, change background color to secondary for all nested item headers.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.OnKeyDown">
            <summary>
            Fired on the KeyDown event.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.OnFocusOut">
            <summary>
            Fired on the OnFocusOut event.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.OnDoubleClick">
            <summary>
            Fired on the OnDoubleClick event.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.SelectedValue">
            <summary>
            The current selected value.
            Note: Make the list Clickable or set MultiSelection true for item selection to work.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.SelectedValues">
            <summary>
            The current selected values. Holds single value (SelectedValue) if MultiSelection is false.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.SelectedItem">
            <summary>
            The current selected list item.
            Note: make the list Clickable or MultiSelection or both for item selection to work.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.SelectedItems">
            <summary>
            The current selected listitems.
            Note: make the list Clickable for item selection to work.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.SelectedValueChanged">
            <summary>
            Called whenever the selection changed. Can also be called even MultiSelection is true.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.SelectedValuesChanged">
            <summary>
            Called whenever selected values changes. Can also be called even MultiSelection is false.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.SelectedItemChanged">
            <summary>
            Called whenever the selected item changed. Can also be called even MultiSelection is true.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.SelectedItemsChanged">
            <summary>
            Called whenever the selected items changed. Can also be called even MultiSelection is false.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExList`1.GetAllItems">
            <summary>
            Get all MudListItems in the list.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExList`1.GetItems">
            <summary>
            Get all items that holds value.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.CheckedIcon">
            <summary>
            Custom checked icon.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.UncheckedIcon">
            <summary>
            Custom unchecked icon.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExList`1.IndeterminateIcon">
            <summary>
            Custom indeterminate icon.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExList`1.Clear">
            <summary>
            Clears value(s) and item(s) and deactive all items.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExListItem`1.IsFunctional">
            <summary>
            Functional items does not hold values. If a value set on Functional item, it ignores by the MudList. They can not count on Items list (they count on AllItems), cannot be subject of keyboard navigation and selection.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExListItem`1.Text">
            <summary>
            The text to display
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExListItem`1.SecondaryText">
            <summary>
            The secondary text to display
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExListItem`1.Avatar">
            <summary>
            Avatar to use if set.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExListItem`1.AvatarClass">
            <summary>
            Avatar CSS Class to apply if Avatar is set.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExListItem`1.Href">
            <summary>
            Link to a URL when clicked.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExListItem`1.ForceLoad">
            <summary>
            If true, force browser to redirect outside component router-space.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExListItem`1.Disabled">
            <summary>
            If true, will disable the list item if it has onclick.
            The value can be overridden by the parent list.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExListItem`1.DisableGutters">
            <summary>
            If true, the left and right padding is removed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExListItem`1.DisableRipple">
            <summary>
            If true, disables ripple effect.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExListItem`1.OverrideMultiSelectionComponent">
            <summary>
            Overrided component for multiselection. Keep it null to have default one that MudList has.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExListItem`1.Icon">
            <summary>
            Icon to use if set.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExListItem`1.IconColor">
            <summary>
            The color of the icon.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExListItem`1.IconSize">
            <summary>
            Sets the Icon Size.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExListItem`1.AdornmentColor">
            <summary>
            The color of the adornment if used. It supports the theme colors.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExListItem`1.ExpandLessIcon">
            <summary>
            Custom expand less icon.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExListItem`1.ExpandMoreIcon">
            <summary>
            Custom expand more icon.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExListItem`1.Inset">
            <summary>
            If true, the List Subheader will be indented.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExListItem`1.OnClickStopPropagation">
            <summary>
            If true, stop propagation on click. Default is true.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExListItem`1.Dense">
            <summary>
            If true, compact vertical padding will be used.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExListItem`1.CommandParameter">
            <summary>
            Command parameter.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExListItem`1.Command">
            <summary>
            Command executed when the user clicks on an element.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExListItem`1.OnClickHandlerPreventDefault">
            <summary>
            Prevent default behavior when click on MudSelectItem. Default behavior is selecting the item and style adjustments.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExListItem`1.ChildContent">
            <summary>
            Display content of this list item. If set, overrides Text.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExListItem`1.NestedList">
            <summary>
            Add child list items here to create a nested list.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExListItem`1.OnClick">
            <summary>
            List click event.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExListItem`1.InitiallyExpanded">
            <summary>
            If true, expands the nested list on first display.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExListItem`1.Expanded">
            <summary>
            Expand or collapse nested list. Two-way bindable. Note: if you directly set this to
            true or false (instead of using two-way binding) it will force the nested list's expansion state.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExListItem`1.ExpandedChanged">
            <summary>
            Called when expanded state change.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExListItem`1.IsSelected">
            <summary>
            Selected state of the option. Readonly. Use SetSelected for selecting.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExListSubheader`1.ChildContent">
            <summary>
            The child render fragment.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExListSubheader`1.DisableGutters">
            <summary>
            Disables the left and right spaces.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExListSubheader`1.Sticky">
            <summary>
            If true, subheader behaves sticky and remains on top until other subheader comes to top.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExListSubheader`1.SecondaryBackground">
            <summary>
            If true, subheader has darken background.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExMessageDialog">
            <summary>
            Simple MessageDialog
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExMessageDialog.ClassContent">
            <summary>
            Gets or sets the class for the content of the dialog
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExMessageDialog.ClassActions">
            <summary>
            The CSS class to apply to the action buttons of the dialog.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExMessageDialog.ContentStyle">
            <summary>
            The CSS styles to apply to the content area of the dialog.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExMessageDialog.Message">
            <summary>
            Gets or sets the message of the dialog
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExMessageDialog.AllowEmptyActions">
            <summary>
            Gets or sets whether empty actions are allowed in the dialog
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExMessageDialog.Icon">
            <summary>
            Gets or sets the icon of the dialog
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExMessageDialog.Details">
            <summary>
            Gets or sets the details of the dialog
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExMessageDialog.Buttons">
            <summary>
            Gets or sets the buttons of the dialog
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExMessageDialog.Content">
            <summary>
            Gets or sets the content of the dialog
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExMessageDialog.ShowProgress">
            <summary>
            Gets or sets whether progress is shown in the dialog
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExMessageDialog.ProgressValue">
            <summary>
            Gets or sets the value of the progress shown in the dialog
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExMessageDialog.ProgressMin">
            <summary>
            Gets or sets the minimum value of the progress shown in the dialog
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExMessageDialog.ProgressMax">
            <summary>
            Gets or sets the maximum value of the progress shown in the dialog
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExMessageDialog.Component">
            <summary>
            Gets or sets the component associated with the dialog
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExMessageDialog.Cancel">
            <summary>
            Cancels the dialog
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExPopover">
            <summary>
            A Popover can be used to display some content on top of another.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExPopover.ServiceProvider">
            <summary>
            Injected service provider to use when retrieving services.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExPopover.JsRuntime">
            <summary>
            Gets the JSRuntime.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExPopover.SelectorsForIgnoreBlur">
            <summary>
            The selectors to ignore when handling blur events.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExPopover.DisposeEvent">
            <summary>
            Indicates whether the event should be disposed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExPopover.Animation">
            <summary>
            The animation type.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExPopover.AnimationTimingFunction">
            <summary>
            The animation timing function.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExPopover.AnimationPosition">
            <summary>
            The dialog position.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExPopover.OnBlur">
            <summary>
            Event delegate for handling blur events.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExPopover.OpenChanged">
            <summary>
            Event delegate for handling open state changes.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExPopover.OnInitializedAsync">
            <inheritdoc />
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExPopover.OnAfterRenderAsync(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExPopover.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
            <summary>
            Sets the component's parameters asynchronously.
            </summary>
            <param name="parameters">The parameter view.</param>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExPopover.OnOpenChanged(System.Boolean)">
            <summary>
            Handles open state change event.
            </summary>
            <param name="newOpenValue">The new open value.</param>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExPopover.OnParametersSetAsync">
            <inheritdoc />
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExPopover.PopoverClass">
            <summary>
            Gets the popover class.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExPopover.PopoverStyles">
            <summary>
            Gets the popover styles.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExPopover.OnFocusLeft(Microsoft.AspNetCore.Components.Web.PointerEventArgs)">
            <summary>
            Handles focus left event.
            </summary>
            <param name="arg">The pointer event args.</param>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExPopover.Inherited">
            <summary>
            Gets the inherited render fragment.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExPopover.DisposeAsync">
            <summary>
            Disposes of the object.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExPopover.Dispose">
            <summary>
            Disposes of the object.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExPromptDialog">
            <summary>
            MudExPromptDialog Component
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExPromptDialog.MudDialog">
            <summary>
            Cascading parameter of the MudDialogInstance object, which is responsible for the dialog instance.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExPromptDialog.Immediate">
            <summary>
            Boolean value indicating whether prompt should be submitted immediately.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExPromptDialog.SubmitOnEnter">
            <summary>
            Boolean value indicating whether prompt should be submitted when Enter key is pressed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExPromptDialog.OkText">
            <summary>
            The text of the "Ok" button.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExPromptDialog.CancelText">
            <summary>
            The text of the "Cancel" button.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExPromptDialog.Value">
            <summary>
            The initial value of the input field.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExPromptDialog.Message">
            <summary>
            The message to be displayed in the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExPromptDialog.Icon">
            <summary>
            The icon of the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExPromptDialog.Details">
            <summary>
            The list of strings with additional details of the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExPromptDialog.CanConfirm">
            <summary>
            The function that determines whether the prompt window can be confirmed or not.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExPromptDialog.OnInitialized">
            <inheritdoc />
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExPromptDialog.Submit">
            <summary>
            Method for submitting the prompt window.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExPromptDialog.Cancel">
            <summary>
            Method for cancelling the prompt window.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExPromptDialog.IsValid">
            <summary>
            Method that determines if the input value is a valid entry.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExSelect`1">
            <summary>
            An extended SelectBox component that allows to select multiple items and provides a search function also internally the MudExPopover is used and you can specify animations as well
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.Items">
            <summary>
            The collection of items within this select
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.RenderChipsAdditional">
            <summary>
            Render chips additional to item content above or below the select box
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.SearchString">
            <summary>
            Search string for filtering items
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.HighlightSearch">
            <summary>
            Set to true to highlight matched text in the dropdown list
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.ForMultiple">
            <summary>
            Specify an expression which returns the model's field for which validation messages should be displayed when multiple items are selected.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.AvailableItemsLoadFunc">
            <summary>
            Gets or Sets the function that is used to asynchronously load available items.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.UpdateItemsOnStateChange">
            <summary>
            Gets or Sets a value indicating whether to update items on state change. That means if true the items load func will executed then
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExSelect`1.OnParametersSetAsync">
            <inheritdoc />
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExSelect`1.GetAvailableItemsAsync(System.Threading.CancellationToken)">
            <summary>
            returns all available items
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.PopoverAnimation">
            <summary>
            The animation type.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.PopoverAnimationTimingFunction">
            <summary>
            The animation timing function.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.PopoverAnimationPosition">
            <summary>
            The dialog position.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.InputClass">
            <summary>
            User class names for the input, separated by space
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.InputStyle">
            <summary>
            User style names for the input, separated by space
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.OnOpen">
            <summary>
            Fired when dropdown opens.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.OnClose">
            <summary>
            Fired when dropdown closes.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.ChildContent">
            <summary>
            Add the MudSelectItems here
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.ItemTemplate">
            <summary>
            Optional presentation template for items
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.ItemSelectedTemplate">
            <summary>
            Optional presentation template for selected items
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.ItemDisabledTemplate">
            <summary>
            Optional presentation template for disabled items
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.ItemDisabledFunc">
            <summary>
            Function to be invoked when checking whether an item should be disabled or not. Works both with renderfragment and ItemCollection approach.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.TemplateClass">
            <summary>
            Classname for item template or chips.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.SelectValueOnTab">
            <summary>
            If true the active (hilighted) item select on tab key. Designed for only single selection. Default is true.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.NoWrap">
            <summary>
            If false multiline text show. Default is false.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.PopoverClass">
            <summary>
            User class names for the popover, separated by space
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.DisablePopoverPadding">
            <summary>
            User class names for the popover, separated by space
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.DisableSelectedItemStyle">
            <summary>
            If true, selected items doesn't have a selected background color.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.Dense">
            <summary>
            If true, compact vertical padding will be applied to all Select items.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.OpenIcon">
            <summary>
            The Open Select Icon
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.Color">
            <summary>
            Dropdown color of select. Supports theme colors.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.CloseIcon">
            <summary>
            The Close Select Icon
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.ValuePresenter">
            <summary>
            The value presenter.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.SelectAll">
            <summary>
            If set to true and the MultiSelection option is set to true, a "select all" checkbox is added at the top of the list of items.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.SelectAllPosition">
            <summary>
            Sets position of the Select All checkbox
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.SelectAllText">
            <summary>
            Define the text of the Select All option.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.MultiSelectionTextFunc">
            <summary>
            Function to define a customized multiselection text.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.SearchFunc">
            <summary>
            Custom search func for searchbox. If doesn't set, it search with "Contains" logic by default. Passed value and searchString values.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.ItemCollection">
            <summary>
            If not null, select items will automatically created regard to the collection.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.Virtualize">
            <summary>
            Allows virtualization. Only work is ItemCollection parameter is not null.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.ChipCloseable">
            <summary>
            If true, chips has close button and remove from SelectedValues when pressed the close button.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.Delimiter">
            <summary>
            Parameter to define the delimited string separator.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.RelativeWidth">
            <summary>
            If true popover width will be the same as the select component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.MaxHeight">
            <summary>
            Sets the maxheight the Select can have when open.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.AnchorOrigin">
            <summary>
            Set the anchor origin point to determen where the popover will open from.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.TransformOrigin">
            <summary>
            Sets the transform origin point for the popover.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.Direction">
            <summary>
            Sets the direction the Select menu should open.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.OffsetX">
            <summary>
            If true, the Select menu will open either before or after the input (left/right).
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.OffsetY">
            <summary>
            If true, the Select menu will open either before or after the input (top/bottom).
            </summary>
            [ExcludeFromCodeCoverage]
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.Strict">
            <summary>
            If true, the Select's input will not show any values that are not defined in the dropdown.
            This can be useful if Value is bound to a variable which is initialized to a value which is not in the list
            and you want the Select to show the label / placeholder instead.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.Clearable">
            <summary>
            Show clear button.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.SearchBox">
            <summary>
            If true, shows a searchbox for filtering items. Only works with ItemCollection approach.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.SearchBoxAutoFocus">
            <summary>
            If true, the search-box will be focused when the dropdown is opened.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.SearchBoxClearable">
            <summary>
            If true, the search-box has a clear icon.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.SearchBoxVariant">
            <summary>
            Search box text field variant.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.SearchBoxAdornment">
            <summary>
            Search box icon position.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.LockScroll">
            <summary>
            If true, prevent scrolling while dropdown is open.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.OnClearButtonClick">
            <summary>
            Button click event for clear button. Called after text and value has been cleared.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.CheckedIcon">
            <summary>
            Custom checked icon.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.UncheckedIcon">
            <summary>
            Custom unchecked icon.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.IndeterminateIcon">
            <summary>
            Custom indeterminate icon.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.MultiSelection">
            <summary>
            If true, multiple values can be selected via checkboxes which are automatically shown in the dropdown
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.MultiSelectionAlign">
            <summary>
            The MultiSelectionComponent's placement. Accepts Align.Start and Align.End
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.MultiSelectionComponent">
            <summary>
            The component which shows as a MultiSelection check.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.Comparer">
            <summary>
            The Comparer to use for comparing selected values internally.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.ToStringFunc">
            <summary>
            Defines how values are displayed in the drop-down list
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.SelectedValues">
            <summary>
            Set of selected values. If MultiSelection is false it will only ever contain a single value. This property is two-way bindable.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExSelect`1.OnBeforeSelectedChanged(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            is called before the selected items change.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.SelectedValuesChanged">
            <summary>
            Fires when SelectedValues changes.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelect`1.SelectedListItemsChanged">
            <summary>
            Should only be used for debugging and development purposes.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExSelect`1.SelectClearButtonClickHandlerAsync(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            Extra handler for clearing selection.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExSelect`1.Clear">
            <summary>
            Clear the selection
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExSelect`1.HasValue(`0)">
            <summary>
            Fixes issue #4328
            Returns true when MultiSelection is true and it has selected values(Since Value property is not used when MultiSelection=true
            </summary>
            <param name="value"></param>
            <returns>True when component has a value</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExSelect`1.ValidateValue">
            <inheritdoc />
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelectItemGroup`1.Value">
            <summary>
            A user-defined option that can be selected
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelectItemGroup`1.Text">
            <summary>
            A user-defined option that can be selected
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelectItemGroup`1.Nested">
            <summary>
            A user-defined option that can be selected
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelectItemGroup`1.InitiallyExpanded">
            <summary>
            Sets the group's expanded state on popover opening. Works only if nested is true.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelectItemGroup`1.Sticky">
            <summary>
            Sticky header for item group. Works only with nested is false.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSelectItemGroup`1.HideContent">
            <summary>
            Select items with HideContent==true are only there to register their RenderFragment with the select but
            wont render and have no other purpose!
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExSlideBar">
            <summary>
            A Component that can used to slide in a ChildContent from the bottom, top , left or right by mouseover.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSlideBar.SelectorsToKeepOpenOnMouseLeave">
            <summary>
            Here you can specify some selectors if any of them available in dom element will not collapse on mouse leave
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSlideBar.Position">
            <summary>
            The position where the MudExSlideBar should start to slide from.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSlideBar.AutoCollapse">
            <summary>
            If true, the MudExSlideBar will collapse automatically when the mouse leaves its bounds.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSlideBar.OpacityNotFocused">
            <summary>
            Determines the opacity of the MudExSlideBar when it is not focused.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSlideBar.RelativeToParent">
            <summary>
            If true, the position of the MudExSlideBar will be relative to the parent element.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSlideBar.IsOpen">
            <summary>
            Gets or sets whether the MudExSlideBar is open.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSlideBar.BackgroundColor">
            <summary>
            The background color of the MudExSlideBar.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSlideBar.BorderColor">
            <summary>
            The border color of the MudExSlideBar.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSlideBar.BorderSize">
            <summary>
            The border size of the MudExSlideBar.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSlideBar.IsOpenChanged">
            <summary>
            An event that is raised when the IsOpen property changes.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSlideBar.ChildContent">
            <summary>
            The child content of the MudExSlideBar.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSlideBar.DisableOpacityChange">
            <summary>
            If true, changes in opacity of the MudExSlideBar are ignored.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSlideBar.HideContentWhenCollapsed">
            <summary>
            If true, the child content of the MudExSlideBar will be hidden when the MudExSlideBar is collapsed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSlideBar.Size">
            <summary>
            Size depends on position if its set as height or width
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExSlideBar.Show">
            <summary>
            Shows the MudExSlideBar.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExSlideBar.Hide">
            <summary>
            Hides the MudExSlideBar
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExSlideBar.MouseEnter">
            <summary>
            Mouse enter event handling.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExSlideBar.MouseLeave">
            <summary>
            Mouse leave event handling.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExSlideBar.Style">
            <summary>
            Returns the inline styles of the MudExSlideBar.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSlideBar.BorderDirection">
            <summary>
            The direction where the border of the MudExSlideBar should be drawn.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExSlideBar.CssClass">
            <summary>
            Returns the CSS classes of the MudExSlideBar.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExSplitPanel">
            <summary>
            A SplitPanel Component 
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSplitPanel.Left">
            <summary>
            The content that will be displayed on the left or top hand side of the SplitPanel
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSplitPanel.Right">
            <summary>
            The content that will be displayed on the right or bottom hand side of the SplitPanel
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSplitPanel.ColumnLayout">
            <summary>
            Sets whether the SplitPanel component should lay out horizontally
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSplitPanel.Reverse">
            <summary>
            Sets whether the SplitPanel component should reverse its flex direction
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSplitPanel.UpdateSizesInPercentage">
            <summary>
            Sets whether the sizes of the panes should be updated in percentage values rather than pixels
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSplitPanel.Splittable">
            <summary>
            Sets whether the SplitPanel component should be splittable
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSplitPanel.SplitterSize">
            <summary>
            Size of splitter
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSplitPanel.SplitterColor">
            <summary>
            Color of splitter
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSplitPanel.IconRight">
            <summary>
            Specifies the icon for the right direction.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSplitPanel.IconLeft">
            <summary>
            Specifies the icon for the left direction.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSplitPanel.IconUp">
            <summary>
            Specifies the icon for the upward direction.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSplitPanel.IconDown">
            <summary>
            Specifies the icon for the downward direction.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSplitPanel.IsInitiallyCollapsed">
            <summary>
            Indicates if the component is collapsed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSplitPanel.IsCollapsible">
            <summary>
            Indicates if the component can be collapsed.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExSplitPanel.GetStyle">
            <summary>
            Gets the style string for the SplitPanel component
            </summary>
            <returns>The style string containing the flex-direction property value</returns>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExSplitPanelItem">
            <summary>
            SplitPanelItem for MudExSplitPanel component
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSplitPanelItem.Panel">
            <summary>
            The parent MudExSplitPanel component
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSplitPanelItem.ChildContent">
            <summary>
            The child content of MudExSplitPanelItem component
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSplitPanelItem.MinSize">
            <summary>
            The min size of MudExSplitPanelItem component
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSplitPanelItem.SizeUnit">
            <summary>
            The CSS unit of MudExSplitPanelItem component's size
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExSplitPanelItem.GetClass">
            <summary>
            Get the CSS class of MudExSplitPanelItem component
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExSplitPanelItem.GetStyle">
            <summary>
            Get the CSS style of MudExSplitPanelItem component
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExSplitter">
            <summary>
            A Splitter Component
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSplitter.JsReference">
            <inheritdoc/>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSplitter.ModuleReference">
            <inheritdoc/>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSplitter.ElementReference">
            <inheritdoc/>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSplitter.UpdateSizesInPercentage">
            <summary>
            Indicates whether to update sizes in percentage
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExSplitter.Reverse">
            <summary>
            Indicates whether the Splitter is reversed
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExSplitter.OnInitializedAsync">
            <inheritdoc/>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExSplitter.OnParametersSetAsync">
            <inheritdoc/>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExSplitter.GetJsArguments">
            <inheritdoc/>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExSplitter.GetElementSizes">
            <summary>
            Returns current size information for next and preview element
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExSplitter.Reset">
            <summary>
            Resets to initial
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExSplitter.Restore">
            <summary>
            Restores the state to last sizes
            </summary>    
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExSplitter.Options">
            <summary>
            Returns options for setting up the Splitter.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExSplitter.OnAfterRenderAsync(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExSplitter.DisposeAsync">
            <inheritdoc/>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExTaskBar">
            <summary>
            MudExTaskBar inherits the MudExSlideBar and provides a tabbar to select non modal dialogs. Just provide <MudExTaskBar/> somewhere in your Layout
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExTaskBar.OnlyVisibleWithWindows">
            <summary>
            When true the taskbar is only visible if a window is open
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExTaskBar.HasItems">
            <summary>
            Is true if the taskbar contains items
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExTaskBar.OnInitialized">
            <inheritdoc />
        </member>
        <member name="T:MudBlazor.Extensions.Components.DialogData">
            <summary>
            Data for a dialog. This data is provided by the dialog itself and used in DialogTaskBarInfo
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.DialogData.Title">
            <summary>
            The title of the dialog
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.DialogData.Icon">
            <summary>
            Icon for dialog
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.DialogTaskBarInfo">
            <summary>
            DialogTaskBarInfo an item in the task bar
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.DialogTaskBarInfo.#ctor(MudBlazor.IDialogReference,MudBlazor.Extensions.Components.DialogData)">
            <summary>
            Creates a new DialogTaskBarInfo for given dialog
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.DialogTaskBarInfo.DialogData">
            <summary>
            Data for the dialog
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.DialogTaskBarInfo.DialogId">
            <summary>
            Id of the dialog
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.DialogTaskBarInfo.DialogReference">
            <summary>
            Reference to dialog
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.ThemePreset`1">
            <summary>
            Theme preset is just a wrapper class for a name and a theme
            </summary>
            <typeparam name="TTheme"></typeparam>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ThemePreset`1.Id">
            <summary>
            Id of the preset can used if item is stored or loaded from database
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ThemePreset`1.Name">
            <summary>
            Name of the theme
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ThemePreset`1.Description">
            <summary>
            Optional description for the theme
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ThemePreset`1.Theme">
            <summary>
            The Theme itself. 
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ThemePreset`1.#ctor">
            <summary>
            Creates an instance
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ThemePreset`1.#ctor(System.String,`0)">
            <summary>
            Creates an instance with name and theme
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ThemePreset`1.#ctor(System.String,System.String,`0)">
            <summary>
            Creates an instance with name, theme and description
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ThemePreset`1.op_Implicit(MudBlazor.Extensions.Components.ThemePreset{`0})~`0">
            <summary>
            Implicit assignable as TTheme
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.ThemeChangedArgs`1">
            <summary>
            Arguments for theme saved, deleted etc
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ThemeChangedArgs`1.#ctor(MudBlazor.Extensions.Components.ThemePreset{`0},`0)">
            <summary>
            Creates new instance of ThemeChangedArgs
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ThemeChangedArgs`1.Preset">
            <summary>
            The used original Preset
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ThemeChangedArgs`1.Theme">
            <summary>
            The current theme with all changes applied
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ThemeChangedArgs`1.op_Implicit(System.ValueTuple{`0,MudBlazor.Extensions.Components.ThemePreset{`0}})~MudBlazor.Extensions.Components.ThemeChangedArgs{`0}">
            <summary>
            Implicit cast from data tuple
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.ThemePreset">
            <summary>
            Static helper class for creating instances of ThemePresets.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ThemePreset.Create``1(System.String,``0)">
            <summary>
            Creates a new theme preset with a given name and theme.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ThemePreset.Create``1(System.String,System.String,``0)">
            <summary>
            Creates a new theme preset with a given name, description, and theme.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ThemePreset.Create``1(System.Collections.Generic.KeyValuePair{System.String,``0}[])">
            <summary>
            Creates a collection of theme presets from an array of key-value pairs.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ThemePreset.Create``1(System.Tuple{System.String,``0}[])">
            <summary>
            Creates a collection of theme presets from an array of tuples.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ThemePreset.Create``1(System.Tuple{System.String,System.String,``0}[])">
            <summary>
            Creates a collection of theme presets from an array of tuples with descriptions.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ThemePreset.Create``1(System.Collections.Generic.IDictionary{System.String,``0})">
            <summary>
            Creates a collection of theme presets from a dictionary.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ThemePreset.Create``1(System.ValueTuple{System.String,``0}[])">
            <summary>
            Creates a collection of theme presets from an array of tuples.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ThemePreset.Create``1(System.Linq.Expressions.Expression{System.Func{``0}}[])">
            <summary>
            Creates a collection of theme presets from an array of expressions.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ThemePreset.Create``1(System.ValueTuple{System.String,System.String,``0}[])">
            <summary>
            Creates a collection of theme presets from an array of tuples with descriptions.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.ThemeEditMode">
            <summary>
            Theme edit mode for MudExThemeEdit
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.ThemeEditMode.Simple">
            <summary>
            Edit mode simple with auto sync for multiple targets
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.ThemeEditMode.Full">
            <summary>
            Every property can be edited manually 
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExThemeEdit`1">
            <summary>
            MudExThemeEdit is a powerful component to edit one ore more themes
            </summary>
            <typeparam name="TTheme"></typeparam>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeEdit`1.PropertiesForSimpleMode">
            <summary>
            Here you can set Property names or full paths and only these properties are available when simple mode is used.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeEdit`1.PaletteColorsToSync">
            <summary>
            Here you can set Properties from Palette that should sync with the other palette.
            If you are in dark only mode and change one of these properties this will applied to the light pallete then as well.
            Default is Primary,Secondary, Tertiary, Info, Success, Warning and error
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeEdit`1.ShowCancelButton">
            <summary>
            if true user can click on cancel
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeEdit`1.ShowSaveButton">
            <summary>
            if true user can click on save
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeEdit`1.AllowImport">
            <summary>
            If true user can import json themes
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeEdit`1.AllowExport">
            <summary>
            If true user can export theme as json
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeEdit`1.AutoSaveRestoreState">
            <summary>
            If true the state of current theme and edit values are stored in storage and restored automatically
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeEdit`1.Theme">
            <summary>
            The theme to edit or current theme from preset
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeEdit`1.InitialTheme">
            <summary>
            The theme that will used for reset
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeEdit`1.EditMode">
            <summary>
            Edit mode (default simple)
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeEdit`1.AllowModeToggle">
            <summary>
            If true user can switch between simple and full edit mode
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeEdit`1.IsDark">
            <summary>
            This bool represents a tri state. True to edit only dark color palette, false to edit only light color palette and null to edit both
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeEdit`1.MetaInformation">
            <summary>
            Object edit Meta 
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeEdit`1.Presets">
            <summary>
            This collection of presets will be used to populate the dropdown for preset selection
            If its allowed user can also add or delete from this collection
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeEdit`1.AllowPresetsEdit">
            <summary>
            If true you can add or delete themes
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeEdit`1.CanDelete">
            <summary>
            If function returns true user can delete theme from param
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeEdit`1.ThemeCreated">
            <summary>
            Raised when new theme is created
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeEdit`1.ThemeDeleted">
            <summary>
            Raised when Theme is deleted
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeEdit`1.ThemeChanged">
            <summary>
            Raised when something in Theme or whole theme has changed
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeEdit`1.EditModeChanged">
            <summary>
            Raised when edit mode changed
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeEdit`1.ThemeSaved">
            <summary>
            Raised when user clicks on save
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeEdit`1.EditCanceled">
            <summary>
            Raised when user clicks on cancel
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeEdit`1.ObjectEditor">
            <summary>
            Reference to MudExObjectEdit
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExThemeEdit`1.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
            <inheritdoc />
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExThemeEdit`1.OnParametersSet">
            <inheritdoc />
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExThemeEdit`1.OnAfterRenderAsync(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExThemeSelect`1">
            <summary>
            Component to select a theme from a list of themes.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeSelect`1.TypoThemeName">
            <summary>
            Typography for Name
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeSelect`1.TypoThemeDescription">
            <summary>
            Typography for description
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeSelect`1.PreviewImageSize">
            <summary>
            Size of preview image
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeSelect`1.SelectVariant">
            <summary>
            Variant if SelectionMode is ThemeSelectionMode.Select
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeSelect`1.Label">
            <summary>
            Label
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeSelect`1.NameContainerStyle">
            <summary>
            Style for theme name container
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeSelect`1.ItemStyle">
            <summary>
            Style for one theme item
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeSelect`1.ItemClass">
            <summary>
            Class for one theme item
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeSelect`1.SelectionMode">
            <summary>
            Gets or sets the selection mode of the component with a default value of <see cref="F:MudBlazor.Extensions.Components.ThemeSelectionMode.Select"/>.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeSelect`1.PreviewMode">
            <summary>
            Gets or sets the preview mode of the component with a default value of <see cref="F:MudBlazor.Extensions.Components.ThemePreviewMode.BothDiagonal"/>.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeSelect`1.Available">
            <summary>
            Gets or sets the available themes.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeSelect`1.Selected">
            <summary>
            Gets or sets the currently selected theme.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeSelect`1.SelectedChanged">
            <summary>
            Event that is raised when the <see cref="P:MudBlazor.Extensions.Components.MudExThemeSelect`1.Selected"/> property is changed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeSelect`1.SelectedThemeChanged">
            <summary>
            Event that is raised when the <see cref="P:MudBlazor.Extensions.Components.MudExThemeSelect`1.SelectedTheme"/> property is changed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeSelect`1.SelectedValueChanged">
            <summary>
            Event that is raised when the <see cref="P:MudBlazor.Extensions.Components.MudExThemeSelect`1.SelectedValue"/> property is changed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeSelect`1.SelectedValue">
            <summary>
            Gets or sets the selected theme ads object to allow binding to non generic components
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExThemeSelect`1.SelectedTheme">
            <summary>
            Gets or sets the selected theme from the available themes.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExThemeSelect`1.OnInitialized">
            <inheritdoc />
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExThemeSelect`1.PreviewImage(MudBlazor.Extensions.Core.MudExDimension)">
            <summary>
            Returns a preview image of the theme with the specified dimensions.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExThemeSelect`1.PreviewImage(`0,MudBlazor.Extensions.Core.MudExDimension)">
            <summary>
            Returns a preview image of the specified theme with the specified dimensions.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExThemeSelect`1.IsOpen">
            <summary>
            Returns a boolean indicating whether the dropdown menu of the component is open or closed.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExThemeSelect`1.GetThemeNameContainerStyle">
            <summary>
            Returns the style of the container of the theme name label.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.ThemePreviewMode">
            <summary>
            Enumeration representing the preview mode of a theme.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.ThemePreviewMode.DarkOnly">
            <summary>
            Only the dark theme is shown in preview.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.ThemePreviewMode.LightOnly">
            <summary>
            Only the light theme is shown in preview.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.ThemePreviewMode.BothDiagonal">
            <summary>
            Both the dark and light theme are shown in preview as one image sliced diagonal.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.ThemePreviewMode.BothHorizontal">
            <summary>
             Both the dark and light theme are shown in preview as one image sliced horizontal.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.ThemePreviewMode.BothVertical">
            <summary>
             Both the dark and light theme are shown in preview as one image sliced vertical.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.ThemeSelectionMode">
            <summary>
            Enumeration representing the selection mode of a theme.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.ThemeSelectionMode.Select">
            <summary>
            Selection Dropdown
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.ThemeSelectionMode.ItemList">
            <summary>
            ItemList
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExToggleableSearch">
            <summary>
            Simple component to expand a Search field 
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExToggleableSearch.FilterMode">
            <summary>
            The Toggle mode
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExToggleableSearch.Filter">
            <summary>
            The filter value itself
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExToggleableSearch.Immediate">
            <summary>
            If true, the input will update the Value immediately on typing.
            If false, the Value is updated only on Enter.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExToggleableSearch.Clearable">
            <summary>
            Show clear button
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExToggleableSearch.SearchIcon">
            <summary>
            Icon 
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExToggleableSearch.SearchButtonColor">
            <summary>
            Color for toggle button
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExToggleableSearch.FilterChanged">
            <summary>
            Event callback if filter changed
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExToggleableSearch.AutoCloseOnBlur">
            <summary>
             If true and search toggleable and open, search with closed on blur
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExToggleableSearch.OnKeyUp">
            <summary>
            Fired on the KeyUp event.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.UploadableFile">
            <summary>
            Represents a file that can be uploaded. Implements the IUploadableFile interface.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.UploadableFile.FileName">
            <summary>
            Gets or sets the name of the file.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.UploadableFile.Extension">
            <summary>
            Gets or sets the file extension.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.UploadableFile.ContentType">
            <summary>
            Gets or sets the content type of the file.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.UploadableFile.Data">
            <summary>
            Gets or sets the data of the file.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.UploadableFile.Url">
            <summary>
            Gets or sets the URL of the file.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.UploadableFile.FromUrlAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Creates an instance of UploadableFile from a given URL.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.SelectItemsMode">
            <summary>
            Specifies the mode of selecting items.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.SelectItemsMode.None">
            <summary>
            No selection allowed.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.SelectItemsMode.Single">
            <summary>
            Allows single item selection.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.SelectItemsMode.MultiSelect">
            <summary>
            Allows multi item selection.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.SelectItemsMode.MultiSelectWithCtrlKey">
            <summary>
            Allows multi item selection with Ctrl key.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MimeTypeRestrictionType">
            <summary>
            Specifies the type of MIME type restriction.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.MimeTypeRestrictionType.WhiteList">
            <summary>
            Only MIME types in the list are allowed.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.MimeTypeRestrictionType.BlackList">
            <summary>
            MIME types in the list are not allowed.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.MudExUploadEdit`1">
            <summary>
            A Component to edit and upload a list of files
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.TextDropZone">
            <summary>
            The text displayed in the drop zone. 
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.TextUploadFiles">
            <summary>
            The text for the upload files button.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.TextUploadFile">
            <summary>
            The text for the upload file button.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.TextUploadFolder">
            <summary>
            The text for the upload folder button.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.TextAddUrl">
            <summary>
            The text for the add URL button.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.TextRemoveAll">
            <summary>
            The text for the remove all button.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.TextErrorDuplicateFile">
            <summary>
            The error text displayed when a file is duplicated.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.TextErrorMaxFileSize">
            <summary>
            The error text displayed when a file exceeds the maximum size.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.TextErrorMaxFileCount">
            <summary>
            The error text displayed when the maximum number of files is exceeded.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.TextErrorMimeTypeNotAllowed">
            <summary>
            The error text displayed when a file's MIME type is not allowed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.TextErrorMimeTypeNotForbidden">
            <summary>
            The error text displayed when a file's MIME type is forbidden.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.TextAddUrlTitle">
            <summary>
            The title text displayed in the add URL dialog.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.TextAddUrlMessage">
            <summary>
            The message text displayed in the add URL dialog.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.ErrorAnimation">
            <summary>
            The animation type for errors.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.Label">
            <summary>
            The label displayed in the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.ReadOnly">
            <summary>
            Defines whether the component is read only.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.HelperText">
            <summary>
            The helper text displayed in the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.Variant">
            <summary>
            The variant of the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.AllowRename">
            <summary>
            Defines whether renaming of files is allowed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.AllowExternalUrl">
            <summary>
            Defines whether adding of external URL is allowed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.UploadFieldId">
            <summary>
            The ID of the upload field.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.MimeTypes">
            <summary>
            Mime types for MimeRestrictions based on the <see cref="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.MimeRestrictionType"/> this types are allowed or forbidden.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.MimeRestrictionType">
            <summary>
            The type of the MIME restriction.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.MaxFileSize">
            <summary>
            The maximum file size allowed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.MaxHeight">
            <summary>
            The maximum height allowed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.MinHeight">
            <summary>
            The minimum height allowed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.MaxMultipleFiles">
            <summary>
            The maximum number of multiple files allowed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.UploadRequests">
            <summary>
            The upload requests.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.AllowMultiple">
            <summary>
            Defines whether multiple files can be uploaded.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.AllowFolderUpload">
            <summary>
            Defines whether folder upload is allowed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.AllowPreview">
            <summary>
            Defines whether preview of the files is allowed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.ShowFileUploadButton">
            <summary>
            Defines whether the file upload button is displayed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.ShowFolderUploadButton">
            <summary>
            Defines whether the folder upload button is displayed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.ShowClearButton">
            <summary>
            Defines whether the clear button is displayed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.AllowRemovingItems">
            <summary>
            Defines whether removing of items is allowed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.SelectItemsMode">
            <summary>
            The mode of selecting items.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.AutoExtractZip">
            <summary>
            Defines whether zip files should be automatically extracted.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.UploadRequest">
            <summary>
            The current upload request.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.AllowDuplicates">
            <summary>
            Defines whether duplicates are allowed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.DisplayErrors">
            <summary>
            Defines whether errors should be displayed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.SelectedRequests">
            <summary>
            The selected requests.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.RemoveErrorAfter">
            <summary>
            The time to remove an error after it has been displayed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.AutoRemoveError">
            <summary>
            Defines whether errors should be automatically removed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.RemoveErrorOnChange">
            <summary>
            Defines whether errors should be removed when there are changes.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.AllowDrop">
            <summary>
            Defines whether file drop is allowed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.OnError">
            <summary>
            The callback that will be invoked when an error occurs.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.UploadRequestsChanged">
            <summary>
            The callback that will be invoked when upload requests change.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.UploadRequestRemoved">
            <summary>
            The callback that will be invoked when an upload request is removed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.UploadRequestChanged">
            <summary>
            The callback that will be invoked when an upload request changes.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.SelectedRequestsChanged">
            <summary>
            The callback that will be invoked when selected requests change.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.HandlePreviewContentErrorFunc">
            <summary>
            The function that will be invoked to handle preview content errors.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.ResolvePreviewDataUrlFunc">
            <summary>
            The function that will be invoked to resolve preview data URLs.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.MudExUploadEdit`1.ResolveContentTypeFromUrlFunc">
            <summary>
            The function that will be invoked to resolve content types from URLs.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExUploadEdit`1.HasData">
            <summary>
            Returns whether the component has data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExUploadEdit`1.OnInitializedAsync">
            <inheritdoc />
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExUploadEdit`1.GetJsArguments">
            <inheritdoc />
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExUploadEdit`1.ImportModuleAndCreateJsAsync">
            <inheritdoc />
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExUploadEdit`1.Remove(`0)">
            <summary>
            Removes the given request from the list of requests.
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExUploadEdit`1.RemoveAll">
            <summary>
            Removes all requests from the list of requests.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExUploadEdit`1.Upload(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            Display Upload File
            </summary>
            <param name="arg"></param>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExUploadEdit`1.UploadFolder(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            Display Upload folder
            </summary>
            <param name="arg"></param>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExUploadEdit`1.IsSelected(`0)">
            <summary>
            Returns true if the given request is selected
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExUploadEdit`1.ResolvePreviewUrlAsync(`0)">
            <summary>
            resolves the preview data url
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Components.MudExUploadEdit`1.ResolveContentTypeFromUrlAsync(System.String)">
            <summary>
            Resolve content type
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="T:MudBlazor.Extensions.Components.ObjectEdit.IDefaultRenderDataProvider">
            <summary>
            Interface for providing default render data for mudex object edit property
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.IDefaultRenderDataProvider.GetRenderData(MudBlazor.Extensions.Components.ObjectEdit.Options.ObjectEditPropertyMeta)">
            <summary>
            Returns the render data 
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.ObjectEdit.IObjectMetaConfiguration`1">
            <summary>
            Interface for configuring the <see cref="T:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1"/> component for a meta of TModel.
            </summary>
            <typeparam name="TModel">Model type to configure</typeparam>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.IObjectMetaConfiguration`1.ConfigureAsync(MudBlazor.Extensions.Components.ObjectEdit.Options.ObjectEditMeta{`0})">
            <summary>
            Configure meta 
            </summary>
            <param name="meta"></param>
            <returns></returns>
        </member>
        <member name="T:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1">
            <summary>
            Powerful component to edit a set of items and their properties.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.Height">
            <summary>
            Gets or sets the height of the collection editor.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.MaxHeight">
            <summary>
            Gets or sets the maximum height of the collection editor.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.SizeUnit">
            <summary>
            Gets or sets the size unit for the collection editor.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.Items">
            <summary>
            Gets or sets the collection of items to be edited.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.ItemsChanged">
            <summary>
            Gets or sets the event callback for when items are changed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.ItemToStringFunc">
            <summary>
            Gets or sets the function to convert an item to a string.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.TextAdd">
            <summary>
            Gets or sets the text for the add button.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.TextRemoveAll">
            <summary>
            Gets or sets the text for the remove all button.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.TextEdit">
            <summary>
            Gets or sets the text for the edit button.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.Label">
            <summary>
            Gets or sets the label of the collection editor.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.Virtualize">
            <summary>
            Gets or sets a value indicating whether the collection should be virtualized.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.HelperText">
            <summary>
            Gets or sets the helper text for the collection editor.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.ItemIcon">
            <summary>
            Gets or sets the icon for each item in the collection.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.RemoveIcon">
            <summary>
            Gets or sets the icon for the remove button.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.RemoveAllIcon">
            <summary>
            Gets or sets the icon for the remove all button.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.AddIcon">
            <summary>
            Gets or sets the icon for the add button.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.EditIcon">
            <summary>
            Gets or sets the icon for the edit and preview button.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.ViewIcon">
            <summary>
            Gets or sets the icon for the view button.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.Variant">
            <summary>
            Gets or sets the variant of the collection editor.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.ShowClearButton">
            <summary>
            Gets or sets a value indicating whether to show the clear button.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.AllowAdd">
            <summary>
            Gets or sets a value indicating whether to allow adding items.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.AllowEditOrPreview">
            <summary>
            Gets or sets a value indicating whether to allow editing or previewing items.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.AllowRemove">
            <summary>
            Gets or sets a value indicating whether to allow removing items.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.DialogOptions">
            <summary>
            Gets or sets the options for the dialog.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.ToolbarColor">
            <summary>
            Gets or sets the color of the toolbar.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.ToolbarPosition">
            <summary>
            Gets or sets the position of the toolbar.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.StickToolbar">
            <summary>
            Gets or sets a value indicating whether the toolbar sticks.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.StyleToolbar">
            <summary>
            Gets or sets the style of the toolbar.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.ClassToolbar">
            <summary>
            Gets or sets the class of the toolbar.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.ToolbarButtonColor">
            <summary>
            Gets or sets the color of the toolbar buttons.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.FilterMode">
            <summary>
            Gets or sets the filter mode.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.Filter">
            <summary>
            Gets or sets the filter string.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.SearchIcon">
            <summary>
            Gets or sets the icon for the search button.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.GetMudGridStyle">
            <summary>
            Generates the style string for the MudGrid component.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.GetToolbarStyle">
            <summary>
            Generates the style string for the toolbar.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.GetStyle">
            <summary>
            Generates the style string for the collection editor.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.OnParametersSet">
            <summary>
            Called when the parameters are set.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.Add(`0)">
            <summary>
            Adds an item to the collection.
            </summary>
            <param name="item">The item to add.</param>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.Remove(`0)">
            <summary>
            Removes an item from the collection.
            </summary>
            <param name="item">The item to remove.</param>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.RaiseChanged">
            <summary>
            Raises the ItemsChanged event.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.RemoveAll">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.Edit(`0)">
            <summary>
            Edits an item in the collection.
            </summary>
            <param name="item">The item to edit.</param>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.SetValue(`0,`0)">
            <summary>
            Sets the value of an item in the collection.
            </summary>
            <param name="item">The item to set the value on.</param>
            <param name="newValue">The new value for the item.</param>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.View(`0)">
            <summary>
            Views an item in the collection.
            </summary>
            <param name="item">The item to view.</param>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.ItemNameRender(`0)">
            <summary>
            Renders the item name
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExCollectionEditor`1.Add">
            <summary>
            Opens the dialog to add an item to the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="T:MudBlazor.Extensions.Components.ObjectEdit.GroupingStyle">
            <summary>
            Specifies the grouping style.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.ObjectEdit.GroupingStyle.Flat">
            <summary>
            Grouped flat with s line
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.ObjectEdit.GroupingStyle.DefaultExpansionPanel">
            <summary>
            Use MudBlazor expansion panel
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.ObjectEdit.PropertyFilterMode">
            <summary>
            Specifies the property filter mode.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.ObjectEdit.PropertyFilterMode.Toggleable">
            <summary>
            Filter is toggable
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.ObjectEdit.PropertyFilterMode.AlwaysVisible">
            <summary>
            Filter is always visible
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.ObjectEdit.PropertyFilterMode.Disabled">
            <summary>
            No filter at all
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.ObjectEdit.ActionAlignment">
            <summary>
            Specifies the alignment of an action.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.ObjectEdit.ActionAlignment.Right">
            <summary>
            Right
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.ObjectEdit.ActionAlignment.Left">
            <summary>
            Left
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.ObjectEdit.RegisteredConfigurationBehaviour">
            <summary>
            Specifies when the registered configurations will applied.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.ObjectEdit.RegisteredConfigurationBehaviour.ExecutedBefore">
            <summary>
            Registered configurations will applied first
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.ObjectEdit.RegisteredConfigurationBehaviour.ExecutedAfter">
            <summary>
            Registered configurations will applied after component property configurations
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.ObjectEdit.RegisteredConfigurationBehaviour.IgnoreRegisteredConfigurations">
            <summary>
            Registered configurations will ignored
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.ObjectEdit.PathDisplayMode">
            <summary>
            Specifies the mode of path display.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.ObjectEdit.PathDisplayMode.DisplaySeparate">
            <summary>
            Display path as separate label
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.ObjectEdit.PathDisplayMode.DisplayAsGroupName">
            <summary>
            Display path as group
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.ObjectEdit.PathDisplayMode.None">
            <summary>
            Do not display the path
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.ObjectEdit.StateTarget">
            <summary>
            Specifies the target for state storage.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.ObjectEdit.StateTarget.LocalStorage">
            <summary>
            Local storage
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.ObjectEdit.StateTarget.SessionStorage">
            <summary>
            Session storage
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.ObjectEdit.DataChangeTrigger">
            <summary>
            Specifies the trigger for data change.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.ObjectEdit.DataChangeTrigger.ExportImport">
            <summary>
            Import or export
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.ObjectEdit.DataChangeTrigger.StateSaveLoad">
            <summary>
            State restored
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.ObjectEdit.ModelForPrimitive`1">
            <summary>
            Represents a model for primitive types.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.ModelForPrimitive`1.#ctor">
            <summary>
            Creates a new instance
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.ModelForPrimitive`1.#ctor(`0)">
            <summary>
            Creates a new instance
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.ModelForPrimitive`1.Value">
            <summary>
            Gets or sets the value of the model.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.ObjectEdit.ExportedData`1">
            <summary>
            Represents exported data.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.ExportedData`1.Value">
            <summary>
            Gets or sets the value of the exported data.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.ExportedData`1.Json">
            <summary>
            Gets or sets the JSON representation of the exported data.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.ExportedData`1.TriggerdFrom">
            <summary>
            Gets or sets the data change trigger.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.ObjectEdit.ImportedData`1">
            <summary>
            Represents imported data.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.ObjectEdit.ImportData`1">
            <summary>
            Represents data to be imported.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.ObjectEdit.ExportData`1">
            <summary>
            Represents data to be exported.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.ExportData`1.Cancel">
            <summary>
            Gets or sets a value indicating whether the export operation should be cancelled.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1">
            <summary>
            A powerful component to edit an object and its properties.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.RenderIgnoredReferences">
            <summary>
            If you need the reference for dynamic ignored fields for example because of Model Validation or resets you should set this to true
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.IsLoading">
            <summary>
            Whether the component should show a loading indicator.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.Value">
            <summary>
            The object to be edited by the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.AutoUpdateConditions">
            <summary>
            Whether the component should automatically update all registered Conditions.
            Otherwise you need to call UpdateAllConditions on your own.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.Height">
            <summary>
            The height of the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.MaxHeight">
            <summary>
            The maximum height of the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.SizeUnit">
            <summary>
            The size unit of the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ImportNeedsConfirmation">
            <summary>
            Whether the import action needs confirmation.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.StateKey">
            <summary>
            The state key for saving and restoring the component state.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ImportConfirmText">
            <summary>
            The text for confirming an import action.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ImportCancelText">
            <summary>
            The text for cancelling an import action.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.Virtualize">
            <summary>
            Whether the component should be virtualized.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.LightOverlayLoadingBackground">
            <summary>
            Whether the component should have a light overlay loading background.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.AutoOverlay">
            <summary>
            Whether the component should automatically display an overlay when loading.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ToolbarButtonColor">
            <summary>
            The color of the toolbar buttons.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.AddScrollToTop">
            <summary>
            Whether the component should add a scroll to top button.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ScrollToTopPosition">
            <summary>
            The position of the scroll to top button.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.AllowExport">
            <summary>
            Whether export functionality is enabled.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.AllowImport">
            <summary>
            Whether import functionality is enabled.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.AutoSaveRestoreState">
            <summary>
            Whether the component should automatically save and restore its state.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.StoreAndReadValueFromUrl">
            <summary>
            If this is true, the component adds the value if possible to url and reads it automatically if its present in Url
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.StateTargetStorage">
            <summary>
            The storage location for saving and restoring component state.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ExportFileName">
            <summary>
            The file name for exporting the component data.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ImportIcon">
            <summary>
            The icon to display for the import action.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.SearchIcon">
            <summary>
            The icon to display for the search action.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ExpandCollapseIcon">
            <summary>
            The icon to display for expanding and collapsing.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ExportIcon">
            <summary>
            The icon to display for the export action.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.AutoSkeletonOnLoad">
            <summary>
            Whether to automatically display the skeleton loading state on component load.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ToolbarColor">
            <summary>
            The color of the toolbar.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.GroupLineColor">
            <summary>
            The color of the group lines in the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.GroupElevation">
            <summary>
            The elevation of the group.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ToolBarElevation">
            <summary>
            The elevation of the toolbar.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ToolBarClass">
            <summary>
            A CSS class for the component toolbar.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ToolBarPaperClass">
            <summary>
            A CSS class for the component toolbar paper.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.StickyToolbar">
            <summary>
            Whether the toolbar should be sticky to the top of the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.StickyToolbarTop">
            <summary>
            The positioning CSS value for a sticky toolbar.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.AfterImport">
            <summary>
            Called after the component has imported data.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.AfterExport">
            <summary>
            Called after the component has exported data.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.BeforeExport">
            <summary>
            Called before the component exports data. Provides the export data to be manipulated.
            If you need to change content of parameter to manipulate export data you can do it here
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.BeforeImport">
            <summary>
            Called before the component imports data. Provides the import data to be manipulated.
            Here you can change content of parameter to manipulate import data
            For example you can remove some properties or change the values
            This is called before the import is executed
            importData.Json = "{\"FirstName\": \"Changed Test\"}";
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ValueChanged">
            <summary>
            Called when the edited value is changed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.PropertyChanged">
            <summary>
            Called when a property of the edited object is changed.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.MetaInformation">
            <summary>
            The object edit metadata for the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ShowPathAsTitleForEachProperty">
            <summary>
            Whether to show the property path as title for each property.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.PathDisplayMode">
            <summary>
            The path display mode for the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.GroupingStyle">
            <summary>
            The grouping style for the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.FilterMode">
            <summary>
            The filter mode for the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.Filter">
            <summary>
            The filter value for the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.AutoHideDisabledFields">
            <summary>
            Whether to automatically hide disabled fields.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.DisableGrouping">
            <summary>
            Whether to disable grouping.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.DefaultGroupName">
            <summary>
            The default group name for the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.DisableFieldFallback">
            <summary>
            Whether to disable field fallback.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.WrapInMudGrid">
            <summary>
            Whether to wrap the component in a MudGrid component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.GroupsCollapsible">
            <summary>
            Whether groups are collapsible in the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.GlobalResetSettings">
            <summary>
            The global reset settings for the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.DefaultPropertyResetSettings">
            <summary>
            The default property reset settings for the component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ResetConfirmationMessageBoxOptions">
            <summary>
            The message box options for reset confirmation.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ResetConfirmationDialogOptions">
            <summary>
            The dialog options for reset confirmation.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.MetaConfiguration">
            <summary>
            The action to perform for object metadata configuration.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.MetaConfigurationAsync">
            <summary>
            The async action to perform for object metadata configuration.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ToolBarActionAlignment">
            <summary>
            The alignment of actions in the component toolbar.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ToolBarContent">
            <summary>
            The content to display in the component toolbar.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ConfigureBehaviourForRegisteredConfigurations">
            <summary>
            The behaviour how registered Meta and configured meta should applied
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ConfigureMetaInformationAlways">
            If this setting is true a manual passed MetaInformation will also re configured
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ErrorMessage">
            <summary>
            Error message to display
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.CustomResetFunction">
            <summary>
            Set this to handle Reset on your own
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.BulkActionRunning">
            <summary>
            Is true if currently is a internal Bulk running. Like reset or clear etc..
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.Editors">
            <summary>
            All rendered editors
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ExpansionPanel">
            <summary>
            ExpansionPanels
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.Ref">
            <summary>
            References to editors
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.OnParametersSetAsync">
            <inheritdoc/>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
            <inheritdoc/>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.UpdateAllConditions">
            <summary>
            Updates all conditions on meta settings
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.UpdateConditions">
            <summary>
            Updates all conditions on meta settings
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.OnFinishedRenderAsync">
            <inheritdoc/>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.GetUpdatedValue">
            <summary>
            Returns the current value independent of disabled value bindings
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.Reset">
            <summary>
            Resets all values
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.Clear">
            <summary>
            Clears all input fields
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.RestoreState(System.Boolean)">
            <summary>
            Restore state if available and returns true if state was restored otherwise false.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.DeleteState">
            <summary>
            Deletes the current state
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.SaveState">
            <summary>
            Saves the current state
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.OnPropertyChange(MudBlazor.Extensions.Components.ObjectEdit.Options.ObjectEditPropertyMeta)">
            <summary>
            Called when a property value is changed
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.Export">
            <summary>
            Exports the current value as json
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ToJsonAsync">
            <summary>
            Returns the current value as json
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.ToJson">
            <summary>
            Returns the json
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEdit`1.LoadFromJson(System.String,System.Boolean)">
            <summary>
            Imports a Json value
            </summary>
            <param name="json"></param>
            <param name="removeIgnoredImports"></param>
            <returns></returns>
        </member>
        <member name="T:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog`1">
            <summary>
            Dialog for editing objects with the MudExObjectEditForm
            </summary>
            <typeparam name="T">Type of object being edited</typeparam>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog`1.OverwriteActionBar">
            <summary>
            If set to true, overwrite the standard action bar of the dialog with custom content.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog`1.MudDialog">
            <summary>
            The MudDialog instance that represents the current dialog instance that is open.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog`1.DisableSidePadding">
            <summary>
            If set to true, remove the side padding of the dialog content.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog`1.ClassDialog">
            <summary>
            The CSS class to apply to the dialog.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog`1.ClassContent">
            <summary>
            The CSS class to apply to the content area of the dialog.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog`1.ClassDialogForm">
            <summary>
            The CSS class to apply to the form element of the dialog.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog`1.ClassActions">
            <summary>
            The CSS class to apply to the action buttons of the dialog.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog`1.ClassTitle">
            <summary>
            The CSS class to apply to the title of the dialog.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog`1.ContentStyle">
            <summary>
            The CSS styles to apply to the content area of the dialog.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog`1.DialogStyle">
            <summary>
            The CSS styles to apply to the dialog.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog`1.DefaultFocus">
            <summary>
            The default focus location for the dialog.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog`1.DialogIcon">
            <summary>
            The name of the icon to display in the dialog header area.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog`1.ErrorAnimation">
            <summary>
            The type of animation to display when an error occurs.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog`1.DialogIconColor">
            <summary>
            The color of the dialog icon for when the dialog is used in relation to a particular color theme.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog`1.CustomSubmit">
            <summary>
            An optional custom submit function.
            If a string is returned that string will be treated as an error message and displayed in place of the default success message.
            Dialog will only closed if result of this function is empty or null otherwise result will displayed as error message.
            This can be useful to keep dialog open until server save is succeeded and not failed
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog`1.OnPropertyChange(MudBlazor.Extensions.Components.ObjectEdit.Options.ObjectEditPropertyMeta)">
            <summary>
            Customize what happens when a property changes.
            </summary>
            <param name="property">The property that has been changed.</param>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog`1.OnSubmit(Microsoft.AspNetCore.Components.Forms.EditContext)">
            <summary>
            Called when the form is submitted.
            </summary>
            <param name="ctx">The edit context that represents the current state of the form's data.</param>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog`1.Cancel">
            <summary>
            Called when the Cancel button is clicked.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditExtensions">
            <summary>
            Contains extension methods for IServiceCollection to configure MudBlazor services with extensions.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditExtensions.AddMudExObjectEdit(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Reflection.Assembly[])">
            <summary>
            Adds MudBlazor Object edit extensions to the service collection.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1">
            <summary>
            Powerful component to edit an object and its properties.
            </summary>
            <typeparam name="T">Type of object being edited</typeparam>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.HasErrors">
            <summary>
            Returns true if there are any errors in the edit form fields
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.Validated">
            <summary>
            Returns true if both FluentValidation and DataAnnotation validation have been completed successfully
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.CancelButtonVariant">
            <summary>
            The variant of the cancel button
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.SaveButtonVariant">
            <summary>
            The variant of the save button
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.CancelButtonColor">
            <summary>
            The color of the cancel button
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.SaveButtonColor">
            <summary>
            The color of the save button
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.CancelButtonIcon">
            <summary>
            The icon of the cancel button
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.SaveButtonIcon">
            <summary>
            The icon of the save button
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.SaveButtonIconAlignment">
            <summary>
            The alignment of the icon for the save button
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.CancelButtonIconAlignment">
            <summary>
            The alignment of the icon for the cancel button
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.CancelButtonAsIconButton">
            <summary>
            If true, display the cancel button as an icon button
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.SaveButtonAsIconButton">
            <summary>
            If true, display the save button as an icon button
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.OnValidSubmit">
            <summary>
            An event callback for when the form is successfully submitted
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.OnCancel">
            <summary>
            An event callback for when the cancel button is pressed
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.Elevation">
            <summary>
            The elevation of the card containing the form
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.ActionBarColor">
            <summary>
            The color of the action bar
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.StickyActionBar">
            <summary>
            If true, the action bar is sticky
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.StickyStickyActionBarBottom">
            <summary>
            The distance from the bottom of the viewport to the bottom of the sticky action bar
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.ActionBarStyle">
            <summary>
            The style of the action bar
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.ActionBarClass">
            <summary>
            The class of the action bar
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.FormClass">
            <summary>
            The class of the form itself
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.CardClass">
            <summary>
            The class of the card containing the form
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.SaveButtonText">
            <summary>
            The text displayed on the save button
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.CancelButtonText">
            <summary>
            The text displayed on the cancel button
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.ShowSaveButton">
            <summary>
            If true, display the save button
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.ShowCancelButton">
            <summary>
            If true, display the cancel button
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.ActionBarActionAlignment">
            <summary>
            The alignment of the action bar buttons
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.ActionContent">
            <summary>
            RenderFragment of action content
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.RenderActionContentFirst">
            <summary>
            If true, render action content before the form
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.RenderFormActionsInToolBar">
            <summary>
            If true, renders form actions (submit, cancel) in a tool bar
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.Form">
            <summary>
            Reference to EditForm
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.OverwriteActionBar">
            <summary>
            Returns true if OverwriteActionBar is false, otherwise returns false
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.UseFormSubmit">
            <summary>
            If true, submit the form on button click. Otherwise, do not submit until validation is complete
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.SubmitButtonType">
            <summary>
            Returns the button type of the submit button
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1._fluentValidated">
            <summary>
            Returns true if FluentValidation validation was completed successfully, otherwise returns false
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1._dataAnnotationsValidated">
            <summary>
            Returns true if DataAnnotation validation was completed successfully, otherwise returns false
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1._dataValidations">
            <summary>
            Returns a list of validation results produced by DataAnnotation validation
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.OnSubmitButtonClick">
            <summary>
            Handles form submission when UseFormSubmit is false
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.OnSubmit(Microsoft.AspNetCore.Components.Forms.EditContext)">
            <summary>
            Called when the form is submitted
            </summary>
            <param name="arg"></param>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.Cancel">
            <summary>
            Resets the form
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.GetErrors">
            <summary>
            Returns a list of all errors in the form fields
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.GetFluentValidationErrors">
            <summary>
            Returns a list of validation errors produced by FluentValidation validation
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.GetDataAnnotationErrors">
            <summary>
            Returns a list of validation errors produced by DataAnnotation validation
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.GetActionBarStyle">
            <summary>
            Applies styles to the action bar based on properties
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditForm`1.GetActionBarClass">
            <summary>
            Returns the class of the action bar based on properties
            </summary>
            <returns></returns>
        </member>
        <member name="T:MudBlazor.Extensions.Components.ObjectEdit.MudExPropertyEdit">
            <summary>
            Editor for a property of an object. Used internally inside the MudExObjectEdit
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExPropertyEdit.StoreAndReadValueFromUrl">
            <summary>
            If this is true, the component adds the value if possible to url and reads it automatically if its present in Url
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExPropertyEdit.UriPrefixForKey">
            <summary>
            A prefix that is used for the key in the url
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExPropertyEdit.ShowPathAsTitle">
            <summary>
            Set this to true to display whole property path as title
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExPropertyEdit.IsLoading">
            <summary>
            Gets or sets the IsLoading state
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExPropertyEdit.AutoSkeletonOnLoad">
            <summary>
            Creates a skeleton while loading if this is true
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExPropertyEdit.ActiveFilterTerm">
            <summary>
            ActiveFiler string
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExPropertyEdit.PropertyResetSettings">
            <summary>
            Settings for the property reset behavior
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExPropertyEdit.PropertyMeta">
            <summary>
            PropertyMeta from ObjectEdit where Value is present in
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExPropertyEdit.PropertyValueChanged">
            <summary>
            EventCallback if value changed
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Components.ObjectEdit.MudExPropertyEdit.DisableFieldFallback">
            <summary>
            If this setting is true and no RenderData is available there will no fallback in a textedit rendered
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExPropertyEdit.OnAfterRenderAsync(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExPropertyEdit.OnFinishedRenderAsync">
            <inheritdoc />
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExPropertyEdit.OnInitialized">
            <inheritdoc />
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExPropertyEdit.RenderAs(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder,MudBlazor.Extensions.Components.ObjectEdit.Options.ObjectEditPropertyMeta)">
            <summary>
            Renders the editor with a CustomRenderer
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExPropertyEdit.ResetAsync">
            <summary>
            Resets the Editor
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExPropertyEdit.ClearAsync">
            <summary>
            Clears the Editor
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExPropertyEdit.Invalidate(System.Boolean)">
            <summary>
            Refreshes the UI
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Components.ObjectEdit.MudExPropertyEdit.GetCurrentValue">
            <summary>
            Returns the current Value independent of the PropertyMeta for example if binding is disabled
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Core.Css.AlignItems">
            <summary>
            Enum representing CSS 'align-items' property values.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Core.Css.BorderStyle">
            <summary>
            Specifies various styles for the border of an element in CSS.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.Css.BorderStyle.None">
            <summary>
            No border; the computed border width is zero.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.Css.BorderStyle.Hidden">
            <summary>
            Same as `None`, except in border conflict resolution for table elements.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.Css.BorderStyle.Dotted">
            <summary>
            The border is a series of dots.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.Css.BorderStyle.Dashed">
            <summary>
            The border is a series of short lines.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.Css.BorderStyle.Solid">
            <summary>
            The border is a single, solid line.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.Css.BorderStyle.Double">
            <summary>
            The border is two solid lines. The sum of the two lines and the space between them equals the value of 'border-width'.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.Css.BorderStyle.Groove">
            <summary>
            The border looks as though it were carved into the canvas.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.Css.BorderStyle.Ridge">
            <summary>
            The opposite of 'groove': the border looks as though it were coming out of the canvas.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.Css.BorderStyle.Inset">
            <summary>
            The border makes the box look as though it were embedded in the canvas.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.Css.BorderStyle.Outset">
            <summary>
            The opposite of 'inset': the border makes the box look as though it were coming out of the canvas.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.Css.BorderStyle.Initial">
            <summary>
            Sets this property to its default value.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.Css.BorderStyle.Inherit">
            <summary>
            Inherits this property from its parent element.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.Css.BorderStyle.Revert">
            <summary>
            Resets the property to its inherited value if it inherits from its parent, and to its initial value if not.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.Css.BorderStyle.Unset">
            <summary>
            Can be used on any CSS property, including 'border-style', and takes the same values as inherit. It acts like inherit if the property is inherited and like initial if not.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Core.Css.Clear">
            <summary>
            Enum representing CSS 'clear' property values.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Core.Css.Cursor">
            <summary>
            Enum representing CSS 'cursor' property values.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Core.Css.Direction">
            <summary>
            Enum representing CSS 'direction' property values.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Core.Css.Display">
            <summary>
            Enum representing CSS 'display' property values.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Core.Css.Float">
            <summary>
            Enum representing CSS 'float' property values.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Core.Css.FontStyle">
            <summary>
            Specifies the font style for a text.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.Css.FontStyle.Normal">
            <summary>
            The text is shown in a normal font style. This is default.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.Css.FontStyle.Italic">
            <summary>
            The text is shown in an italic font style.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.Css.FontStyle.Oblique">
            <summary>
            The text is shown in an oblique font style.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.Css.FontStyle.Initial">
            <summary>
            Sets this property to its default value (i.e., 'normal').
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.Css.FontStyle.Inherit">
            <summary>
            Inherits this property from its parent element.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Core.Css.FontVariant">
            <summary>
            Specifies the font variant for a text.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.Css.FontVariant.Normal">
            <summary>
            The text is shown in a normal font variant. This is default.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.Css.FontVariant.SmallCaps">
            <summary>
            The text is transformed to use small capitals for lower case letters.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.Css.FontVariant.Initial">
            <summary>
            Sets this property to its default value (i.e., 'normal').
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.Css.FontVariant.Inherit">
            <summary>
            Inherits this property from its parent element.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Core.Css.FontWeight">
            <summary>
            Specifies the weight or thickness of the font.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.Css.FontWeight.Normal">
            <summary>
            Defines normal characters. This is default.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.Css.FontWeight.Bold">
            <summary>
            Defines thick characters.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.Css.FontWeight.Bolder">
            <summary>
            Defines thicker characters.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.Css.FontWeight.Lighter">
            <summary>
            Defines lighter characters.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.Css.FontWeight.Initial">
            <summary>
            Sets this property to its default value (i.e., 'normal').
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.Css.FontWeight.Inherit">
            <summary>
            Inherits this property from its parent element.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Core.Css.Overflow">
            <summary>
            Enum representing CSS 'overflow' property values.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Core.Css.Position">
            <summary>
            Enum representing CSS 'position' property values.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Core.Css.TextDecoration">
            <summary>
            Specifies the type of text decoration to use.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.Css.TextDecoration.None">
            <summary>
            Default value. Specifies that text should not have a decoration.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.Css.TextDecoration.Underline">
            <summary>
            Specifies that text should be underlined.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.Css.TextDecoration.Overline">
            <summary>
            Specifies that text should be overlined.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.Css.TextDecoration.LineThrough">
            <summary>
            Specifies that text should have a line through the middle.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.Css.TextDecoration.Initial">
            <summary>
            Sets this property to its default value (i.e., 'none').
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.Css.TextDecoration.Inherit">
            <summary>
            Inherits this property from its parent element.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Core.Css.TextTransform">
            <summary>
            Enum representing CSS 'text-transform' property values.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Core.Css.Visibility">
            <summary>
            Enum representing CSS 'visibility' property values.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Core.Css.WhiteSpace">
            <summary>
            Enum representing CSS 'white-space' property values.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Core.CssUnit">
            <summary>
            Represents units of measure in CSS.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.CssUnit.Percentage">
            <summary>
            Represents a percentage of a base value in CSS.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.CssUnit.Pixels">
            <summary>
            Represents pixels in CSS.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.CssUnit.Em">
            <summary>
            Represents the font size of the parent element in CSS.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.CssUnit.Rem">
            <summary>
            Represents the font size of the root element in CSS.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.CssUnit.ViewportWidth">
            <summary>
            Represents a percentage of the viewport's width in CSS.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.CssUnit.ViewportHeight">
            <summary>
            Represents a percentage of the viewport's height in CSS.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.CssUnit.ViewportMinimum">
            <summary>
            Represents the smaller dimension of the viewport in CSS.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.CssUnit.ViewportMaximum">
            <summary>
            Represents the larger dimension of the viewport in CSS.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.CssUnit.Centimeters">
            <summary>
            Represents centimeters in CSS.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.CssUnit.Millimeters">
            <summary>
            Represents millimeters in CSS.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.CssUnit.Inches">
            <summary>
            Represents inches in CSS.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.CssUnit.Points">
            <summary>
            Represents points in CSS. One point is equal to 1/72 of an inch.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.CssUnit.Picas">
            <summary>
            Represents picas in CSS. One pica is equal to 12 points.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Core.IMudExClassAppearance">
            <summary>
            IMudExClassAppearance holds an applicable class string
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Core.IMudExClassAppearance.Class">
            <summary>
            Class to apply
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Core.IMudExComponent">
            <summary>
            Interface for all MudExComponents
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Core.IJsMudExComponent`1">
            <summary>
            Interface for components with js imports
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:MudBlazor.Extensions.Core.IJsMudExComponent`1.JsRuntime">
            <summary>
            JsRuntime
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Core.IJsMudExComponent`1.JsReference">
            <summary>
            Reference to the js
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Core.IJsMudExComponent`1.ModuleReference">
            <summary>
            Reference to imported module
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Core.IJsMudExComponent`1.ElementReference">
            <summary>
            Reference to rendered element
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.IJsMudExComponent`1.GetJsArguments">
            <summary>
            Returns the object that is passed to js
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.IJsMudExComponent`1.CreateDotNetObjectReference">
            <summary>
            DotNetObjectReference for callbacks
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.IJsMudExComponent`1.ImportModuleAndCreateJsAsync(System.String)">
            <summary>
            Imports the required module and calls the initialize method 
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.IJsMudExComponent`1.DisposeModulesAsync">
            <summary>
            Disposes all modules and references
            </summary>
            <returns></returns>
        </member>
        <member name="T:MudBlazor.Extensions.Core.IMudExDialogReference`1">
            <summary>
            Interface for a MudBlazor dialog reference.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Core.IMudExDialogReference`1.DialogComponent">
            <summary>
            Gets the dialog component.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.IMudExDialogReference`1.ExecuteOnDialogComponent(System.Action{`0})">
            <summary>
            Executes an action on the dialog component.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.IMudExDialogReference`1.CallStateHasChanged">
            <summary>
            Updates the state of the dialog component.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Core.IMudExDialogReference`1.DialogReference">
            <summary>
            Gets the dialog reference.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Core.MudExDialogReferenceExtensions">
            <summary>
            Extension methods for IMudExDialogReference.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExDialogReferenceExtensions.AsMudExDialogReference``1(MudBlazor.IDialogReference)">
            <summary>
            Converts a regular dialog reference to a MudBlazor dialog reference.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExDialogReferenceExtensions.AsMudExDialogReferenceAsync``1(System.Threading.Tasks.Task{MudBlazor.IDialogReference})">
            <summary>
            Converts a regular dialog reference to a MudBlazor dialog reference asynchronously.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExDialogReferenceExtensions.GetDialogComponent``1(MudBlazor.IDialogReference)">
            <summary>
            Gets the dialog component from a dialog reference.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Core.MudExDialogRef`1">
            <summary>
            Implementation of a MudBlazor dialog reference.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Core.MudExDialogRef`1.DialogReference">
            <summary>
            The DialogReference
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Core.MudExDialogRef`1._synchronizationContext">
            <summary>
            The synchronization context to ensure thread safety.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExDialogRef`1.#ctor(MudBlazor.IDialogReference)">
            <summary>
            Constructor for MudExDialogRef.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExDialogRef`1.Close">
            <summary>
            Closes the dialog.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExDialogRef`1.Close(MudBlazor.DialogResult)">
            <summary>
            Closes the dialog with a specific result.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExDialogRef`1.Dismiss(MudBlazor.DialogResult)">
            <summary>
            Dismisses the dialog with a specific result.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExDialogRef`1.InjectRenderFragment(Microsoft.AspNetCore.Components.RenderFragment)">
            <summary>
            Injects a RenderFragment into the dialog.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExDialogRef`1.InjectDialog(System.Object)">
            <summary>
            Injects a dialog instance into the dialog.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExDialogRef`1.GetReturnValueAsync``1">
            <summary>
            Gets the return value of the dialog asynchronously.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Core.MudExDialogRef`1.Id">
            <summary>
            Gets the ID of the dialog.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExDialogRef`1.Invoke(System.Action)">
            <summary>
            Invokes an action on the synchronization context.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExDialogRef`1.ExecuteOnDialogComponent(System.Action{`0})">
            <summary>
            Executes an action on the dialog component and updates its state.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExDialogRef`1.CallStateHasChanged">
            <summary>
            Invokes the StateHasChanged method of the dialog.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Core.IMudExStyleAppearance">
            <summary>
            IMudExStyleAppearance holds an applicable style string
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Core.IMudExStyleAppearance.Style">
            <summary>
            CSS Style string to apply
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Core.IMudExAppearance">
            <summary>
            IMudExAppearance is used to know an applicable style or class holder
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Core.MudExAppearance">
            <summary>
            The `MudExAppearance` class is a powerful tool that helps to manage CSS and styles of MudBlazor components dynamically. 
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Core.MudExAppearance.Class">
            <summary>
            Class to apply
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Core.MudExAppearance.Style">
            <summary>
            CSS Style string to apply
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Core.MudExAppearance.KeepExisting">
            <summary>
            Set to false to overwrite all existing classes and styles
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExAppearance.Empty">
            <summary>
            Factory method for an empty instance
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExAppearance.FromCss(System.String,System.String[])">
            <summary>
            Factory method for an instance filled with some classes
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExAppearance.FromCss(MudBlazor.Extensions.Helper.MudExCss.Classes,MudBlazor.Extensions.Helper.MudExCss.Classes[])">
            <summary>
            Factory method for an instance filled with some classes
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExAppearance.FromCss(MudBlazor.Extensions.Helper.MudExCssBuilder)">
            <summary>
            Factory method for an instance filled with some classes from a MudExCssBuilder
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExAppearance.FromStyle(System.Object)">
            <summary>
            Factory method for an instance filled with some styles
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExAppearance.FromStyle(System.String)">
            <summary>
            Factory method for an instance filled with some styles
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExAppearance.FromStyle(MudBlazor.Extensions.Helper.MudExStyleBuilder)">
            <summary>
            Factory method for an instance filled with some styles
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExAppearance.FromStyle(System.Action{MudBlazor.Extensions.Helper.MudExStyleBuilder})">
            <summary>
            Factory method for an instance filled with some styles
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExAppearance.WithStyle(MudBlazor.Extensions.Core.IMudExStyleAppearance)">
            <summary>
            Adds style to this appearance from given appearance
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExAppearance.WithStyle(System.Object,MudBlazor.Extensions.Core.CssUnit)">
            <summary>
            Adds style to this appearance from given styleObj
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExAppearance.WithStyle(System.Object,System.String,MudBlazor.Extensions.Core.CssUnit)">
            <summary>
            Adds style to this appearance from given styleObj
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExAppearance.WithStyle(System.String)">
            <summary>
            Adds style to this appearance from given styleString
            </summary>    
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExAppearance.WithStyle(System.Action{MudBlazor.Extensions.Helper.MudExStyleBuilder})">
            <summary>
            Adds style to this appearance with passing a fluent Action with a MudExStyleBuilder
            </summary>    
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExAppearance.WithStyle(System.Func{MudBlazor.Extensions.Helper.MudExStyleBuilder,System.Threading.Tasks.Task})">
            <summary>
            Adds style to this appearance with passing a async Func with a MudExStyleBuilder
            </summary>    
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExAppearance.WithCss(System.String,System.String[])">
            <summary>
            Adds class to this appearance
            </summary>    
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExAppearance.WithCss(System.String,System.Boolean)">
            <summary>
            Adds class to this appearance
            </summary>    
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExAppearance.WithCss(MudBlazor.Extensions.Helper.MudExCss.Classes,System.Boolean)">
            <summary>
            Adds class to this appearance
            </summary>    
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExAppearance.WithCss(MudBlazor.Extensions.Helper.MudExCss.Classes,MudBlazor.Extensions.Helper.MudExCss.Classes[])">
            <summary>
            Adds class to this appearance
            </summary>    
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExAppearance.WithCss(MudBlazor.Extensions.Core.IMudExClassAppearance)">
            <summary>
            Adds class to this appearance
            </summary>    
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExAppearance.WithCss(System.Action{MudBlazor.Extensions.Helper.MudExCssBuilder})">
            <summary>
            Adds class to this appearance
            </summary>    
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExAppearance.WithCss(System.Func{MudBlazor.Extensions.Helper.MudExCssBuilder,System.Threading.Tasks.Task})">
            <summary>
            Adds class to this appearance
            </summary>    
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExAppearance.Clone">
            <summary>
            Clone this instance
            </summary>
            <returns></returns>
        </member>
        <member name="T:MudBlazor.Extensions.Core.MudExColor">
            <summary>
            MudExColor is a readonly struct that provides a convenient and type-safe way to deal with color values in the context of MudBlazor.Extensions components.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExColor.#ctor(OneOf.OneOf{MudBlazor.Color,MudBlazor.Utilities.MudColor,System.Drawing.Color,System.String,System.UInt32})">
            <summary>
            MudExColor constructor, builds the color from various potential inputs.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Core.MudExColor.SuggestedFormat">
            <summary>
            The suggested output format for the color.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Core.MudExColor.Value">
            <summary>
            The color value.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Core.MudExColor.IsColor">
            <summary>
            Determines if the value is of type Color.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Core.MudExColor.IsMudColor">
            <summary>
            Determines if the value is of type MudColor.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Core.MudExColor.IsDrawingColor">
            <summary>
            Determines if the value is of type DrawingColor.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Core.MudExColor.IsString">
            <summary>
            Determines if the value is of type String.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Core.MudExColor.IsInt">
            <summary>
            Determines if the value is of type Integer.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Core.MudExColor.AsColor">
            <summary>
            Returns the value as Color type.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Core.MudExColor.AsMudColor">
            <summary>
            Returns the value as MudColor type.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Core.MudExColor.AsDrawingColor">
            <summary>
            Returns the value as DrawingColor type.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Core.MudExColor.AsString">
            <summary>
            Returns the value as String type.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Core.MudExColor.AsInt">
            <summary>
            Returns the value as Integer type.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExColor.Match``1(System.Func{MudBlazor.Color,``0},System.Func{MudBlazor.Utilities.MudColor,``0},System.Func{System.Drawing.Color,``0},System.Func{System.String,``0},System.Func{System.UInt32,``0})">
            <summary>
            Executes a function depending on the type of the value.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExColor.Switch(System.Action{MudBlazor.Color},System.Action{MudBlazor.Utilities.MudColor},System.Action{System.Drawing.Color},System.Action{System.String},System.Action{System.UInt32})">
            <summary>
            Executes an action depending on the type of the value.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExColor.op_Implicit(MudBlazor.Color)~MudBlazor.Extensions.Core.MudExColor">
            <summary>
            Implicit conversion from Color type to MudExColor.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExColor.op_Implicit(MudBlazor.Utilities.MudColor)~MudBlazor.Extensions.Core.MudExColor">
            <summary>
            Implicit conversion from MudColor type to MudExColor.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExColor.op_Implicit(System.Drawing.Color)~MudBlazor.Extensions.Core.MudExColor">
            <summary>
            Implicit conversion from DC type to MudExColor.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExColor.op_Implicit(System.String)~MudBlazor.Extensions.Core.MudExColor">
            <summary>
            Implicit conversion from String type to MudExColor.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExColor.op_Implicit(System.UInt32)~MudBlazor.Extensions.Core.MudExColor">
            <summary>
            Implicit conversion from Integer type to MudExColor.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExColor.Is(MudBlazor.Color)">
            <summary>
            Determines if the value equals the provided Color.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExColor.Is(System.String)">
            <summary>
            Determines if the value equals the provided String.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExColor.Is(MudBlazor.Utilities.MudColor)">
            <summary>
            Determines if the value equals the provided MudColor.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExColor.Is(System.UInt32)">
            <summary>
            Determines if the value equals the provided Integer.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExColor.Is(System.Drawing.Color)">
            <summary>
            Determines if the value equals the provided MudColor.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExColor.ToString">
            <summary>
            Converts this MudExColor object to its string representation.
            </summary>
            <returns>A string that represents this MudExColor object.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExColor.ToCssStringValue">
            <summary>
            Converts this MudExColor object to a CSS string.
            </summary>
            <returns>A CSS string that represents this MudExColor object.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExColor.ToCssStringValue(MudBlazor.Utilities.MudColorOutputFormats)">
            <summary>
            Creates a css compatible string representation of the color.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExColor.ToMudColorAsync(Microsoft.JSInterop.IJSRuntime)">
            <summary>
            Creates a MudColor independent of what the underlying type is.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExColor.ToMudColor">
            <summary>
            Creates a MudColor independent of what the underlying type is.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExColor.GetColorsFromThemeAsync(Microsoft.JSInterop.IJSRuntime,System.Int32)">
            <summary>
            Static helper method to list colors from current Theme
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExColor.GetSuggestedFormat(System.String)">
            <summary>
            returns the suggested format for a color string
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:MudBlazor.Extensions.Core.MudExDimension">
            <summary>
            Holds two sizes one for height and one for width and their units
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExDimension.#ctor(MudBlazor.Extensions.Core.MudExSize{System.Double})">
            <summary>
            Creates a new instance of <see cref="T:MudBlazor.Extensions.Core.MudExDimension"/>
            </summary>
            <param name="widthAndHeight"></param>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExDimension.#ctor(MudBlazor.Extensions.Core.MudExSize{System.Double},MudBlazor.Extensions.Core.MudExSize{System.Double})">
            <summary>
            Creates a new instance of <see cref="T:MudBlazor.Extensions.Core.MudExDimension"/>
            </summary>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExDimension.#ctor(System.String)">
            <summary>
            Creates a new size dimension by parsing an string like 3px or 10% etc
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Core.MudExDimension.Width">
            <summary>
            Width
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Core.MudExDimension.Height">
            <summary>
            Height
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExDimension.op_Implicit(System.Double)~MudBlazor.Extensions.Core.MudExDimension">
            <summary>
            Implicit conversion from double to <see cref="T:MudBlazor.Extensions.Core.MudExDimension"/>
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExDimension.op_Implicit(System.String)~MudBlazor.Extensions.Core.MudExDimension">
            <summary>
            Implicit conversion from String to MudExDimension type.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExDimension.ToString">
            <inheritdoc />
        </member>
        <member name="T:MudBlazor.Extensions.Core.MudExSize`1">
            <summary>
            MudExSize is a readonly struct that provides a convenient and type-safe way to deal with size values in the context of MudBlazor components.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Core.MudExSize`1.Value">
            <summary>
            The value of the size.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Core.MudExSize`1.SizeUnit">
            <summary>
            The unit of the size.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExSize`1.#ctor(System.String)">
            <summary>
            Creates a new size by parsing an string like 3px or 10% etc
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExSize`1.#ctor(`0,MudBlazor.Extensions.Core.CssUnit)">
            <summary>
            Creates a new size
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExSize`1.ToString">
            <summary>
            Returns the string representation that is fully compatible with all css sizes
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExSize`1.op_Implicit(MudBlazor.Extensions.Core.MudExSize{`0})~`0">
            <summary>
            Implicit conversion from MudExSize type to Generic Type T.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExSize`1.op_Implicit(`0)~MudBlazor.Extensions.Core.MudExSize{`0}">
            <summary>
            Implicit conversion from Generic Type T to MudExSize.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExSize`1.op_Implicit(MudBlazor.Extensions.Core.MudExSize{`0})~System.String">
            <summary>
            Implicit conversion from MudExSize type to String.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Core.MudExSize`1.op_Implicit(System.String)~MudBlazor.Extensions.Core.MudExSize{`0}">
            <summary>
            Implicit conversion from String to MudExSize type.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.DialogServiceExt">
            <summary>
            Dialog service extension methods.
            </summary>
            <summary>
            Contains extensions for the IDialogService for displaying a file in different formats.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.DefaultOptions">
            <summary>
            The default dialog options.
            </summary>
            <returns>The default dialog options.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.ShowEx``1(MudBlazor.IDialogService,System.String,System.Action{``0},System.Action{MudBlazor.Extensions.Options.DialogOptionsEx})">
            <summary>
            Shows the dialog and injects dependencies asynchronously.
            </summary>
            <typeparam name="TDialog">The dialog type.</typeparam>
            <param name="dialogService">The dialog service.</param>
            <param name="title">The title.</param>
            <param name="dialogParameters">The dialog parameters.</param>
            <param name="optionsEx">The options.</param>
            <returns>An <see cref="T:MudBlazor.Extensions.Core.IMudExDialogReference`1"/>.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.ShowEx``1(MudBlazor.IDialogService,System.String,``0,System.Action{MudBlazor.Extensions.Options.DialogOptionsEx})">
            <summary>
            Shows the dialog and injects dependencies asynchronously.
            </summary>
            <typeparam name="TDialog">The dialog type.</typeparam>
            <param name="dialogService">The dialog service.</param>
            <param name="title">The title.</param>
            <param name="dialogParameters">The dialog parameters.</param>
            <param name="optionsEx">The options.</param>
            <returns>An <see cref="T:MudBlazor.Extensions.Core.IMudExDialogReference`1"/>.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.ShowEx``1(MudBlazor.IDialogService,System.String,``0,MudBlazor.Extensions.Options.DialogOptionsEx)">
            <summary>
            Shows the dialog and injects dependencies asynchronously.
            </summary>
            <typeparam name="TDialog">The dialog type.</typeparam>
            <param name="dialogService">The dialog service.</param>
            <param name="title">The title.</param>
            <param name="dialogParameters">The dialog parameters.</param>
            <param name="optionsEx">The options.</param>
            <returns>An <see cref="T:MudBlazor.Extensions.Core.IMudExDialogReference`1"/>.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.ShowEx``1(MudBlazor.IDialogService,System.String,System.Action{``0},MudBlazor.Extensions.Options.DialogOptionsEx)">
            <summary>
            Shows the dialog and injects dependencies asynchronously.
            </summary>
            <typeparam name="TDialog">The dialog type.</typeparam>
            <param name="dialogService">The dialog service.</param>
            <param name="title">The title.</param>
            <param name="dialogParameters">The dialog parameters.</param>
            <param name="optionsEx">The options.</param>
            <returns>An <see cref="T:MudBlazor.Extensions.Core.IMudExDialogReference`1"/>.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.Show``1(MudBlazor.IDialogService,System.String,System.Action{``0},System.Action{MudBlazor.DialogOptions})">
            <summary>
            Shows the dialog and injects dependencies immediately.
            </summary>
            <typeparam name="TDialog">The dialog type.</typeparam>
            <param name="dialogService">The dialog service.</param>
            <param name="title">The title.</param>
            <param name="dialogParameters">The dialog parameters.</param>
            <param name="options">The options.</param>
            <returns>An <see cref="T:MudBlazor.Extensions.Core.IMudExDialogReference`1"/>.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.Show``1(MudBlazor.IDialogService,System.String,``0,System.Action{MudBlazor.DialogOptions})">
            <summary>
            Shows the dialog and injects dependencies immediately.
            </summary>
            <typeparam name="TDialog">The dialog type.</typeparam>
            <param name="dialogService">The dialog service.</param>
            <param name="title">The title.</param>
            <param name="dialogParameters">The dialog parameters.</param>
            <param name="options">The options.</param>
            <returns>An <see cref="T:MudBlazor.Extensions.Core.IMudExDialogReference`1"/>.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.Show``1(MudBlazor.IDialogService,System.String,``0,MudBlazor.DialogOptions)">
            <summary>
            Shows the dialog and injects dependencies immediately.
            </summary>
            <typeparam name="TDialog">The dialog type.</typeparam>
            <param name="dialogService">The dialog service.</param>
            <param name="title">The title.</param>
            <param name="dialogParameters">The dialog parameters.</param>
            <param name="options">The options.</param>
            <returns>An <see cref="T:MudBlazor.Extensions.Core.IMudExDialogReference`1"/>.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.Show``1(MudBlazor.IDialogService,System.String,System.Action{``0},MudBlazor.DialogOptions)">
            <summary>
            Shows the dialog and injects dependencies immediately.
            </summary>
            <typeparam name="TDialog">The dialog type.</typeparam>
            <param name="dialogService">The dialog service.</param>
            <param name="title">The title.</param>
            <param name="dialogParameters">The dialog parameters.</param>
            <param name="options">The options.</param>
            <returns>An <see cref="T:MudBlazor.Extensions.Core.IMudExDialogReference`1"/>.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.ShowEx``1(MudBlazor.IDialogService,System.String,MudBlazor.DialogParameters,MudBlazor.Extensions.Options.DialogOptionsEx)">
            <summary>
            Shows the dialog and injects dependencies asynchronously.
            </summary>
            <typeparam name="T">The type.</typeparam>
            <param name="dialogService">The dialog service.</param>
            <param name="title">The title.</param>
            <param name="parameters">The dialog parameters.</param>
            <param name="options">The options.</param>
            <returns>An <see cref="T:MudBlazor.Extensions.Core.IMudExDialogReference`1"/>.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.ShowEx``1(MudBlazor.IDialogService,System.String,MudBlazor.Extensions.Options.DialogOptionsEx)">
            <summary>
            Shows the dialog and injects dependencies asynchronously.
            </summary>
            <typeparam name="T">The type.</typeparam>
            <param name="dialogService">The dialog service.</param>
            <param name="title">The title.</param>
            <param name="options">The options.</param>
            <returns>An <see cref="T:MudBlazor.Extensions.Core.IMudExDialogReference`1"/>.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.ShowEx(MudBlazor.IDialogService,System.Type,System.String,MudBlazor.DialogParameters,MudBlazor.Extensions.Options.DialogOptionsEx)">
            <summary>
            Shows the dialog and injects dependencies immediately.
            </summary>
            <param name="dialogService">The dialog service.</param>
            <param name="type">The type.</param>
            <param name="title">The title.</param>
            <param name="parameters">The dialog parameters.</param>
            <param name="options">The options.</param>
            <returns>An <see cref="T:MudBlazor.IDialogReference"/>reference.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.ShowMessageBoxEx(MudBlazor.IDialogService,MudBlazor.MessageBoxOptions,MudBlazor.Extensions.Options.DialogOptionsEx)">
            <summary>
            Shows the message box asynchronously.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.GetDialogAsync``1(MudBlazor.IDialogReference)">
            <summary>
            Gets the dialog component asynchronously.
            </summary>
            <typeparam name="T">The type.</typeparam>
            <param name="dialogReference">The dialog reference.</param>
            <returns>The dialog component.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.ShowFileDisplayDialog(MudBlazor.IDialogService,System.String,System.String,System.String,System.Func{MudBlazor.Extensions.Components.IMudExFileDisplayInfos,System.Threading.Tasks.Task{MudBlazor.Extensions.Components.MudExFileDisplayContentErrorResult}},System.Action{MudBlazor.Extensions.Options.DialogOptionsEx})">
            <summary>
            Shows a dialog which displays a file at the specified url.
            </summary>
            <param name="dialogService">The dialog service instance.</param>
            <param name="url">The url of the file.</param>
            <param name="fileName">The name of the file.</param>
            <param name="contentType">The content type of the file.</param>
            <param name="handleContentErrorFunc">A function that is called if an error occurs while handling the file's content.</param>
            <param name="options">Dialog options for the displayed file.</param>
            <returns>An awaitable task with the dialog reference.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.ShowFileDisplayDialog(MudBlazor.IDialogService,Microsoft.AspNetCore.Components.Forms.IBrowserFile,System.Func{MudBlazor.Extensions.Components.IMudExFileDisplayInfos,System.Threading.Tasks.Task{MudBlazor.Extensions.Components.MudExFileDisplayContentErrorResult}},System.Action{MudBlazor.Extensions.Options.DialogOptionsEx})">
            <summary>
            Shows a dialog which displays a browser file.
            </summary>
            <param name="dialogService">The dialog service instance.</param>
            <param name="browserFile">The browser file to display.</param>
            <param name="handleContentErrorFunc">A function that is called if an error occurs while handling the file's content.</param>
            <param name="options">Dialog options for the displayed file.</param>
            <returns>An awaitable task with the dialog reference.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.ShowFileDisplayDialog(MudBlazor.IDialogService,System.IO.Stream,System.String,System.String,System.Func{MudBlazor.Extensions.Components.IMudExFileDisplayInfos,System.Threading.Tasks.Task{MudBlazor.Extensions.Components.MudExFileDisplayContentErrorResult}},System.Action{MudBlazor.Extensions.Options.DialogOptionsEx})">
            <summary>
            Shows a dialog which displays a file from a given stream.
            </summary>
            <param name="dialogService">The dialog service instance.</param>
            <param name="stream">The stream containing the file.</param>
            <param name="fileName">The name of the file.</param>
            <param name="contentType">The content type of the file.</param>
            <param name="handleContentErrorFunc">A function that is called if an error occurs while handling the file's content.</param>
            <param name="options">Dialog options for the displayed file.</param>
            <returns>An awaitable task with the dialog reference.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.ShowFileDisplayDialog(MudBlazor.IDialogService,System.String,System.String,System.String,System.Action{MudBlazor.Extensions.Options.DialogOptionsEx},MudBlazor.DialogParameters)">
            <summary>
            Shows a dialog which displays a file at the specified url.
            </summary>
            <param name="dialogService">The dialog service instance.</param>
            <param name="url">The url of the file.</param>
            <param name="fileName">The name of the file.</param>
            <param name="contentType">The content type of the file.</param>
            <param name="options">Dialog options for the displayed file.</param>
            <param name="dialogParameters">Parameters to pass to the dialog.</param>
            <returns>An awaitable task with the dialog reference.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.ShowFileDisplayDialog(MudBlazor.IDialogService,Microsoft.AspNetCore.Components.Forms.IBrowserFile,System.Action{MudBlazor.Extensions.Options.DialogOptionsEx},MudBlazor.DialogParameters)">
            <summary>
            Shows a dialog which displays a browser file.
            </summary>
            <param name="dialogService">The dialog service instance.</param>
            <param name="browserFile">The browser file to display.</param>
            <param name="options">Dialog options for the displayed file.</param>
            <param name="dialogParameters">Parameters to pass to the dialog.</param>
            <returns>An awaitable task with the dialog reference.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.ShowFileDisplayDialog(MudBlazor.IDialogService,System.IO.Stream,System.String,System.String,System.Action{MudBlazor.Extensions.Options.DialogOptionsEx},MudBlazor.DialogParameters)">
            <summary>
            Shows a dialog which displays a file from a given stream.
            </summary>
            <param name="dialogService">The dialog service instance.</param>
            <param name="stream">The stream containing the file.</param>
            <param name="fileName">The name of the file.</param>
            <param name="contentType">The content type of the file.</param>
            <param name="options">Dialog options for the displayed file.</param>
            <param name="dialogParameters">Parameters to pass to the dialog.</param>
            <returns>An awaitable task with the dialog reference.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.ShowComponentInDialogAsync``1(MudBlazor.IDialogService,System.String,System.String,System.Action{``0})">
            <summary>
            Shows a component in a dialog with a title and message. Dialog parameters are passed as a new DialogParameters object instance.
            </summary>
            <typeparam name="TComponent">The type of the component to be shown.</typeparam>
            <param name="dialogService">The IDialogService instance.</param>
            <param name="title">The title of the dialog.</param>
            <param name="message">The message to be shown in the dialog.</param>
            <param name="componentOptions">The action that configures the component.</param>
            <returns>A Task whose result is a value tuple of DialogResult and TComponent representing the result of the operation.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.ShowComponentInDialogAsync``1(MudBlazor.IDialogService,System.String,System.String,System.String,System.Action{``0})">
            <summary>
            Shows a component in a dialog with a title, message, and icon. Dialog parameters are passed as a new DialogParameters object instance.
            </summary>
            <typeparam name="TComponent">The type of the component to be shown.</typeparam>
            <param name="dialogService">The IDialogService instance.</param>
            <param name="title">The title of the dialog.</param>
            <param name="message">The message to be shown in the dialog.</param>
            <param name="icon">The icon to be shown in the dialog.</param>
            <param name="componentOptions">The action that configures the component.</param>
            <returns>A Task whose result is a value tuple of DialogResult and TComponent representing the result of the operation.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.ShowComponentInDialogAsync``1(MudBlazor.IDialogService,System.String,System.Action{``0})">
            <summary>
            Shows a component in a dialog with a title. Dialog parameters are passed as a new DialogParameters object instance.
            </summary>
            <typeparam name="TComponent">The type of the component to be shown.</typeparam>
            <param name="dialogService">The IDialogService instance.</param>
            <param name="title">The title of the dialog.</param>
            <param name="componentOptions">The action that configures the component.</param>
            <returns>A Task whose result is a value tuple of DialogResult and TComponent representing the result of the operation.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.ShowComponentInDialogAsync``1(MudBlazor.IDialogService,System.String,System.String,System.Action{``0},System.Action{MudBlazor.Extensions.Components.MudExMessageDialog},System.Action{MudBlazor.Extensions.Options.DialogOptionsEx})">
            <summary>
            Shows a component in a dialog with a title, message, component configuration action, dialog parameters action and dialog options.
            </summary>
            <typeparam name="TComponent">The type of the component to be shown.</typeparam>
            <param name="dialogService">The IDialogService instance.</param>
            <param name="title">The title of the dialog.</param>
            <param name="message">The message to be shown in the dialog.</param>
            <param name="componentOptions">The action that configures the component.</param>
            <param name="dialogParameters">The action that configures the dialog parameters.</param>
            <param name="options">The action that configures the dialog options.</param>
            <returns>A Task whose result is a value tuple of DialogResult and TComponent representing the result of the operation.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.ShowComponentInDialogAsync``1(MudBlazor.IDialogService,System.String,System.String,System.Action{``0},MudBlazor.Extensions.Options.DialogOptionsEx)">
            <summary>
            Shows a component in a dialog with a title, message, component configuration action and dialog options action.
            </summary>
            <typeparam name="TComponent">The type of the component to be shown.</typeparam>
            <param name="dialogService">The IDialogService instance.</param>
            <param name="title">The title of the dialog.</param>
            <param name="message">The message to be shown in the dialog.</param>
            <param name="componentOptions">The action that configures the component.</param>
            <param name="options">The action that configures the dialog options.</param>
            <returns>A Task whose result is a value tuple of DialogResult and TComponent representing the result of the operation.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.ShowComponentInDialogAsync``1(MudBlazor.IDialogService,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{MudBlazor.Extensions.Components.MudExMessageDialog},MudBlazor.Extensions.Options.DialogOptionsEx)">
            <summary>
            Shows a component in a dialog with a title, message, component configuration dictionary, dialog parameters action and dialog options action.
            </summary>
            <typeparam name="TComponent">The type of the component to be shown.</typeparam>
            <param name="dialogService">The IDialogService instance.</param>
            <param name="title">The title of the dialog.</param>
            <param name="message">The message to be shown in the dialog.</param>
            <param name="componentOptions">The dictionary that configures the component.</param>
            <param name="dialogParameters">The action that configures the dialog parameters.</param>
            <param name="options">The action that configures the dialog options.</param>
            <returns>A Task whose result is a value tuple of DialogResult and TComponent representing the result of the operation.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.ShowComponentInDialogAsync``1(MudBlazor.IDialogService,System.String,System.String,System.Action{``0},System.Action{MudBlazor.Extensions.Components.MudExMessageDialog},MudBlazor.Extensions.Options.DialogOptionsEx)">
            <summary>
            Shows a component in a dialog with a title, message, component configuration action, dialog parameters object and dialog options action.
            </summary>
            <typeparam name="TComponent">The type of the component to be shown.</typeparam>
            <param name="dialogService">The IDialogService instance.</param>
            <param name="title">The title of the dialog.</param>
            <param name="message">The message to be shown in the dialog.</param>
            <param name="componentOptions">The action that configures the component.</param>
            <param name="dialogParameters">The dialog parameters to be passed.</param>
            <param name="options">The action that configures the dialog options.</param>
            <returns>A Task whose result is a value tuple of DialogResult and TComponent representing the result of the operation.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.ShowComponentInDialogAsync``1(MudBlazor.IDialogService,System.String,System.String,System.Action{``0},MudBlazor.DialogParameters,System.Action{MudBlazor.Extensions.Options.DialogOptionsEx})">
            <summary>
            Shows a component in a dialog with a title, message, component configuration action, dialog parameters object, and dialog options object.
            </summary>
            <typeparam name="TComponent">The type of the component to be shown.</typeparam>
            <param name="dialogService">The IDialogService instance.</param>
            <param name="title">The title of the dialog.</param>
            <param name="message">The message to be shown in the dialog.</param>
            <param name="componentOptions">The action that configures the component.</param>
            <param name="dialogParameters">The dialog parameters to be passed.</param>
            <param name="options">The dialog options to be passed.</param>
            <returns>A Task whose result is a value tuple of DialogResult and TComponent representing the result of the operation.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.ShowComponentInDialogAsync``1(MudBlazor.IDialogService,System.String,System.String,System.Action{``0},MudBlazor.DialogParameters,MudBlazor.Extensions.Options.DialogOptionsEx)">
            <summary>
            Shows a dialog with a custom component asynchronously.
            </summary>
            <param name="dialogService">Instance of IDialogService</param>
            <param name="title">Title of the dialog</param>
            <param name="message">Message of the dialog</param>
            <param name="componentOptions">Component-specific configuration parameters</param>
            <param name="dialogParameters">Parameters for the dialog</param>
            <param name="options">Options for the dialog</param>
            <returns>A Task that returns a tuple consisting of a DialogResult and the component displayed in the dialog</returns>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.ShowComponentInDialogAsync``1(MudBlazor.IDialogService,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Action{MudBlazor.Extensions.Components.MudExMessageDialog},System.Action{MudBlazor.Extensions.Options.DialogOptionsEx})">
            <summary>
            Shows a dialog with a custom component asynchronously.
            </summary>
            <param name="dialogService">Instance of IDialogService</param>
            <param name="title">Title of the dialog</param>
            <param name="message">Message of the dialog</param>
            <param name="componentOptions">Component-specific configuration parameters</param>
            <param name="dialogParameters">Parameters for the dialog</param>
            <param name="options">Options for the dialog</param>
            <returns>A Task that returns a tuple consisting of a DialogResult and the component displayed in the dialog</returns>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.ShowComponentInDialogAsync``1(MudBlazor.IDialogService,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},MudBlazor.DialogParameters,System.Action{MudBlazor.Extensions.Options.DialogOptionsEx})">
            <summary>
            Shows a dialog with a custom component asynchronously.
            </summary>
            <param name="dialogService">Instance of IDialogService</param>
            <param name="title">Title of the dialog</param>
            <param name="message">Message of the dialog</param>
            <param name="componentOptions">Component-specific configuration parameters</param>
            <param name="dialogParameters">Parameters for the dialog</param>
            <param name="options">Options for the dialog</param>
            <returns>A Task that returns a tuple consisting of a DialogResult and the component displayed in the dialog</returns>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.ShowComponentInDialogOkCancelAsync``1(MudBlazor.IDialogService,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},MudBlazor.DialogParameters,MudBlazor.Extensions.Options.DialogOptionsEx)">
            <summary>
            Shows a dialog with a custom component asynchronously.
            </summary>
            <param name="dialogService">Instance of IDialogService</param>
            <param name="title">Title of the dialog</param>
            <param name="message">Message of the dialog</param>
            <param name="componentOptions">Component-specific configuration parameters</param>
            <param name="dialogParameters">Parameters for the dialog</param>
            <param name="options">Options for the dialog</param>
            <returns>A Task that returns a tuple consisting of a DialogResult and the component displayed in the dialog</returns>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.ShowComponentInDialogAsync``1(MudBlazor.IDialogService,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},MudBlazor.DialogParameters,MudBlazor.Extensions.Options.DialogOptionsEx)">
            <summary>
            Shows a dialog with a custom component asynchronously.
            </summary>
            <param name="dialogService">Instance of IDialogService</param>
            <param name="title">Title of the dialog</param>
            <param name="message">Message of the dialog</param>
            <param name="componentOptions">Component-specific configuration parameters</param>
            <param name="dialogParameters">Parameters for the dialog</param>
            <param name="options">Options for the dialog</param>
            <returns>A Task that returns a tuple consisting of a DialogResult and the component displayed in the dialog</returns>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.ShowConfirmationDialogAsync(MudBlazor.IDialogService,System.String,MudBlazor.DialogParameters,MudBlazor.Extensions.Options.DialogOptionsEx)">
            <summary>
            Shows a confirmation dialog asynchronously.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.ShowConfirmationDialogAsync(MudBlazor.IDialogService,MudBlazor.MessageBoxOptions,MudBlazor.Extensions.Options.DialogOptionsEx)">
            <summary>
            Shows a confirmation dialog with custom MessageBoxOptions asynchronously.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.ShowConfirmationDialogAsync(MudBlazor.IDialogService,MudBlazor.MessageBoxOptions,System.String,MudBlazor.Extensions.Options.DialogOptionsEx)">
            <summary>
            Shows a confirmation dialog with custom MessageBoxOptions and an icon asynchronously.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.ShowConfirmationDialogAsync(MudBlazor.IDialogService,System.String,System.String,System.String,System.String,System.String,MudBlazor.Extensions.Options.DialogOptionsEx)">
            <summary>
            Shows a confirmation dialog with customizable title, message, confirm text, cancel text, and icon asynchronously.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.ShowInformationAsync(MudBlazor.IDialogService,System.String,System.Action{MudBlazor.Extensions.Components.MudExMessageDialog},MudBlazor.Extensions.Options.DialogOptionsEx)">
            <summary>
            Shows an information dialog with customizable parameters asynchronously.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.ShowInformationAsync(MudBlazor.IDialogService,System.String,MudBlazor.DialogParameters,MudBlazor.Extensions.Options.DialogOptionsEx)">
            <summary>
            Shows an information dialog with custom DialogParameters asynchronously.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.ShowInformationAsync(MudBlazor.IDialogService,System.String,System.String)">
            <summary>
            Shows an information dialog with a custom message asynchronously.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.ShowInformationAsync(MudBlazor.IDialogService,System.String,System.String,System.String,MudBlazor.Extensions.Options.DialogOptionsEx)">
            <summary>
            Shows an information dialog with a custom message and icon asynchronously.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.ShowInformationAsync(MudBlazor.IDialogService,System.String,System.String,System.String,System.Boolean,System.Boolean,MudBlazor.Extensions.Options.DialogOptionsEx)">
            <summary>
            Shows an information dialog with a custom message, icon, ability to close, and show progress asynchronously.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.PromptAsync(MudBlazor.IDialogService,System.String,System.String,MudBlazor.Extensions.Options.DialogOptionsEx)">
            <summary>
            Prompts the user for input with a default empty string asynchronously.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.PromptAsync(MudBlazor.IDialogService,System.String,System.String,System.Func{System.String,System.Boolean},MudBlazor.Extensions.Options.DialogOptionsEx)">
            <summary>
            Prompts the user for input with a validation function asynchronously.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.PromptAsync(MudBlazor.IDialogService,System.String,System.String,System.String,System.Func{System.String,System.Boolean},MudBlazor.Extensions.Options.DialogOptionsEx)">
            <summary>
            Prompts the user for input with a validation function and custom icon asynchronously.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.PromptAsync(MudBlazor.IDialogService,System.String,System.String,System.String,System.String,System.String,System.String,System.Func{System.String,System.Boolean},MudBlazor.Extensions.Options.DialogOptionsEx)">
            <summary>
            Prompts the user for input with customizable title, message, initialValue, buttonOkText, buttonCancelText, icon, validation function, and dialog options asynchronously.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.ShowObject``1(MudBlazor.IDialogService,``0,System.String,MudBlazor.Extensions.Options.DialogOptionsEx,System.Action{MudBlazor.Extensions.Components.ObjectEdit.Options.ObjectEditMeta{``0}},MudBlazor.DialogParameters)">
            <summary>
            Shows an object edit dialog as readonly for given object.
            </summary>
            <typeparam name="TModel">The type of the object to edit.</typeparam>
            <param name="dialogService">The dialog service to use.</param>
            <param name="value">The object to edit.</param>
            <param name="title">The dialog title.</param>
            <param name="options">The dialog options.</param>
            <param name="metaConfig">The configuration of meta information.</param>
            <param name="dialogParameters">The dialog parameters.</param>
            <returns>A tuple indicating if edit was cancelled and the result. </returns>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.EditObject``1(MudBlazor.IDialogService,``0,System.String,System.Func{``0,MudBlazor.Extensions.Components.ObjectEdit.MudExObjectEditDialog{``0},System.Threading.Tasks.Task{System.String}},MudBlazor.Extensions.Options.DialogOptionsEx,System.Action{MudBlazor.Extensions.Components.ObjectEdit.Options.ObjectEditMeta{``0}},MudBlazor.DialogParameters)">
            <summary>
            Shows an object edit dialog for the given object.
            </summary>
            <typeparam name="TModel">The type of the object to edit.</typeparam>
            <param name="dialogService">The dialog service to use.</param>
            <param name="value">The object to edit.</param>
            <param name="title">The dialog title.</param>
            <param name="options">The dialog options.</param>
            <param name="metaConfig">The configuration of meta information.</param>
            <param name="dialogParameters">The dialog parameters.</param>
            <returns>A tuple indicating if edit was cancelled and the result.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.DialogServiceExt.EditObject``1(MudBlazor.IDialogService,``0,System.String,MudBlazor.Extensions.Options.DialogOptionsEx,System.Action{MudBlazor.Extensions.Components.ObjectEdit.Options.ObjectEditMeta{``0}},MudBlazor.DialogParameters)">
            <summary>
            Shows an object edit dialog for the given object.
            </summary>
            <typeparam name="TModel">The type of the object to edit.</typeparam>
            <param name="dialogService">The dialog service to use.</param>
            <param name="value">The object to edit.</param>
            <param name="title">The dialog title.</param>
            <param name="options">The dialog options.</param>
            <param name="metaConfig">The configuration of meta information.</param>
            <param name="dialogParameters">The dialog parameters.</param>
            <returns>A tuple indicating if edit was cancelled and the result.</returns>
        </member>
        <member name="T:MudBlazor.Extensions.Helper.BrowserFileExt">
            <summary>
            Extensions for <see cref="T:Microsoft.AspNetCore.Components.Forms.IBrowserFile"/>
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.BrowserFileExt.DownloadAsync(Microsoft.AspNetCore.Components.Forms.IBrowserFile,Microsoft.JSInterop.IJSRuntime)">
            <summary>
            Downloads the file
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.BrowserFileExt.IconForFile(System.String)">
            <summary>
            Returns Icon for contentType
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.BrowserFileExt.GetIcon(Microsoft.AspNetCore.Components.Forms.IBrowserFile)">
            <summary>
            Returns Icon for IBrowserFile
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.BrowserFileExt.GetContentType(Microsoft.AspNetCore.Components.Forms.IBrowserFile)">
            <summary>
            Returns the content type for given file
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.BrowserFileExt.IconForFile(System.Net.Mime.ContentType)">
            <summary>
            Returns Icon for contentType
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.BrowserFileExt.IconForExtension(System.String)">
            <summary>
            Returns Icon for an extension
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Helper.DialogParametersExtensions">
            <summary>
            Static extensions for DialogParameters and relevant types.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.DialogParametersExtensions.MergeWith(MudBlazor.DialogParameters,MudBlazor.DialogParameters)">
            <summary>
            Merges the dialog parameters.
            </summary>
            <param name="dialogParameters">The dialog parameters.</param>
            <param name="parameters">The parameters.</param>
            <returns>The merged dialog parameters.</returns>        
        </member>
        <member name="M:MudBlazor.Extensions.Helper.DialogParametersExtensions.ToDialogParameters(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Converts parameters to dialog parameters.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>The dialog parameters.</returns>        
        </member>
        <member name="M:MudBlazor.Extensions.Helper.DialogParametersExtensions.ConvertToDialogParameters``1(System.Action{``0})">
            <summary>
            Converts dialog parameters to a dictionary.
            </summary>
            <typeparam name="TDialog">The dialog type.</typeparam>
            <param name="dialogParameters">The dialog parameters.</param>
            <returns>The dictionary of dialog parameters.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.DialogParametersExtensions.ConvertToDialogParameters``1(``0)">
            <summary>
            Converts dialog parameters to a dictionary.
            </summary>
            <typeparam name="TDialog">The dialog type.</typeparam>
            <param name="dialogParameters">The dialog parameters.</param>
            <returns>The dictionary of dialog parameters.</returns>
        </member>
        <member name="T:MudBlazor.Extensions.Helper.DialogReferenceExtensions">
            <summary>
            Extensions for dialog reference
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.DialogReferenceExtensions.GetDialogId(MudBlazor.IDialogReference)">
            <summary>
            returns the Id for a rendered dialogReference 
            </summary>
            <param name="dialogReference"></param>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.Internal.SizeParser.ParseMudExSize``1(System.String)">
            <summary>
            Parses a string to a tuple of value and unit.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="T:MudBlazor.Extensions.Helper.JsImportHelper">
            <summary>
            Helper class for importing JS modules
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.JsImportHelper.InitializeMudBlazorExtensionsAsync(Microsoft.JSInterop.IJSRuntime,System.Boolean)">
            <summary>
            Imports requires JS module and required css styles for MudBlazor.Extensions
            </summary>        
        </member>
        <member name="M:MudBlazor.Extensions.Helper.JsImportHelper.InitializeMudBlazorExtensionsCoreAsync(Microsoft.JSInterop.IJSRuntime,System.Boolean)">
            <summary>
            Imports requires JS module and required css styles for MudBlazor.Extensions
            </summary>        
        </member>
        <member name="T:MudBlazor.Extensions.Helper.JsonHelper">
            <summary>
            Simple JsonHelper
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.JsonHelper.SimplifyMudColorInJson(System.String)">
            <summary>
            Simplifies all MudColors in a given JSON
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.JsonHelper.MergeJson(System.String,System.String[])">
            <summary>
            Merges two json files
            </summary>
            <param name="json"></param>
            <param name="other"></param>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.JsonHelper.RemovePropertiesFromJson(System.String,System.String[])">
            <summary>
            Removes given properties from given json.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Helper.JsRuntimeExtensions">
            <summary>
            Contains extension methods for IJSRuntime to call MudBlazor extensions JavaScript functions.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.JsRuntimeExtensions.IsNamespaceAvailableAsync(Microsoft.JSInterop.IJSRuntime,System.String)">
            <summary>
            Checks if a namespace exists
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.JsRuntimeExtensions.IsWithin(Microsoft.JSInterop.IJSRuntime,Microsoft.AspNetCore.Components.Web.MouseEventArgs,Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            Checks if given mouse args are within given element.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.JsRuntimeExtensions.GetCssVariablesAsync(Microsoft.JSInterop.IJSRuntime)">
            <summary>
            Returns all current CssVariables
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.JsRuntimeExtensions.FindCssVariablesByValueAsync(Microsoft.JSInterop.IJSRuntime,System.String)">
            <summary>
            Returns css variables by value
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.JsRuntimeExtensions.SetCssVariableValueAsync(Microsoft.JSInterop.IJSRuntime,System.Collections.Generic.KeyValuePair{System.String,System.String})">
            <summary>
            Updates or creates a new css variable
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.JsRuntimeExtensions.SetCssVariableValueAsync(Microsoft.JSInterop.IJSRuntime,System.String,System.Object,System.Object[])">
            <summary>
            Updates or creates a new css variable
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.JsRuntimeExtensions.SetCssVariableValueAsync(Microsoft.JSInterop.IJSRuntime,System.String,System.Object)">
            <summary>
            Updates or creates a new css variable
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.JsRuntimeExtensions.SetCssVariableValueAsync(Microsoft.JSInterop.IJSRuntime,System.String,MudBlazor.Color)">
            <summary>
            Updates or creates a new css variable
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.JsRuntimeExtensions.SetCssVariableValueAsync(Microsoft.JSInterop.IJSRuntime,System.String,MudBlazor.Utilities.MudColor)">
            <summary>
            Updates or creates a new css variable
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.JsRuntimeExtensions.SetCssVariableValueAsync(Microsoft.JSInterop.IJSRuntime,System.String,System.String)">
            <summary>
            Updates or creates a new css variable
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.JsRuntimeExtensions.GetCssColorVariablesAsync(Microsoft.JSInterop.IJSRuntime)">
            <summary>
            Returns all CSS variables that containing color values
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Helper.MudExColorUtils">
            <summary>
            MudExColor is a static utility class that provides a set of extension methods for working with Color and MudColor instances.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExColorUtils.AllColors(MudBlazor.Palette)">
            <summary>
            Returns array with all colors in given palette.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExColorUtils.AllColors(MudBlazor.PaletteLight)">
            <summary>
            Returns array with all colors in given palette.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExColorUtils.AllColors(MudBlazor.PaletteDark)">
            <summary>
            Returns array with all colors in given palette.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExColorUtils.ToInt(MudBlazor.Utilities.MudColor)">
            <summary>
            Converts a MudColor to an int
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExColorUtils.ToUInt(MudBlazor.Utilities.MudColor)">
            <summary>
            Converts a MudColor to an unsigned int
            </summary>    
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExColorUtils.CssVarName(MudBlazor.Color)">
            <summary>
            Returns the CSS variable name for the given color.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExColorUtils.CssVarDeclaration(MudBlazor.Color)">
            <summary>
            Returns the CSS variable declaration for the given color. For example var(--mud-color-primary) for Color.Primary
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExColorUtils.ToDrawingColor(MudBlazor.Utilities.MudColor)">
            <summary>
            Converts a MudColor to a system drawing color
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExColorUtils.ToMudColorAsync(MudBlazor.Color,Microsoft.JSInterop.IJSRuntime)">
            <summary>
            Converts a Color enum value of Color (like Color.Primary) to a MudColor with the correct values filled
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExColorUtils.ToMudColor(System.Drawing.Color)">
            <summary>
            Converts a system drawing color to a MudColor
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExColorUtils.ToCssRgba(MudBlazor.Utilities.MudColor)">
            <summary>
            Converts a MudColor to a string in the format css rgba format
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExColorUtils.IsBlack(MudBlazor.Utilities.MudColor)">
            <summary>
            returns true is given color is black
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExColorUtils.IsWhite(MudBlazor.Utilities.MudColor)">
            <summary>
            returns true is given color is white
            </summary>    
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExColorUtils.FromHtmlColorName(System.String)">
            <summary>
            Creates a drawing color from html known color name
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExColorUtils.ToHex(System.Drawing.Color)">
            <summary>
            Converts a system drawing color to hey
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExColorUtils.IsValid(MudBlazor.Utilities.MudColor)">
            <summary>
            returns true is given MudColor is not null and valid filled
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExColorUtils.TryParseFromHtmlColorName(System.String,System.Drawing.Color@)">
            <summary>
            Try's to parse string to system drawing color
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Helper.MudExCss">
            <summary>
            Static Util class with some small css helping methods or types
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Helper.MudExCss.Classes">
            <summary>
            MudExCss classes
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Helper.MudExCss.Classes.Backgrounds">
            <summary>
            Css classes for backgrounds
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Helper.MudExCss.Classes.Backgrounds.Blur">
            <summary>
            Blur background
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Helper.MudExCss.Classes.Backgrounds.LightBulb">
            <summary>
            Light bulb background
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Helper.MudExCss.Classes.Backgrounds.MovingDots">
            <summary>
            Background with animated moving color dots
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Helper.MudExCss.Classes.Backgrounds.TransparentIndicator">
            <summary>
            Background with Transparent indicator style
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Helper.MudExCss.Classes.Backgrounds.EmptyIndicator">
            <summary>
            Background used for Empty content
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Helper.MudExCss.Classes.Backgrounds.NoModal">
            <summary>
            Class used for Background if no modal dialogs appear
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Helper.MudExCss.Classes.Class">
            <summary>
            Class to apply
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Helper.MudExCss.Classes.Dialog">
            <summary>
            Css classes for dialogs
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Helper.MudExCss.Classes.Dialog._Initial">
            <summary>
            The mud ex initial class should always applied to dialogs if you use dialogServiceExt
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Helper.MudExCss.Classes.Dialog.Glass">
            <summary>
            Glass dialog
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Helper.MudExCss.Classes.Dialog.FullHeightContent">
            <summary>
            Class for full height content
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExCss.GetAnimationCssStyle(MudBlazor.Extensions.Options.AnimationType,System.TimeSpan,System.Nullable{MudBlazor.Extensions.Options.AnimationDirection},MudBlazor.Extensions.Options.AnimationTimingFunction,System.Nullable{MudBlazor.DialogPosition})">
            <summary>
            Returns an applicable style string as animation for given animations options
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExCss.GetAnimationCssStyle(MudBlazor.Extensions.Options.AnimationType[],System.TimeSpan,System.Nullable{MudBlazor.Extensions.Options.AnimationDirection},MudBlazor.Extensions.Options.AnimationTimingFunction,System.Nullable{MudBlazor.DialogPosition})">
            <summary>
            Returns an applicable style string as animation for given animations options
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExCss.Get(MudBlazor.Extensions.Helper.MudExCss.Classes,MudBlazor.Extensions.Helper.MudExCss.Classes[])">
            <summary>
            Can used jus to quickly access some classes.
            MudExCss.Get(MudExCss.Classes.Dialog.FullHeightContent, "overflow-hidden", MudExCss.Classes.Dialog._Initial);
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExCss.CreateStyle(System.Action{MudBlazor.Extensions.Helper.MudExStyleBuilder})">
            <summary>
            Creates a style builder with applied styles from given action
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Helper.MudExCssBuilder">
            <summary>
            Simple Utility class to help with building css class strings
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Helper.MudExCssBuilder.Default">
            <summary>
            Static Property to access an instance <see cref="T:MudBlazor.Extensions.Helper.MudExStyleBuilder"/>
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExCssBuilder.From(System.String,System.String[])">
            <summary>
            Static method to create new MudExCssBuilder with existing classes
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExCssBuilder.From(MudBlazor.Extensions.Helper.MudExCss.Classes,MudBlazor.Extensions.Helper.MudExCss.Classes[])">
            <summary>
            Static method to create new MudExCssBuilder with existing classes
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExCssBuilder.From(MudBlazor.Extensions.Helper.MudExCssBuilder)">
            <summary>
            Static method to create new MudExCssBuilder with existing classes
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExCssBuilder.FromStyleAsync(System.Object)">
            <summary>
            Static method to create new MudExCssBuilder with existing styles. All styles will stored in temporary css classes and added to the builder
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExCssBuilder.FromStyleAsync(System.String)">
            <summary>
            Static method to create new MudExCssBuilder with existing styles. All styles will stored in temporary css classes and added to the builder
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExCssBuilder.FromStyleAsync(MudBlazor.Extensions.Helper.MudExStyleBuilder)">
            <summary>
            Static method to create new MudExCssBuilder with existing styles. All styles will stored in temporary css classes and added to the builder
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExCssBuilder.RemoveClassesAsync(System.String[])">
            <summary>
            Remove class from this builder
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExCssBuilder.AddClass(System.String)">
            <summary>
            Adds a css class to this builder
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExCssBuilder.AddClass(MudBlazor.Extensions.Helper.MudExCss.Classes,System.Boolean)">
            <summary>
            Adds one or more css classes to this builder if given condition is true
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExCssBuilder.AddClass(MudBlazor.Extensions.Helper.MudExCss.Classes,MudBlazor.Extensions.Helper.MudExCss.Classes[])">
            <summary>
            Adds one or more css classes to this builder
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExCssBuilder.AddClass(System.String,System.String[])">
            <summary>
            Adds one or more css classes to this builder 
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExCssBuilder.AddClass(System.String,System.Boolean)">
            <summary>
            Adds one or more css classes to this builder if given condition is true
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExCssBuilder.AddClass(System.String,System.Func{System.Boolean})">
            <summary>
            Adds one or more css classes to this builder if given condition is true
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExCssBuilder.AddClass(System.Func{System.String},System.Boolean)">
            <summary>
            Adds one or more css classes to this builder if given condition is true
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExCssBuilder.AddClass(System.Func{System.String},System.Func{System.Boolean})">
            <summary>
            Adds one or more css classes to this builder if given condition is true
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExCssBuilder.AddClass(MudBlazor.Utilities.CssBuilder,System.Boolean)">
            <summary>
            Adds all classes from existing CssBuilder to this builder if given condition is true
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExCssBuilder.AddClass(MudBlazor.Utilities.CssBuilder,System.Func{System.Boolean})">
            <summary>
            Adds all classes from existing CssBuilder to this builder if given condition is true
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExCssBuilder.AddClass(MudBlazor.Extensions.Helper.MudExCssBuilder,System.Func{System.Boolean})">
            <summary>
            Adds all classes from existing CssBuilder to this builder if given condition is true
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExCssBuilder.AddClass(MudBlazor.Extensions.Helper.MudExCssBuilder,System.Boolean)">
            <summary>
            Adds all classes from existing CssBuilder to this builder if given condition is true
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExCssBuilder.AddClassFromStyleAsync(MudBlazor.Extensions.Helper.MudExStyleBuilder,System.Boolean)">
            <summary>
            Adds a temporary class with all styles from given styleBuilder to this cssBuilder
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExCssBuilder.AddClassFromStyleAsync(MudBlazor.Extensions.Helper.MudExStyleBuilder,System.Func{System.Boolean})">
            <summary>
            Adds a temporary class with all styles from given styleBuilder to this cssBuilder if given condition func returns true
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExCssBuilder.AddClassFromStyleAsync(System.Object,System.Boolean)">
            <summary>
            Adds a temporary class with all styles from given object to this cssBuilder if given condition is true
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExCssBuilder.AddClassFromStyleAsync(System.String,System.Boolean)">
            <summary>
            Adds a temporary class with all styles from given string to this cssBuilder if given condition is true
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExCssBuilder.AddClassFromStyleAsync(System.Object,System.Func{System.Boolean})">
            <summary>
            Adds a temporary class with all styles from given object to this cssBuilder if given condition func returns true
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExCssBuilder.AddClassFromStyleAsync(System.String,System.Func{System.Boolean})">
            <summary>
            Adds a temporary class with all styles from given object to this cssBuilder if given condition func returns true
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExCssBuilder.AddClassFromAttributes(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
            Adds classes from Attributes containing classes
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExCssBuilder.Build">
            <summary>
            Builds and returns an applicable css string
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExCssBuilder.DisposeAsync">
            <summary>
            Disposes this instance
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Helper.MudExCssBuilder.Class">
            <summary>
            Builds and returns an applicable css string
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Helper.MudExFonts">
            <summary>
            Static util MudExFonts
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Helper.MudExFonts.WebSafeFonts">
            <summary>
            All known WebSafe Fonts
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Helper.MudExFonts.GoogleLatinFonts">
            <summary>
            List of Google fonts that support Latin Extended characters. But all need to be imported from google font api.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExFonts.ImportUriText(System.String,System.String)">
            <summary>
            Creates the css import statement for a font
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Helper.MudExResource">
            <summary>
            Static util class to access the internal code documentation
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExResource.MudBlazorVersion">
            <summary>
            Returns the version of used MudBlazor package
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExResource.MudExVersion">
            <summary>
            Returns the version of MudBlazor extensions
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExResource.GetSummaryDocumentationAsync(System.Type)">
            <summary>
            returns the Summary documentation text for a type
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExResource.GetSummaryDocumentationAsync(System.Reflection.MemberInfo)">
            <summary>
            returns a summary documentation text for given member
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Helper.MudExStyleBuilder">
            <summary>
            MudExStyleBuilder is useful to create style strings or convert any style to a class.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Helper.MudExStyleBuilder.Default">
            <summary>
            Static Property to access an instance <see cref="T:MudBlazor.Extensions.Helper.MudExStyleBuilder"/>
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.Empty">
            <summary>
            Static factory method to create a <see cref="T:MudBlazor.Extensions.Helper.MudExStyleBuilder"/>
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.FromObject(System.Object,System.String,MudBlazor.Extensions.Core.CssUnit)">
            <summary>
            Static factory method to create a <see cref="T:MudBlazor.Extensions.Helper.MudExStyleBuilder"/> from an object.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.FromObject(System.Object,MudBlazor.Extensions.Core.CssUnit)">
            <summary>
            Static factory method to create a <see cref="T:MudBlazor.Extensions.Helper.MudExStyleBuilder"/> from an object.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.FromStyle(System.String)">
            <summary>
            Static factory method to create a <see cref="T:MudBlazor.Extensions.Helper.MudExStyleBuilder"/> from an existing style string.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.GenerateStyleString(System.Object,System.String)">
            <summary>
            Converts an object to a style string but only properties that are not passed in existingCss
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.GenerateStyleString(System.Object,MudBlazor.Extensions.Core.CssUnit,System.String)">
            <summary>
            Converts an object to a style string but only properties that are not passed in existingCss.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.CombineStyleStrings(System.String,System.String)">
            <summary>
            Combines two css style strings.
            </summary>
            <param name="cssString">css style string to be combined.</param>
            <param name="leadingCssString">css style string to be attached.</param>
            <returns>the combined css style strings.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.StyleStringToObject``1(System.String)">
            <summary>
            Converts a CSS style string to an object
            </summary>
            <typeparam name="T">Type of object to create</typeparam>
            <param name="css">CSS style string</param>
            <returns>The created object</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithStyle(System.String,System.Boolean)">
            <summary>
            Adds all styles and values from given style string
            </summary>
            <param name="styleString">CSS style string to parse and add to the builder</param>
            <param name="when">If false, no properties will be added to the builder</param>
            <returns>This MudExStyleBuilder instance</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.With(System.Object,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Converts given object to a CSS style string and adds all properties and values to this builder
            </summary>
            <param name="styleObj">Object to convert to a CSS style string</param>
            <param name="cssUnit">Unit to format CSS quantity-including properties. Default is CssUnit.Pixels.</param>
            <param name="when">If false, no properties will be added to the builder</param>
            <returns>This MudExStyleBuilder instance</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithColor(System.String,System.Boolean)">
            <summary>
            Adds a color property to the builder
            </summary>
            <param name="color">Value of the color property</param>
            <param name="when">If false, no property will be added to the builder</param>
            <returns>This MudExStyleBuilder instance</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithColor(MudBlazor.Extensions.Core.MudExColor,System.Boolean)">
            <summary>
            Adds a color property to the builder.
            </summary>
            <param name="color">Value of the MudExColor property</param>
            <param name="when">If false, no property will be added to the builder</param>
            <returns>This MudExStyleBuilder instance</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithColor(MudBlazor.Utilities.MudColor,System.Boolean)">
            <summary>
            Adds a color property to the builder.
            </summary>
            <param name="color">Value of the MudColor property</param>
            <param name="when">If false, no property will be added to the builder</param>
            <returns>This MudExStyleBuilder instance</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithColor(System.Drawing.Color,System.Boolean)">
            <summary>
            Adds a color property to the builder.
            </summary>
            <param name="color">Value of the System.Drawing.Color property</param>
            <param name="when">If false, no property will be added to the builder</param>
            <returns>This MudExStyleBuilder instance</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithColor(MudBlazor.Color,System.Boolean)">
            <summary>
            Adds a color property with a value of `var(--{color})` to the builder.
            </summary>
            <param name="color">Color variable name, without "--" prefix</param>
            <param name="when">If false, no property will be added to the builder.</param>
            <returns>This MudExStyleBuilder instance</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithFill(System.String,System.Boolean)">
            <summary>
            Adds a fill property to the builder
            </summary>
            <param name="color">Value of the fill property</param>
            <param name="when">If false, no property will be added to the builder</param>
            <returns>This MudExStyleBuilder instance</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithFill(MudBlazor.Extensions.Core.MudExColor,System.Boolean)">
            <summary>
            Adds a fill property to the builder
            </summary>
            <param name="color">Value of the MudExColor property</param>
            <param name="when">If false, no property will be added to the builder</param>
            <returns>This MudExStyleBuilder instance</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithFill(MudBlazor.Utilities.MudColor,System.Boolean)">
            <summary>
            Adds a fill property to the builder
            </summary>
            <param name="color">Value of the MudColor property</param>
            <param name="when">If false, no property will be add to the builder</param>
            <returns>This MudExStyleBuilder instance</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithFill(System.Drawing.Color,System.Boolean)">
            <summary>
            Adds a fill property to the builder
            </summary>
            <param name="color">Value of the System.Drawing.Color property</param>
            <param name="when">If false, no property will be added to the builder</param>
            <returns>This MudExStyleBuilder instance</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithFill(MudBlazor.Color,System.Boolean)">
            <summary>
            Adds a fill property with a value of `var(--{color})` to the builder.
            </summary>
            <param name="color">Color variable name, without "--" prefix</param>
            <param name="when">If false, no property will be added to the builder.</param>
            <returns>This MudExStyleBuilder instance</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBackground(System.String[],System.Int32,System.Boolean)">
            <summary>
            Adds a background property to the builder. The background is a gradient of all entries in the color array.
            </summary>
            <param name="color">Array of the colors of the gradient stops. Multiple colors can be used for a smoother transition.</param>
            <param name="radius">degree of the gradient. Default is 0.</param>
            <param name="when">If false, no property will be added to the builder.</param>
            <returns>This MudExStyleBuilder instance.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBackground(MudBlazor.Palette,System.Boolean)">
            <summary>
            Adds a background property to the builder. The background is a gradient of a preset palette's colors.
            </summary>
            <param name="palette">Name of the palette whose colors should be used.</param>
            <param name="when">If false, no property will be added to the builder.</param>
            <returns>This MudExStyleBuilder instance.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBackground(MudBlazor.PaletteDark,System.Boolean)">
            <summary>
            Adds a background property to the builder. The background is a gradient of a dark preset palette's colors.
            </summary>
            <param name="palette">Name of the palette whose colors should beta used.</param>
            <param name="when">If false, no property will be added to the builder.</param>
            <returns>This MudExStyleBuilder instance.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBackground(MudBlazor.PaletteLight,System.Boolean)">
            <summary>
            Adds a background property to the builder. The background is a gradient of a light preset palette's colors.
            </summary>
            <param name="palette">Name of the palette whose colors should beta used.</param>
            <param name="when">If false, no property will be added to the builder.</param>
            <returns>This MudExStyleBuilder instance.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBackground(MudBlazor.MudTheme,System.Boolean,System.Boolean)">
            <summary>
            Adds a background property to the builder. The background is a gradient of a theme's palette or dark palette.
            </summary>
            <param name="theme">Theme to use.</param>
            <param name="dark">If true, the dark palette will be used.</param>
            <param name="when">If false, no property will be added to the builder.</param>
            <returns>This MudExStyleBuilder instance.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBackground(MudBlazor.MudTheme,System.Boolean)">
            <summary>
            Adds a background property to the builder. The background is a gradient of a concatenated list of two palettes, default and dark.
            </summary>
            <param name="theme">The theme to use.</param>
            <param name="when">If false, no property will be added to the builder.</param>
            <returns>This MudExStyleBuilder instance.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBackground(System.String[],System.Boolean)">
            <summary>
            Adds a background property to the builder. The background is a gradient of all entries in the color array.
            </summary>
            <param name="color">Array of the CSS values of the colors of the gradient stops. Multiple colors can be used for a smoother transition.</param>
            <param name="when">If false, no property will be added to the builder.</param>
            <returns>This MudExStyleBuilder instance.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBackground(MudBlazor.Extensions.Core.MudExColor[],System.Boolean)">
            <summary>
            Adds a background property to the builder. The background is a gradient of all entries in the MudExColor array.
            </summary>
            <param name="color">Array of MudExColor objects representing the colors of the gradient stops. Multiple colors can be used for a smoother transition.</param>
            <param name="when">If false, no property will be added to the builder.</param>
            <returns>This MudExStyleBuilder instance.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBackground(MudBlazor.Utilities.MudColor[],System.Boolean)">
            <summary>
            Adds a background property to the builder. The background is a gradient of all entries in the MudColor array.
            </summary>
            <param name="color">Array of MudColor objects representing the color of the gradient stops. Multiple colors can be used for a smoother transition.</param>
            <param name="when">If false, no property will be added to the builder.</param>
            <returns>This MudExStyleBuilder instance.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBackground(System.Drawing.Color[],System.Boolean)">
            <summary>
            Adds a background property to the builder. The background is a gradient of all entries in the System.Drawing.Color array.
            </summary>
            <param name="color">Array of System.Drawing.Color objects representing the color of the gradient stops. Multiple colors can be used for a smoother transition.</param>
            <param name="when">If false, no property will be added to the builder.</param>
            <returns>This MudExStyleBuilder instance.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBackground(MudBlazor.Color[],System.Boolean)">
            <summary>
            Adds a background property to the builder. The background is a gradient of all entries in the Color array.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBackground(MudBlazor.Extensions.Core.MudExColor[],System.Int32,System.Boolean)">
            <summary>
            Adds a background property to the builder. The background is a gradient of all entries in the Color array.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBackground(MudBlazor.Utilities.MudColor[],System.Int32,System.Boolean)">
            <summary>
            Adds a background property to the builder. The background is a gradient of all entries in the Color array.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBackground(System.Drawing.Color[],System.Int32,System.Boolean)">
            <summary>
            Adds a background property to the builder. The background is a gradient of all entries in the Color array.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBackground(MudBlazor.Color[],System.Int32,System.Boolean)">
            <summary>
            Adds a background property to the builder. The background is a gradient of all entries in the Color array.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBackground(MudBlazor.Extensions.Core.MudExColor,System.Boolean)">
            <summary>
            Adds a background property to the builder.
            </summary>
            <summary>
            Specifies a background color using a MudExColor object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBackground(System.String,System.Boolean)">
            <summary>
            Specifies a background color using a CSS color string, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBackground(MudBlazor.Utilities.MudColor,System.Boolean)">
            <summary>
            Specifies a background color using a MudColor object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBackground(System.Drawing.Color,System.Boolean)">
            <summary>
            Specifies a background color using a System.Drawing.Color object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBackground(MudBlazor.Color,System.Boolean)">
            <summary>
            Specifies a background color using a Color object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBackgroundColor(MudBlazor.Extensions.Core.MudExColor,System.Boolean)">
            <summary>
            Specifies a background color using a MudExColor object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBackgroundColor(System.String,System.Boolean)">
            <summary>
            Specifies a background color using a CSS color string, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBackgroundColor(MudBlazor.Utilities.MudColor,System.Boolean)">
            <summary>
            Specifies a background color using a MudColor object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBackgroundColor(System.Drawing.Color,System.Boolean)">
            <summary>
            Specifies a background color using a System.Drawing.Color object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBackgroundColor(MudBlazor.Color,System.Boolean)">
            <summary>
            Specifies a background color using a Color object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBackgroundImage(System.String,System.Boolean)">
            <summary>
            Specifies a background image using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBackgroundSize(System.String,System.Boolean)">
            <summary>
            Specifies the background size using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithDisplay(System.String,System.Boolean)">
            <summary>
            Specifies the display property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithDisplay(MudBlazor.Extensions.Core.Css.Display,System.Boolean)">
            <summary>
            Specifies the display property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithFlex(System.String,System.Boolean)">
            <summary>
            Specifies the flex property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithJustifyContent(System.String,System.Boolean)">
            <summary>
            Specifies the justify-content property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithAlignItems(System.String,System.Boolean)">
            <summary>
            Specifies the align-items property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithAlignItems(MudBlazor.AlignItems,System.Boolean)">
            <summary>
            Specifies the align-items property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithPosition(System.String,System.Boolean)">
            <summary>
            Specifies the position property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithPosition(MudBlazor.Position,System.Boolean)">
            <summary>
            Specifies the position property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithTop(System.String,System.Boolean)">
            <summary>
            Specifies the top property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBottom(System.String,System.Boolean)">
            <summary>
            Specifies the bottom property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithLeft(System.String,System.Boolean)">
            <summary>
            Specifies the left property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithRight(System.String,System.Boolean)">
            <summary>
            Specifies the right property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithZIndex(System.Int32,System.Boolean)">
            <summary>
            Specifies the z-index property using an integer value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithFontSize(System.String,System.Boolean)">
            <summary>
            Specifies the font-size property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithFontWeight(MudBlazor.Extensions.Core.Css.FontWeight,System.Boolean)">
            <summary>
            Specifies the font-weight property using a FontWeight enumeration value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithFontWeight(System.String,System.Boolean)">
            <summary>
            Specifies the font-weight property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithTextAlign(System.String,System.Boolean)">
            <summary>
            Specifies the text-align property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithTextDecoration(MudBlazor.Extensions.Core.Css.TextDecoration,System.Boolean)">
            <summary>
            Specifies the text-decoration property using a TextDecoration enumeration value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithTextDecoration(System.String,System.Boolean)">
            <summary>
            Specifies the text-decoration property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithLetterSpacing(System.String,System.Boolean)">
            <summary>
            Specifies the letter-spacing property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithLineHeight(System.String,System.Boolean)">
            <summary>
            Specifies the line-height property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithTextTransform(System.String,System.Boolean)">
            <summary>
            Specifies the text-transform property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithTextTransform(MudBlazor.Extensions.Core.Css.TextTransform,System.Boolean)">
            <summary>
            Specifies the text-transform property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithWhiteSpace(System.String,System.Boolean)">
            <summary>
            Specifies the white-space property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithWhiteSpace(MudBlazor.Extensions.Core.Css.WhiteSpace,System.Boolean)">
            <summary>
            Specifies the white-space property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithWidth(System.String,System.Boolean)">
            <summary>
            Specifies the width property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithWidth(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the width property using a numeric value and CSS unit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithWidth(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the width property using a MudExSize value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithHeight(System.String,System.Boolean)">
            <summary>
            Specifies the height property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithHeight(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the height property using a numeric value and CSS unit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithHeight(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the height property using a MudExSize value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithOpacity(System.Double,System.Boolean)">
            <summary>
            Specifies the opacity property using a double value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithOpacity(System.String,System.Boolean)">
            <summary>
            Specifies the opacity property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithMargin(System.String,System.Boolean)">
            <summary>
            Specifies the margin property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithMargin(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the margin property using a numeric value and CSS unit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithMargin(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the margin property using a MudExSize value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithPadding(System.String,System.Boolean)">
            <summary>
            Specifies the padding property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithPadding(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the padding property using a numeric value and CSS unit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithPadding(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the padding property using a MudExSize value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithOverflow(System.String,System.Boolean)">
            <summary>
            Specifies the overflow property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithOverflow(MudBlazor.Extensions.Core.Css.Overflow,System.Boolean)">
            <summary>
            Specifies the overflow property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithCursor(System.String,System.Boolean)">
            <summary>
            Specifies the cursor property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithCursor(MudBlazor.Extensions.Core.Css.Cursor,System.Boolean)">
            <summary>
            Specifies the cursor property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithListStyleType(System.String,System.Boolean)">
            <summary>
            Specifies the list-style-type property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithTransition(System.String,System.Boolean)">
            <summary>
            Specifies the transition property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithTransform(System.String,System.Boolean)">
            <summary>
            Specifies the transform property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithFlexDirection(System.String,System.Boolean)">
            <summary>
            Specifies the flex-direction property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithFlexWrap(System.String,System.Boolean)">
            <summary>
            Specifies the flex-wrap property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBoxShadow(System.String,System.Boolean)">
            <summary>
            Specifies the box-shadow property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithTextShadow(System.String,System.Boolean)">
            <summary>
            Specifies the text-shadow property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithWordBreak(System.String,System.Boolean)">
            <summary>
            Specifies the word-break property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithWordSpacing(System.String,System.Boolean)">
            <summary>
            Specifies the word-spacing property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBackfaceVisibility(System.String,System.Boolean)">
            <summary>
            Specifies the backface-visibility property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithOutline(System.String,System.Boolean)">
            <summary>
            Specifies the outline property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithMaxWidth(System.String,System.Boolean)">
            <summary>
            Specifies the max-width property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithMinWidth(System.String,System.Boolean)">
            <summary>
            Specifies the min-width property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithMaxHeight(System.String,System.Boolean)">
            <summary>
            Specifies the max-height property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithMinHeight(System.String,System.Boolean)">
            <summary>
            Specifies the min-height property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithResize(System.String,System.Boolean)">
            <summary>
            Specifies the resize property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithVisibility(System.String,System.Boolean)">
            <summary>
            Specifies the visibility property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithVisibility(MudBlazor.Extensions.Core.Css.Visibility,System.Boolean)">
            <summary>
            Specifies the visibility property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithFlexBasis(System.String,System.Boolean)">
            <summary>
            Specifies the flex-basis property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithFlexGrow(System.String,System.Boolean)">
            <summary>
            Specifies the flex-grow property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithFlexShrink(System.String,System.Boolean)">
            <summary>
            Specifies the flex-shrink property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithOrder(System.String,System.Boolean)">
            <summary>
            Specifies the order property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithGridGap(System.String,System.Boolean)">
            <summary>
            Specifies the grid-gap property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithGridColumn(System.String,System.Boolean)">
            <summary>
            Specifies the grid-column property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithGridRow(System.String,System.Boolean)">
            <summary>
            Specifies the grid-row property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithGridTemplateColumns(System.String,System.Boolean)">
            <summary>
            Specifies the grid-template-columns property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithGridTemplateRows(System.String,System.Boolean)">
            <summary>
            Specifies the grid-template-rows property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithObjectFit(System.String,System.Boolean)">
            <summary>
            Specifies the object-fit property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithObjectPosition(System.String,System.Boolean)">
            <summary>
            Specifies the object-position property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithTextOverflow(System.String,System.Boolean)">
            <summary>
            Specifies the text-overflow property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithVerticalAlign(System.String,System.Boolean)">
            <summary>
            Specifies the vertical-align property using a CSS string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithMinSize(System.String,System.String,System.Boolean)">
            <summary>
            Specifies both the min-width and min-height properties, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithMinSize(System.Double,System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies both the min-width and min-height properties using a numerical value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithMinSize(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies both the min-width and min-height properties using the same numerical value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithMinSize(MudBlazor.Extensions.Core.MudExSize{System.Double},MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies both the min-width and min-height properties using MudExSize objects, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithMinSize(MudBlazor.Extensions.Core.MudExDimension,System.Boolean)">
            <summary>
            Specifies both the min-width and min-height properties using a MudExDimension object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithMaxSize(System.String,System.String,System.Boolean)">
            <summary>
            Specifies both the max-width and max-height properties using string values, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithMaxSize(System.Double,System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies both the max-width and max-height properties using double values and a CssUnit for the values, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithMaxSize(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies both the max-width and max-height properties using the same double value and a CssUnit for the values, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithMaxSize(MudBlazor.Extensions.Core.MudExSize{System.Double},MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies both the max-width and max-height properties using MudExSize objects, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithMaxSize(MudBlazor.Extensions.Core.MudExDimension,System.Boolean)">
            <summary>
            Specifies both the max-width and max-height properties using a MudExDimension object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithSize(System.String,System.String,System.Boolean)">
            <summary>
            Specifies both the width and height properties using string values, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithSize(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies both the width and height properties using the same double value and a CssUnit for the values, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithSize(System.Double,System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies both the width and height properties using different double values and a CssUnit for the values, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithSize(MudBlazor.Extensions.Core.MudExSize{System.Double},MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies both the width and height properties using MudExSize objects, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithSize(MudBlazor.Extensions.Core.MudExDimension,System.Boolean)">
            <summary>
            Specifies both the width and height properties using a MudExDimension object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithDimension(MudBlazor.Extensions.Core.MudExDimension,System.Boolean)">
            <summary>
            Specifies both the width and height properties using a MudExDimension object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithMinHeight(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the min-height property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithMinHeight(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the min-height property using a MudExSize object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithMinWidth(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the min-width property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithMinWidth(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the min-width property using a MudExSize object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithMaxHeight(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the max-height property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithMaxHeight(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the max-height property using a MudExSize object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithMaxWidth(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the max-width property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithMaxWidth(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the max-width property using a MudExSize object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithPaddingTop(System.String,System.Boolean)">
            <summary>
            Specifies the padding-top property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithPaddingTop(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the padding-top property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithPaddingTop(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the padding-top property using a MudExSize object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithPaddingRight(System.String,System.Boolean)">
            <summary>
            Specifies the padding-right property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithPaddingRight(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the padding-right property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithPaddingRight(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the padding-right property using a MudExSize object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithPaddingBottom(System.String,System.Boolean)">
            <summary>
            Specifies the padding-bottom property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithPaddingBottom(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the padding-bottom property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithPaddingBottom(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the padding-bottom property using a MudExSize object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithPaddingLeft(System.String,System.Boolean)">
            <summary>
            Specifies the padding-left property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithPaddingLeft(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the padding-left property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithPaddingLeft(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the padding-left property using a MudExSize object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithMarginTop(System.String,System.Boolean)">
            <summary>
            Specifies the margin-top property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithMarginTop(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the margin-top property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithMarginTop(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the margin-top property using a MudExSize object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithMarginRight(System.String,System.Boolean)">
            <summary>
            Specifies the margin-right property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithMarginRight(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the margin-right property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithMarginRight(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the margin-right property using a MudExSize object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithMarginBottom(System.String,System.Boolean)">
            <summary>
            Specifies the margin-bottom property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithMarginBottom(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the margin-bottom property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithMarginBottom(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the margin-bottom property using a MudExSize object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithMarginLeft(System.String,System.Boolean)">
            <summary>
            Specifies the margin-left property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithMarginLeft(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the margin-left property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithMarginLeft(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the margin-left property using a MudExSize object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithFontSize(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the font-size property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithFontSize(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the font-size property using a MudExSize object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithLetterSpacing(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the letter-spacing property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithLetterSpacing(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the letter-spacing property using a MudExSize object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithLineHeight(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the line-height property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithLineHeight(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the line-height property using a MudExSize object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithWordSpacing(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the word-spacing property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithWordSpacing(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the word-spacing property using a MudExSize object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithTextIndent(System.String,System.Boolean)">
            <summary>
            Specifies the text-indent property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithTextIndent(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the text-indent property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithTextIndent(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the text-indent property using a MudExSize object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithColumnGap(System.String,System.Boolean)">
            <summary>
            Specifies the column-gap property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithColumnGap(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the column-gap property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithColumnGap(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the column-gap property using a MudExSize object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithColumnWidth(System.String,System.Boolean)">
            <summary>
            Specifies the column-width property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithColumnWidth(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the column-width property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithColumnWidth(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the column-width property using a MudExSize object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithTop(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the top property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithTop(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the top property using a MudExSize object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithRight(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the right property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithRight(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the right property using a MudExSize object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBottom(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the bottom property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBottom(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the bottom property using a MudExSize object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithLeft(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the left property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithLeft(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the left property using a MudExSize object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithTranslate(System.String,System.Boolean)">
            <summary>
            Specifies the translate property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithTranslate(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the translate property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithTranslate(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the translate property using a MudExSize object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithTranslateX(System.String,System.Boolean)">
            <summary>
            Specifies the translateX property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithTranslateX(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the translateX property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithTranslateX(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the translateX property using a MudExSize object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithTranslateY(System.String,System.Boolean)">
            <summary>
            Specifies the translateY property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithTranslateY(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the translateY property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithTranslateY(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the translateY property using a MudExSize object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithTranslateZ(System.String,System.Boolean)">
            <summary>
            Specifies the translateZ property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithTranslateZ(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the translateZ property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithTranslateZ(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the translateZ property using a MudExSize object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithTranslate3d(System.String,System.Boolean)">
            <summary>
            Specifies the translate3d property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithRotate(System.String,System.Boolean)">
            <summary>
            Specifies the rotate property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithRotate(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the rotate property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithRotate(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the rotate property using a MudExSize object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithRotateX(System.String,System.Boolean)">
            <summary>
            Specifies the rotateX property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithRotateX(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the rotateX property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithRotateX(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the rotateX property using a MudExSize object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithRotateY(System.String,System.Boolean)">
            <summary>
            Specifies the rotateY property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithRotateY(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the rotateY property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithRotateY(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the rotateY property using a MudExSize object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithRotateZ(System.String,System.Boolean)">
            <summary>
            Specifies the rotateZ property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithRotateZ(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the rotateZ property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithRotateZ(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the rotateZ property using a MudExSize object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithScale(System.String,System.Boolean)">
            <summary>
            Specifies the scale property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithScale(System.Double,System.Boolean)">
            <summary>
            Specifies the scale property using a double value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithScaleX(System.String,System.Boolean)">
            <summary>
            Specifies the scaleX property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithScaleX(System.Double,System.Boolean)">
            <summary>
            Specifies the scaleX property using a double value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithScaleY(System.String,System.Boolean)">
            <summary>
            Specifies the scaleY property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithScaleY(System.Double,System.Boolean)">
            <summary>
            Specifies the scaleY property using a double value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithScaleZ(System.String,System.Boolean)">
            <summary>
            Specifies the scaleZ property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithScaleZ(System.Double,System.Boolean)">
            <summary>
            Specifies the scaleZ property using a double value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithScale3d(System.String,System.Boolean)">
            <summary>
            Specifies the scale3d property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithScale3d(System.Double,System.Boolean)">
            <summary>
            Specifies the scale3d property using a double value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithSkew(System.String,System.Boolean)">
            <summary>
            Specifies the skew property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithSkew(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the skew property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithSkew(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the skew property using a MudExSize object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithSkewX(System.String,System.Boolean)">
            <summary>
            Specifies the skewX property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithSkewX(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the skewX property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithSkewX(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the skewX property using a MudExSize object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithSkewY(System.String,System.Boolean)">
            <summary>
            Specifies the skewY property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithSkewY(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the skewY property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithSkewY(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the skewY property using a MudExSize object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithPerspective(System.String,System.Boolean)">
            <summary>
            Specifies the perspective property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithPerspective(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the perspective property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithPerspective(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the perspective property using a MudExSize object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithFontFamily(System.String,System.Boolean)">
            <summary>
            Specifies the font-family property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithFontStyle(MudBlazor.Extensions.Core.Css.FontStyle,System.Boolean)">
            <summary>
            Specifies the font-style property using a FontStyle enum value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithFontStyle(System.String,System.Boolean)">
            <summary>
            Specifies the font-style property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithTextJustify(System.String,System.Boolean)">
            <summary>
            Specifies the text-justify property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBackgroundPosition(System.String,System.Boolean)">
            <summary>
            Specifies the background-position property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBackgroundRepeat(System.String,System.Boolean)">
            <summary>
            Specifies the background-repeat property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBorder(MudBlazor.Extensions.Core.MudExSize{System.Double},MudBlazor.Extensions.Core.Css.BorderStyle,MudBlazor.Extensions.Core.MudExColor,System.Boolean)">
            <summary>
            Specifies the border-width, border-style and border-color properties using a MudExSize object, BorderStyle enum value and MudExColor object, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBorder(MudBlazor.Extensions.Core.MudExSize{System.Double},MudBlazor.Extensions.Core.Css.BorderStyle,MudBlazor.Extensions.Core.MudExColor)">
            <summary>
            Specifies the border-width, border-style and border-color properties using a MudExSize object, BorderStyle enum value and MudExColor object.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBorder(System.String,System.Boolean)">
            <summary>
            Specifies the border property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBorderRadius(System.String,System.Boolean)">
            <summary>
            Specifies the border-radius property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBorderRadius(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the border-radius property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBorderWidth(System.String,System.Boolean)">
            <summary>
            Specifies the border-width property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBorderWidth(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the border-width property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBorderWidth(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the border-width property using a MudExSize value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBorderTopWidth(System.String,System.Boolean)">
            <summary>
            Specifies the border-top-width property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBorderTopWidth(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the border-top-width property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBorderTopWidth(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the border-top-width property using a MudExSize value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBorderRightWidth(System.String,System.Boolean)">
            <summary>
            Specifies the border-right-width property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBorderRightWidth(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the border-right-width property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBorderRightWidth(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the border-right-width property using a MudExSize value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBorderBottomWidth(System.String,System.Boolean)">
            <summary>
            Specifies the border-bottom-width property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBorderBottomWidth(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the border-bottom-width property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBorderBottomWidth(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the border-bottom-width property using a MudExSize value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBorderLeftWidth(System.String,System.Boolean)">
            <summary>
            Specifies the border-left-width property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBorderLeftWidth(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the border-left-width property using a double value and a CssUnit, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBorderLeftWidth(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the border-left-width property using a MudExSize value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBorderColor(System.String,System.Boolean)">
            <summary>
            Specifies the border-color property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBorderColor(MudBlazor.Extensions.Core.MudExColor,System.Boolean)">
            <summary>
            Specifies the border-color property using a MudExColor value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBorderColor(MudBlazor.Utilities.MudColor,System.Boolean)">
            <summary>
            Specifies the border-color property using a MudColor value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBorderColor(System.Drawing.Color,System.Boolean)">
            <summary>
            Specifies the border-color property using a System.Drawing.Color value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBorderColor(MudBlazor.Color,System.Boolean)">
            <summary>
            Specifies the border-color property using a Color value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBorderStyle(MudBlazor.Extensions.Core.Css.BorderStyle,System.Boolean)">
            <summary>
            Specifies the border-style property using a BorderStyle enum value, if the 'when' condition is true. Converts the enum to a string.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithBorderStyle(System.String,System.Boolean)">
            <summary>
            Specifies the border-style property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithOutline(MudBlazor.Extensions.Core.MudExSize{System.Double},MudBlazor.Extensions.Core.Css.BorderStyle,MudBlazor.Extensions.Core.MudExColor,System.Boolean)">
            <summary>
            Specifies the outline property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithOutline(MudBlazor.Extensions.Core.MudExSize{System.Double},MudBlazor.Extensions.Core.Css.BorderStyle,MudBlazor.Extensions.Core.MudExColor)">
            <summary>
            Specifies the outline property using a string value, if the 'when' condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithOutlineRadius(System.String,System.Boolean)">
            <summary>
            Specifies the outline radius of an element.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithOutlineWidth(System.String,System.Boolean)">
            <summary>
            Specifies the outline width of an element.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithOutlineTopWidth(System.String,System.Boolean)">
            <summary>
            Specifies the width of the top outline of an element.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithOutlineRightWidth(System.String,System.Boolean)">
            <summary>
            Specifies the width of the right outline of an element.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithOutlineBottomWidth(System.String,System.Boolean)">
            <summary>
            Specifies the width of the bottom outline of an element.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithOutlineLeftWidth(System.String,System.Boolean)">
            <summary>
            Specifies the width of the left outline of an element.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithOutlineColor(System.String,System.Boolean)">
            <summary>
            Specifies the color of the outline of an element.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithOutlineStyle(System.String,System.Boolean)">
            <summary>
            Specifies the style of the outline of an element.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithFloat(System.String,System.Boolean)">
            <summary>
            Specifies how an element should float.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithFloat(MudBlazor.Extensions.Core.Css.Float,System.Boolean)">
            <summary>
            Specifies how an element should float.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithClear(System.String,System.Boolean)">
            <summary>
            Specifies which sides of an element other floating elements are not allowed.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithClear(MudBlazor.Extensions.Core.Css.Clear,System.Boolean)">
            <summary>
            Specifies which sides of an element other floating elements are not allowed.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithOverflowX(System.String,System.Boolean)">
            <summary>
            Specifies whether to clip content, render scrollbars or just display overflow content of an element, for x-axis.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithOverflowX(MudBlazor.Extensions.Core.Css.Overflow,System.Boolean)">
            <summary>
            Specifies whether to clip content, render scrollbars or just display overflow content of an element, for x-axis.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithOverflowY(System.String,System.Boolean)">
            <summary>
            Specifies whether to clip content, render scrollbars or just display overflow content of an element, for y-axis.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithOverflowY(MudBlazor.Extensions.Core.Css.Overflow,System.Boolean)">
            <summary>
            Specifies whether to clip content, render scrollbars or just display overflow content of an element, for y-axis.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithDirection(System.String,System.Boolean)">
            <summary>
            Specifies the text direction/writing direction within a block-level element.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithDirection(MudBlazor.Direction,System.Boolean)">
            <summary>
            Specifies the text direction/writing direction within a block-level element.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithColumns(System.String,System.Boolean)">
            <summary>
            Specifies the column width and column count of an element.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithColumnCount(System.Int32,System.Boolean)">
            <summary>
            Specifies the number of columns an element should be divided into.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithColumnFill(System.String,System.Boolean)">
            <summary>
            Specifies how to fill columns.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithColumnRule(System.String,System.Boolean)">
            <summary>
            Specifies the width, style, and color of the rule between columns.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithColumnSpan(System.String,System.Boolean)">
            <summary>
            Specifies how many columns an element should span across.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithGap(System.String,System.Boolean)">
            <summary>
            Specifies the size of the gap between columns.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithOutlineRadius(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the 'outline-radius' CSS property with a double value and CSS unit.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithOutlineWidth(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the 'outline-width' CSS property with a double value and CSS unit.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithOutlineWidth(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the 'outline-width' CSS property with a size.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithOutlineStyle(MudBlazor.Extensions.Core.Css.BorderStyle,System.Boolean)">
            <summary>
            Specifies the 'outline-style' CSS property using a BorderStyle enum.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithOutlineTopWidth(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the 'outline-top-width' CSS property with a double value and CSS unit.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithOutlineTopWidth(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the 'outline-top-width' CSS property with a size.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithOutlineColor(MudBlazor.Extensions.Core.MudExColor,System.Boolean)">
            <summary>
            Specifies the 'outline-color' CSS property with MudExColor.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithOutlineColor(MudBlazor.Utilities.MudColor,System.Boolean)">
            <summary>
            Specifies the 'outline-color' CSS property with MudColor.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithOutlineColor(System.Drawing.Color,System.Boolean)">
            <summary>
            Specifies the 'outline-color' CSS property with System.Drawing.Color.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithOutlineColor(MudBlazor.Color,System.Boolean)">
            <summary>
            Specifies the 'outline-color' CSS property with Color.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithOutlineRightWidth(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the 'outline-right-width' CSS property with a double value and CSS unit.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithOutlineRightWidth(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the 'outline-right-width' CSS property with a size.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithOutlineBottomWidth(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the 'outline-bottom-width' CSS property with a double value and CSS unit.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithOutlineBottomWidth(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the 'outline-bottom-width' CSS property with a size.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithOutlineLeftWidth(System.Double,MudBlazor.Extensions.Core.CssUnit,System.Boolean)">
            <summary>
            Specifies the 'outline-left-width' CSS property with a double value and CSS unit.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.WithOutlineLeftWidth(MudBlazor.Extensions.Core.MudExSize{System.Double},System.Boolean)">
            <summary>
            Specifies the 'outline-left-width' CSS property with a size.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.AsImportant(System.Boolean)">
            <summary>
            Adds an !important to last added style
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.With(System.String,System.String,System.Func{System.Boolean})">
            <summary>
            Adds a style to the builder if the condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.With(System.String,System.String,System.Boolean)">
            <summary>
            Adds a style to the builder if the condition is true.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.AddRaw(System.String,System.Boolean)">
            <summary>
            Adds a ra style string is condition is true
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.AsCssBuilderAsync">
            <summary>
            Creates a class for this style and returns a MudExCssBuilder with this class added
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.BuildAsClassRuleAsync(System.String,Microsoft.JSInterop.IJSRuntime)">
            <summary>
            Creates a class for this style and returns the name of the created class
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.RemoveClassRuleAsync(System.String,Microsoft.JSInterop.IJSRuntime)">
            <summary>
            Removes a class that is temporary created
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.DisposeAsync">
            <summary>
            Disposes this instance
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.Build">
            <summary>
            Builds the css style string
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.ToObject``1">
            <summary>
            Converts this style to an object
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.ToString">
            <summary>
            Returns the css style string
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.op_Explicit(MudBlazor.Extensions.Helper.MudExStyleBuilder)~System.String">
            <summary>
            Explicit conversion to string
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExStyleBuilder.op_Explicit(System.String)~MudBlazor.Extensions.Helper.MudExStyleBuilder">
            <summary>
            Explicit conversion from string
            </summary>
            <param name="styles"></param>
        </member>
        <member name="P:MudBlazor.Extensions.Helper.MudExStyleBuilder.Style">
            <summary>
            The css style string
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Helper.MudExSvg">
            <summary>
            Static Utility class for SVG
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExSvg.CombineIconsHorizontal(System.String,System.String[])">
            <summary>
            Combines SVG icons horizontally
            </summary>
            <param name="image">The first SVG image</param>
            <param name="other">An array of other SVG images to combine with the first one</param>
            <returns>A new SVG with the combined images aligned horizontally</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExSvg.CombineIconsVertical(System.String,System.String[])">
            <summary>
            Combines SVG icons vertically
            </summary>
            <param name="image">The first SVG image</param>
            <param name="other">An array of other SVG images to combine with the first one</param>
            <returns>A new SVG with the combined images aligned horizontally</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExSvg.CombineIconsCentered(System.String,System.String[])">
            <summary>
            Combines SVG icons centered overlapped
            </summary>
            <param name="image">The first SVG image</param>
            <param name="other">An array of other SVG images to combine with the first one</param>
            <returns>A new SVG with the combined images aligned horizontally</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExSvg.CombineIcons(System.Int32,System.Int32,System.String,System.String,System.String[])">
            <summary>
            Combines SVG icons.
            </summary>
            <param name="marginLeftRight">The margin applied to the left and right of the combined images.</param>
            <param name="marginTopBottom">The margin applied to the top and bottom of the combined images.</param>
            <param name="originalViewBox">The original viewBox of the SVG.</param>
            <param name="image">The first SVG image.</param>
            <param name="other">An array of other SVG images to combine with the first one.</param>
            <returns>A new SVG with the combined images.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExSvg.SvgPropertyNameForValue(System.String,System.Type,System.Type[])">
            <summary>
            Returns the fully-qualified name of the constant in <see cref="T:MudBlazor.Icons"/> or whatever owner type that has the specified value.
            </summary>
            <param name="value">The value of the SVG constant for which to get a name.</param>
            <param name="ownerType">Type for search in</param>
            <param name="ownerTypes">Other types for search in</param>
            <returns>A string containing the fully-qualified name of the icon constant that matches the specified value.</returns>    
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExSvg.SvgPropertyNameForValue(System.String,System.Type[])">
            <summary>
            Returns the fully-qualified name of the constant in <see cref="T:MudBlazor.Icons"/> or whatever owner type that has the specified value.
            </summary>
            <param name="value">The value of the SVG constant for which to get a name.</param>
            <param name="allOwnerTypes">Owner types for search in</param>
            <returns>A string containing the fully-qualified name of the icon constant that matches the specified value.</returns>    
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExSvg.SvgPropertyNameForValue(System.String)">
            <summary>
            Returns the fully-qualified name of the constant in <see cref="T:MudBlazor.Icons"/> that has the specified value.
            </summary>
            <param name="value">The value of the SVG constant for which to get a name.</param>
            <returns>A string containing the fully-qualified name of the icon constant that matches the specified value.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExSvg.SvgPropertyValueForName(System.String)">
            <summary>
            Returns the value of the constant in <see cref="T:MudBlazor.Icons"/> that has the specified name.
            </summary>
            <param name="fullName">Name like MudBlazor.Icons.Outlined.Search</param>
            <returns>The value</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExSvg.SvgPropertyValueForName(System.String,System.Type[])">
            <summary>
            Returns the value of the constant in <see cref="T:MudBlazor.Icons"/> that has the specified name.
            </summary>
            <param name="fullName">Name like MudBlazor.Icons.Outlined.Search</param>
            <param name="allOwnerTypes">Owner types where to search in</param>
            <returns>The value</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExSvg.SvgPropertyValueForName(System.String,System.Type,System.Type[])">
            <summary>
            Returns the value of the constant in <see cref="T:MudBlazor.Icons"/> that has the specified name.
            </summary>
            <param name="fullName">Name like MudBlazor.Icons.Outlined.Search</param>
            <param name="ownerType">Owner type to search in</param>
            <param name="ownerTypes">Other types where to search in</param>
            <returns>The value</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExSvg.GetAllSvgProperties">
            <summary>
            Returns all properties of <see cref="T:MudBlazor.Icons"/> or whatever owner type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExSvg.GetAllSvgProperties(System.Type,System.Type[])">
            <summary>
            Returns all properties of <see cref="T:MudBlazor.Icons"/> or whatever owner type.
            </summary>
            <param name="ownerType"></param>
            <param name="ownerTypes"></param>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExSvg.GetAllSvgProperties(System.Type[])">
            <summary>
            Returns all properties of <see cref="T:MudBlazor.Icons"/> or whatever owner type.
            </summary>
            <param name="ownerTypes"></param>
            <returns></returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExSvg.CombineSliced(System.String,System.String,System.Double,System.Double,MudBlazor.Extensions.Helper.SliceDirection)">
            <summary>
            Combines two SVGs sliced either horizontally, vertically, or diagonally.
            </summary>
            <param name="svg1">The first SVG to slice and combine.</param>
            <param name="svg2">The second SVG to slice and combine.</param>
            <param name="width">The width of the output SVG.</param>
            <param name="height">The height of the output SVG.</param>
            <param name="sliceDirection">The direction to slice the SVGs.</param>
            <returns>A new SVG that contains both original SVGs sliced either horizontally, vertically, or diagonally.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExSvg.ApplicationImage(MudBlazor.MudTheme,MudBlazor.Extensions.Core.MudExDimension,MudBlazor.Extensions.Helper.SliceDirection)">
            <summary>
            Returns a sliced application image as preview for given Theme, with the specified dimensions and slice direction.
            </summary>
            <param name="theme">The color scheme to use for the image.</param>
            <param name="size">The dimensions of the output image.</param>
            <param name="sliceDirection">The direction to slice the image.</param>
            <returns>A new SVG that displays an application image sliced either horizontally, vertically, or diagonally.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExSvg.ApplicationImage(MudBlazor.MudTheme,MudBlazor.Extensions.Core.MudExDimension)">
            <summary>
            Returns a default sliced application image as preview for given Theme.
            </summary>
            <param name="theme">The color scheme to use for the image.</param>
            <param name="size">The dimensions of the output image.</param>
            <returns>A new SVG that displays an application image sliced diagonally.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExSvg.ApplicationImage(MudBlazor.MudTheme,System.Boolean,MudBlazor.Extensions.Core.MudExDimension)">
            <summary>
            Returns a default application image as preview for given Theme in dark or light.
            </summary>
            <param name="theme">The color scheme to use for the image.</param>
            <param name="dark">Whether to use the dark color scheme for the image.</param>
            <param name="size">The dimensions of the output image.</param>
            <returns>A new SVG that displays an application image sliced either horizontally, vertically, or diagonally.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExSvg.ApplicationImage(MudBlazor.MudTheme,System.Boolean,System.String,System.String)">
            <summary>
             Returns a default application image as preview for given Theme in dark or light.
            </summary>
            <param name="theme">The color scheme to use for the image.</param>
            <param name="dark">Whether to use the dark color scheme for the image.</param>
            <param name="width">The width of the output image.</param>
            <param name="height">The height of the output image.</param>
            <returns>A new SVG that displays an application image sliced diagonally.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExSvg.ApplicationImage(MudBlazor.Palette,MudBlazor.Extensions.Core.MudExDimension)">
            <summary>
             Returns a default application image as with given color palette.
            </summary>    
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExSvg.ApplicationImage(MudBlazor.Palette,System.String,System.String)">
            <summary>
             Returns a default application image as with given color palette.
            </summary>    
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExSvg.ApplicationImage(MudBlazor.PaletteLight,MudBlazor.Extensions.Core.MudExDimension)">
            <summary>
             Returns a default application image as with given color palette.
            </summary>    
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExSvg.ApplicationImage(MudBlazor.PaletteDark,MudBlazor.Extensions.Core.MudExDimension)">
            <summary>
             Returns a default application image as with given color palette.
            </summary>    
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExSvg.ApplicationImage(MudBlazor.Utilities.MudColor,MudBlazor.Utilities.MudColor,MudBlazor.Utilities.MudColor,MudBlazor.Utilities.MudColor,System.String)">
            <summary>
             Returns a default application image with given colors.
            </summary>    
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExSvg.ApplicationImage(MudBlazor.Utilities.MudColor,MudBlazor.Utilities.MudColor,MudBlazor.Utilities.MudColor,MudBlazor.Utilities.MudColor[],System.String)">
            <summary>
             Returns a default application image with given colors.
            </summary>    
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExSvg.ApplicationImage(MudBlazor.Utilities.MudColor,MudBlazor.Utilities.MudColor,MudBlazor.Utilities.MudColor,MudBlazor.Utilities.MudColor,MudBlazor.Extensions.Core.MudExDimension)">
            <summary>
             Returns a default application image with given colors.
            </summary>        
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExSvg.ApplicationImage(MudBlazor.Utilities.MudColor,MudBlazor.Utilities.MudColor,MudBlazor.Utilities.MudColor,MudBlazor.Utilities.MudColor[],MudBlazor.Extensions.Core.MudExDimension)">
            <summary>
             Returns a default application image with given colors.
            </summary>        
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExSvg.ApplicationImage(MudBlazor.Utilities.MudColor,MudBlazor.Utilities.MudColor,MudBlazor.Utilities.MudColor,MudBlazor.Utilities.MudColor[],System.String,System.String)">
            <summary>
             Returns a default application image with given colors.
            </summary>    
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExSvg.ApplicationImage(System.String,System.String,System.String,System.String,System.String)">
            <summary>
             Returns a default application image with given colors.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExSvg.ApplicationImage(System.String,System.String,System.String,System.String[],System.String)">
            <summary>
             Returns a default application image with given colors.
            </summary>        
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExSvg.ApplicationImage(System.String,System.String,System.String,System.String,MudBlazor.Extensions.Core.MudExDimension)">
            <summary>
             Returns a default application image with given colors.
            </summary>    
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExSvg.ApplicationImage(System.String,System.String,System.String,System.String[],MudBlazor.Extensions.Core.MudExDimension)">
            <summary>
             Returns a default application image with given colors.
            </summary>    
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExSvg.ApplicationImage(System.String,System.String,System.String,System.String[],System.String,System.String)">
            <summary>
             Returns a default application image with given colors.
            </summary>    
        </member>
        <member name="T:MudBlazor.Extensions.Helper.SliceDirection">
            <summary>
            Enum to specify svg slice direction
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Helper.MudExThemeHelper">
            <summary>
            Static util MudExThemeHelper
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExThemeHelper.ToPaletteDark(MudBlazor.PaletteLight)">
            <summary>
            Convert PaletteLight to PaletteDark
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExThemeHelper.ToPaletteDark(MudBlazor.Palette)">
            <summary>
            Convert PaletteLight to PaletteDark
            </summary>    
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExThemeHelper.ToPaletteLight(MudBlazor.PaletteDark)">
            <summary>
            Convert PaletteDark to PaletteLight
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExThemeHelper.CloneTheme``1(``0)">
            <summary>
            Clones the theme
            </summary>
            <typeparam name="TTheme"></typeparam>
            <param name="theme"></param>
            <returns>Cloned theme with same options</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExThemeHelper.FromJson``1(System.String)">
            <summary>
            Creates a new theme from json
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Helper.MudExThemeHelper.AsJson``1(``0)">
            <summary>
            Converts Theme to json
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Middleware.MudBlazorExtensionsMiddleware">
            <summary>
            Middleware for MudBlazor extensions that allows to inject IJSRuntime.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Middleware.MudBlazorExtensionsMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:MudBlazor.Extensions.Middleware.MudBlazorExtensionsMiddleware"/> class.
            </summary>
            <param name="next">The next middleware in the pipeline.</param>
        </member>
        <member name="M:MudBlazor.Extensions.Middleware.MudBlazorExtensionsMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext,Microsoft.JSInterop.IJSRuntime)">
            <summary>
            Method invoked by the pipeline. Injects IJSRuntime into JsImportHelper and then passes control to the next middleware in the pipeline.
            </summary>
            <param name="context">The HttpContext for the current request.</param>
            <param name="jsRuntime">The IJSRuntime instance for the current request.</param>
        </member>
        <member name="T:MudBlazor.Extensions.MudBlazorExtensionsMiddlewareExtensions">
            <summary>
            MudBlazorExtensionsMiddlewareExtensions
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.MudBlazorExtensionsMiddlewareExtensions.UseMudExtensions(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Adds the MudBlazorExtensionsMiddleware
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="T:MudBlazor.Extensions.MudDialogButton">
            <summary>
            Represents a custom dialog button within a MudBlazor dialog.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.MudDialogButton.#ctor(Microsoft.JSInterop.DotNetObjectReference{System.Object},System.String)">
            <summary>
            Constructs a new instance of MudDialogButton.
            </summary>
            <param name="callBackReference">A .NET object reference to use as a callback.</param>
            <param name="callbackName">The name of the callback method.</param>
        </member>
        <member name="P:MudBlazor.Extensions.MudDialogButton.CallBackReference">
            <summary>
            Gets the .NET object reference used as a callback.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.MudDialogButton.CallbackName">
            <summary>
            Gets the name of the callback method.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.MudDialogButton.Id">
            <summary>
            Gets or sets the ID of the button.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.MudDialogButton.Icon">
            <summary>
            Gets or sets the SVG icon for the button.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.MudDialogButton.Class">
            <summary>
            Gets or sets the CSS class(es) of the button.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.MudDialogButton.Html">
            <summary>
            Gets or sets the HTML content of the button.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.MudDialogButton.GetHtml(System.Int32)">
            <summary>
            Generates the HTML for the button, taking into account its position.
            </summary>
            <param name="pos">The position of the button.</param>
            <returns>A string containing the generated HTML.</returns>
        </member>
        <member name="T:MudBlazor.Extensions.MudExDialogResultAction">
            <summary>
            Represents an action within a MudBlazor dialog that returns a specific dialog result.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.MudExDialogResultAction.Result">
            <summary>
            Gets or sets the DialogResult for this action.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.MudExDialogResultAction.Label">
            <summary>
            Gets or sets the text displayed on the action button.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.MudExDialogResultAction.Variant">
            <summary>
            Gets or sets the visual style variant for the action button.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.MudExDialogResultAction.Color">
            <summary>
            Gets or sets the color for the action button.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.MudExDialogResultAction.Ok(System.String)">
            <summary>
            Creates an array with a single "Ok" action.
            </summary>
            <param name="confirmText">The text for the "Ok" button. Defaults to "Ok".</param>
            <returns>An array with a single "Ok" action.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.MudExDialogResultAction.Cancel(System.String)">
            <summary>
            Creates an array with a single "Cancel" action.
            </summary>
            <param name="confirmText">The text for the "Cancel" button. Defaults to "Ok".</param>
            <returns>An array with a single "Cancel" action.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.MudExDialogResultAction.OkCancel(System.String,System.String)">
            <summary>
            Creates an array with both "Ok" and "Cancel" actions.
            </summary>
            <param name="confirmText">The text for the "Ok" button. Defaults to "Ok".</param>
            <param name="cancelText">The text for the "Cancel" button. Defaults to "Cancel".</param>
            <returns>An array with both "Ok" and "Cancel" actions.</returns>
        </member>
        <member name="T:MudBlazor.Extensions.Options.AnimationTimingFunction">
            <summary>
            Represents the animation timing function.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Options.AnimationTimingFunction.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MudBlazor.Extensions.Options.AnimationTimingFunction"/> class.
            </summary>
            <param name="timingFn">The timing function string.</param>
        </member>
        <member name="F:MudBlazor.Extensions.Options.AnimationTimingFunction.EaseInOut">
            <summary>
            Gets the 'ease-in-out' timing function.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Options.AnimationTimingFunction.Ease">
            <summary>
            Gets the 'ease' timing function.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Options.AnimationTimingFunction.EaseIn">
            <summary>
            Gets the 'ease-in' timing function.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Options.AnimationTimingFunction.EaseOut">
            <summary>
            Gets the 'ease-out' timing function.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Options.AnimationTimingFunction.Inherit">
            <summary>
            Gets the 'inherit' timing function.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Options.AnimationTimingFunction.Initial">
            <summary>
            Gets the 'initial' timing function.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Options.AnimationTimingFunction.Linear">
            <summary>
            Gets the 'linear' timing function.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Options.AnimationTimingFunction.StepEnd">
            <summary>
            Gets the 'step-end' timing function.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Options.AnimationTimingFunction.StepStart">
            <summary>
            Gets the 'step-start' timing function.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Options.AnimationTimingFunction.CubicBezier(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a 'cubic-bezier' timing function.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Options.AnimationTimingFunction.Steps(System.Int32,System.String)">
            <summary>
            Creates a 'steps' timing function.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Options.AnimationTimingFunction.op_Implicit(MudBlazor.Extensions.Options.AnimationTimingFunction)~System.String">
            <summary>
            Converts the value of the current AnimationTimingFunction object to its equivalent string representation.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Options.AnimationTimingFunction.op_Implicit(System.String)~MudBlazor.Extensions.Options.AnimationTimingFunction">
            <summary>
            Converts the specified string to its equivalent AnimationTimingFunction representation.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Options.AnimationTimingFunction.ToString">
            <summary>
            Returns a string that represents the current timing function.
            </summary>
            <returns>A string that represents the current timing function.</returns>
        </member>
        <member name="T:MudBlazor.Extensions.Options.AnimationType">
            <summary>
            Animation Type enum specifies all supported animations
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Options.AnimationType.Default">
            <summary>
            Default animation
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Options.AnimationType.SlideIn">
            <summary>
            Slide in animation
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Options.AnimationType.FadeIn">
            <summary>
            Fade in animation
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Options.AnimationType.Scale">
            <summary>
            Scale animation
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Options.AnimationType.Slide">
            <summary>
            Slide animation
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Options.AnimationType.Fade">
            <summary>
            Fade animation
            </summary>        
        </member>
        <member name="F:MudBlazor.Extensions.Options.AnimationType.Perspective3d">
            <summary>
            3D Perspective animation
            </summary>        
        </member>
        <member name="F:MudBlazor.Extensions.Options.AnimationType.LightSpeed">
            <summary>
            Light speed animation
            </summary>        
        </member>
        <member name="F:MudBlazor.Extensions.Options.AnimationType.Zoom">
            <summary>
            Zoom animation
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Options.AnimationType.JackInTheBox">
            <summary>
            Roll animation
            </summary>        
            <summary>
            Jack in the box animation
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Options.AnimationType.Hinge">
            <summary>
            Hinge animation
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Options.AnimationType.Rotate">
            <summary>
            Rotate animation
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Options.AnimationType.Bounce">
            <summary>
            Bounce animation
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Options.AnimationType.Back">
            <summary>
            Back animation
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Options.AnimationType.Jello">
            <summary>
            Jello animation
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Options.AnimationType.Wobble">
            <summary>
            Wobble animation
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Options.AnimationType.Tada">
            <summary>
            Tada animation
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Options.AnimationType.Swing">
            <summary>
            Swing animation
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Options.AnimationType.HeadShake">
            <summary>
            Head shake animation
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Options.AnimationType.Shake">
            <summary>
            Shake animation
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Options.AnimationType.RubberBand">
            <summary>
            Rubber band animation
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Options.AnimationType.Pulse">
            <summary>
            Pulse animation
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Options.AnimationType.Flip">
            <summary>
            Flip animation
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Options.AnimationType.FlipX">
            <summary>
            Flip in X axis animation
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Options.AnimationType.FlipY">
            <summary>
            Flip in Y axis animation
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Options.AnimationDirection">
            <summary>
            Direction of animation
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Options.AnimationDirection.In">
            <summary>
            Animation direction inwards
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Options.AnimationDirection.Out">
            <summary>
            Animation direction outwards
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Options.DialogOptionsEx">
            <summary>
            Extended Dialog Options class, inheriting from DialogOptions and ICloneable.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Options.DialogOptionsEx.OverriddenDefaultOptions">
            <summary>
            A boolean value indicating whether the default options are overriden.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Options.DialogOptionsEx.DefaultDialogOptions">
            <summary>
            The default dialog options object.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Options.DialogOptionsEx.SetAsDefaultDialogOptions">
            <summary>
            Sets the current instance of DialogOptionsEx as the default option for dialogs.
            </summary>
            <returns>A reference to the current instance.</returns>
        </member>
        <member name="P:MudBlazor.Extensions.Options.DialogOptionsEx.DialogAppearance">
            <summary>
            The look and feel of the dialog component dialog.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Options.DialogOptionsEx.DialogBackgroundAppearance">
            <summary>
            The look and feel of the dialog background.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Options.DialogOptionsEx.JsRuntime">
            <summary>
            The JavaScript Runtime used to interact with the browser's JavaScript host environment. 
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Options.DialogOptionsEx.Modal">
            <summary>
            A boolean value indicating whether the dialog is modal or not.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Options.DialogOptionsEx.MaximizeButton">
            <summary>
            A nullable boolean value indicating whether the maximize button is available or not.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Options.DialogOptionsEx.MinimizeButton">
            <summary>
            A nullable boolean value indicating whether the minimize button is available or not.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Options.DialogOptionsEx.ShowAtCursor">
            <summary>
            A boolean value indicating whether the dialog is shown at the cursor location or not.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Options.DialogOptionsEx.CursorPositionOrigin">
            <summary>
            The point on the dialog box where the cursor is placed on showing the dialog box.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Options.DialogOptionsEx.Resizeable">
            <summary>
            A boolean value indicating whether the dialog is resizable or not.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Options.DialogOptionsEx.Buttons">
            <summary>
            An array of MudDialogButton.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Options.DialogOptionsEx.DragMode">
            <summary>
            A MudDialogDragMode value indicating the drag mode of the dialog box.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Options.DialogOptionsEx.FullHeight">
            <summary>
            A nullable boolean value indicating whether the dialog full height mode is enabled or not.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Options.DialogOptionsEx.DisablePositionMargin">
            <summary>
            A nullable boolean value indicating whether the dialog position margin is disabled or not.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Options.DialogOptionsEx.DisableSizeMarginX">
            <summary>
            A nullable boolean value indicating whether the dialog size margin x-axis is disabled or not.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Options.DialogOptionsEx.DisableSizeMarginY">
            <summary>
            A nullable boolean value indicating whether the dialog size margin y-axis is disabled or not.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Options.DialogOptionsEx.Animation">
            <summary>
            An animation type value indicating the animation effect of the dialog box.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Options.DialogOptionsEx.Animations">
            <summary>
            An array of animation type values indicating the set of animation effects of the dialog box.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Options.DialogOptionsEx.AnimationTimingFunction">
            <summary>
            An animation timing function value indicating the easing function used for the dialog box animation transitions.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Options.DialogOptionsEx.AnimationDuration">
            <summary>
            A time span value indicating the duration of the dialog animation effect.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Options.DialogOptionsEx.AnimationDurationInMs">
            <summary>
            A double value indicating the dialog animation duration in milliseconds.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Options.DialogOptionsEx.CursorPositionOriginName">
            <summary>
            The description string of the cursor position.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Options.DialogOptionsEx.AnimationStyle">
            <summary>
            A css style string indicating the animation effects of the dialog box.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Options.DialogOptionsEx.CloneOptions">
            <summary>
            Method that returns a clone object of the current instance.
            </summary>
            <returns>A cloned instance of the current object.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Options.DialogOptionsEx.Clone">
            <summary>       
            Method that returns a cloned instance of the current object. 
            </summary>
            <returns>A cloned object instance of the current object.</returns>
        </member>
        <member name="T:MudBlazor.Extensions.Options.ItemSelectionMode">
            <summary>
            Item selection mode for multi or single select
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Options.ItemSelectionMode.None">
            <summary>
            No selection is allowed.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Options.ItemSelectionMode.Single">
            <summary>
            Only a single item can be selected at a time.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Options.ItemSelectionMode.MultiSelect">
            <summary>
            Multiple items can be selected without requiring any modifier key.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.Options.ItemSelectionMode.MultiSelectWithCtrlKey">
            <summary>
            Multiple items can be selected, but requires the Ctrl key to be pressed during selection.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Options.MudExConfiguration">
            <summary>
            Represents the configuration options for MudBlazor Extended.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Options.MudExConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MudBlazor.Extensions.Options.MudExConfiguration"/> class.
            </summary>
        </member>
        <member name="P:MudBlazor.Extensions.Options.MudExConfiguration.DisableAutomaticCssLoading">
            <summary>
            Set this to true to disable all automatic css loadings
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Options.MudExConfiguration.WithoutAutomaticCssLoading">
            <summary>
            Disables automatic Css loading. Then you need to ensure you have added the mud-ex styles in your index.html or _Host.cshtml
            </summary>    
        </member>
        <member name="M:MudBlazor.Extensions.Options.MudExConfiguration.WithAutomaticCssLoading">
            <summary>
            Enables automatic Css loading.
            </summary>    
        </member>
        <member name="M:MudBlazor.Extensions.Options.MudExConfiguration.With(System.Action{MudBlazor.Extensions.Options.MudExConfiguration}[])">
            <summary>
            Set specific options
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Options.MudExConfiguration.WithDefaultDialogOptions(System.Action{MudBlazor.Extensions.Options.DialogOptionsEx})">
            <summary>
            Configures the default dialog options using the provided action.
            </summary>
            <param name="options">The action to configure the default dialog options.</param>
            <returns>The current configuration instance.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Options.MudExConfiguration.WithDefaultDialogOptions(MudBlazor.Extensions.Options.DialogOptionsEx)">
            <summary>
            Sets the provided dialog options as the default dialog options.
            </summary>
            <param name="options">The options to set as the default dialog options.</param>
            <returns>The current configuration instance.</returns>
        </member>
        <member name="T:MudBlazor.Extensions.MudDialogDragMode">
            <summary>
            Defines the dragging modes for a Mud Dialog.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.MudDialogDragMode.None">
            <summary>
            No dragging is allowed.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.MudDialogDragMode.Simple">
            <summary>
            Simple dragging mode, allowing basic move operations.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.MudDialogDragMode.WithoutBounds">
            <summary>
            Dragging mode allowing movement without restricting to certain bounds.
            </summary>
        </member>
        <member name="F:MudBlazor.Extensions.MudDialogDragMode.SnapDrag">
            <summary>
            Snap dragging mode (not currently implemented).
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.ServiceCollectionExtensions">
            <summary>
            Contains extension methods for IServiceCollection to configure MudBlazor services with extensions.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.ServiceCollectionExtensions.AddMudExtensions(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Reflection.Assembly[])">
            <summary>
            Adds MudBlazor extensions to the service collection.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.ServiceCollectionExtensions.AddMudExtensions(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{MudBlazor.Extensions.Options.MudExConfiguration},System.Reflection.Assembly[])">
            <summary>
            Adds MudBlazor extensions to the service collection with custom configuration.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.ServiceCollectionExtensions.AddMudServicesWithExtensions(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Reflection.Assembly[])">
            <summary>
            Adds MudBlazor services and extensions to the service collection.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.ServiceCollectionExtensions.AddMudServicesWithExtensions(Microsoft.Extensions.DependencyInjection.IServiceCollection,MudBlazor.Services.MudServicesConfiguration,System.Reflection.Assembly[])">
            <summary>
            Adds MudBlazor services with custom configuration and extensions to the service collection.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.ServiceCollectionExtensions.AddMudServicesWithExtensions(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{MudBlazor.Services.MudServicesConfiguration},System.Reflection.Assembly[])">
            <summary>
            Adds MudBlazor services with custom configuration and extensions to the service collection.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.ServiceCollectionExtensions.AddMudServicesWithExtensions(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{MudBlazor.Extensions.Options.MudExConfiguration},System.Reflection.Assembly[])">
            <summary>
            Adds MudBlazor services and extensions with custom configuration to the service collection.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.ServiceCollectionExtensions.AddMudServicesWithExtensions(Microsoft.Extensions.DependencyInjection.IServiceCollection,MudBlazor.Services.MudServicesConfiguration,System.Action{MudBlazor.Extensions.Options.MudExConfiguration},System.Reflection.Assembly[])">
            <summary>
            Adds MudBlazor services with custom configuration and extensions with custom configuration to the service collection.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.ServiceCollectionExtensions.AddMudServicesWithExtensions(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{MudBlazor.Services.MudServicesConfiguration},System.Action{MudBlazor.Extensions.Options.MudExConfiguration},System.Reflection.Assembly[])">
            <summary>
            Adds MudBlazor services with custom configuration and extensions with custom configuration to the service collection.
            </summary>
        </member>
        <member name="T:MudBlazor.Extensions.Services.MudExAppearanceService">
            <summary>
            Service class to manage and apply appearances to components.
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Services.MudExAppearanceService.ApplyAsClassOnlyToAsync``2(``0,``1,System.Action{``1,System.String})">
            <summary>
            Applies the specified appearance to a component, updating only its class attribute.
            </summary>
            <param name="appearance">The appearance to apply.</param>
            <param name="component">The component to which the appearance will be applied.</param>
            <param name="updateFunc">Function to update the class of the component.</param>
            <returns>The applied appearance.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Services.MudExAppearanceService.ApplyToAsync``1(``0,MudBlazor.MudComponentBase,System.Boolean)">
            <summary>
            Applies the specified appearance to a MudBlazor component.
            </summary>
            <param name="appearance">The appearance to apply.</param>
            <param name="component">The component to which the appearance will be applied.</param>
            <param name="keepExisting">Flag indicating whether to keep existing class and style attributes.</param>
            <returns>The applied appearance.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Services.MudExAppearanceService.ApplyToAsync``1(``0,System.String,System.Boolean)">
            <summary>
            Applies the specified appearance to an HTML element using its selector.
            </summary>
            <param name="appearance">The appearance to apply.</param>
            <param name="elementSelector">The selector of the element to which the appearance will be applied.</param>
            <param name="keepExisting">Flag indicating whether to keep existing class and style attributes.</param>
            <returns>The applied appearance.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Services.MudExAppearanceService.ApplyToAsync``1(``0,Microsoft.AspNetCore.Components.ElementReference,System.Boolean)">
            <summary>
            Applies the specified appearance to an HTML element using its reference.
            </summary>
            <param name="appearance">The appearance to apply.</param>
            <param name="elementRef">Reference to element</param>
            <param name="keepExisting">Flag indicating whether to keep existing class and style attributes.</param>
            <returns>The applied appearance.</returns>    
        </member>
        <member name="M:MudBlazor.Extensions.Services.MudExAppearanceService.ApplyToAsync``1(``0,MudBlazor.IDialogReference,System.Boolean)">
            <summary>
             Applies the specified appearance to a dialog
            </summary>
        </member>
        <member name="M:MudBlazor.Extensions.Services.MudExAppearanceService.RemoveFromAsync``1(``0,MudBlazor.MudComponentBase)">
            <summary>
            Removes the specified appearance from a MudBlazor component.
            </summary>
            <param name="appearance">The appearance to remove.</param>
            <param name="component">The component from which the appearance will be removed.</param>
            <returns>The removed appearance.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Services.MudExAppearanceService.RemoveFromAsync``1(``0,System.String)">
            <summary>
            Removes the specified appearance from an HTML element using its selector.
            </summary>
            <param name="appearance">The appearance to remove.</param>
            <param name="elementSelector">The selector of the element from which the appearance will be removed.</param>
            <returns>The removed appearance.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Services.MudExAppearanceService.RemoveFromAsync``1(``0,Microsoft.AspNetCore.Components.ElementReference)">
            <summary>
            Removes the specified appearance from an HTML element using its ElementReference.
            </summary>
            <param name="appearance">The appearance to remove.</param>
            <param name="elementRef">The ElementReference of the HTML element from which the appearance will be removed.</param>
            <returns>The removed appearance.</returns>
        </member>
        <member name="M:MudBlazor.Extensions.Services.MudExAppearanceService.RemoveFromAsync``1(``0,MudBlazor.IDialogReference)">
            <summary>
            Removes the specified appearance from a dialog.
            </summary>
            <param name="appearance">The appearance to remove.</param>
            <param name="dialogReference">The reference to the dialog from which the appearance will be removed.</param>
            <returns>The removed appearance.</returns>
        </member>
    </members>
</doc>
