/**
 * Minified by jsDelivr using Terser v5.39.0.
 * Original file: /npm/dockview-core@4.7.1/dist/esm/dnd/abstractDragHandler.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{disableIframePointEvents}from"../dom";import{addDisposableListener,Emitter}from"../events";import{CompositeDisposable,MutableDisposable}from"../lifecycle";export class DragHandler extends CompositeDisposable{constructor(e,s){super(),this.el=e,this.disabled=s,this.dataDisposable=new MutableDisposable,this.pointerEventsDisposable=new MutableDisposable,this._onDragStart=new Emitter,this.onDragStart=this._onDragStart.event,this.addDisposables(this._onDragStart,this.dataDisposable,this.pointerEventsDisposable),this.configure()}setDisabled(e){this.disabled=e}isCancelled(e){return!1}configure(){this.addDisposables(this._onDragStart,addDisposableListener(this.el,"dragstart",(e=>{if(e.defaultPrevented||this.isCancelled(e)||this.disabled)return void e.preventDefault();const s=disableIframePointEvents();if(this.pointerEventsDisposable.value={dispose:()=>{s.release()}},this.el.classList.add("dv-dragged"),setTimeout((()=>this.el.classList.remove("dv-dragged")),0),this.dataDisposable.value=this.getData(e),this._onDragStart.fire(e),e.dataTransfer){e.dataTransfer.effectAllowed="move";e.dataTransfer.items.length>0||e.dataTransfer.setData("text/plain","")}})),addDisposableListener(this.el,"dragend",(()=>{this.pointerEventsDisposable.dispose(),setTimeout((()=>{this.dataDisposable.dispose()}),0)})))}}
//# sourceMappingURL=/sm/843e8373f14edc82ce25f44174afd83a51836f4b1eedbe77c2a9b817373428d7.map