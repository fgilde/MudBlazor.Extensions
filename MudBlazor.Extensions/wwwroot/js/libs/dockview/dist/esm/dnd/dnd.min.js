/**
 * Minified by jsDelivr using Terser v5.39.0.
 * Original file: /npm/dockview-core@4.7.1/dist/esm/dnd/dnd.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{addDisposableListener}from"../events";import{CompositeDisposable}from"../lifecycle";export class DragAndDropObserver extends CompositeDisposable{constructor(e,s){super(),this.element=e,this.callbacks=s,this.target=null,this.registerListeners()}onDragEnter(e){this.target=e.target,this.callbacks.onDragEnter(e)}onDragOver(e){e.preventDefault(),this.callbacks.onDragOver&&this.callbacks.onDragOver(e)}onDragLeave(e){this.target===e.target&&(this.target=null,this.callbacks.onDragLeave(e))}onDragEnd(e){this.target=null,this.callbacks.onDragEnd(e)}onDrop(e){this.callbacks.onDrop(e)}registerListeners(){this.addDisposables(addDisposableListener(this.element,"dragenter",(e=>{this.onDragEnter(e)}),!0)),this.addDisposables(addDisposableListener(this.element,"dragover",(e=>{this.onDragOver(e)}),!0)),this.addDisposables(addDisposableListener(this.element,"dragleave",(e=>{this.onDragLeave(e)}))),this.addDisposables(addDisposableListener(this.element,"dragend",(e=>{this.onDragEnd(e)}))),this.addDisposables(addDisposableListener(this.element,"drop",(e=>{this.onDrop(e)})))}}
//# sourceMappingURL=/sm/950240e6bc4acf70ad92af6806c09945d1a6787e2e24d17c28c58304f3e12778.map