/**
 * Minified by jsDelivr using Terser v5.39.0.
 * Original file: /npm/dockview-core@4.7.1/dist/esm/dockview/components/tab/tab.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{addDisposableListener,Emitter}from"../../../events";import{CompositeDisposable}from"../../../lifecycle";import{getPanelData,LocalSelectionTransfer,PanelTransfer}from"../../../dnd/dataTransfer";import{toggleClass}from"../../../dom";import{Droptarget}from"../../../dnd/droptarget";import{DragHandler}from"../../../dnd/abstractDragHandler";import{addGhostImage}from"../../../dnd/ghost";class TabDragHandler extends DragHandler{constructor(e,t,r,s,a){super(e,a),this.accessor=t,this.group=r,this.panel=s,this.panelTransfer=LocalSelectionTransfer.getInstance()}getData(e){return this.panelTransfer.setData([new PanelTransfer(this.accessor.id,this.group.id,this.panel.id)],PanelTransfer.prototype),{dispose:()=>{this.panelTransfer.clearData(PanelTransfer.prototype)}}}}export class Tab extends CompositeDisposable{get element(){return this._element}constructor(e,t,r){super(),this.panel=e,this.accessor=t,this.group=r,this.content=void 0,this._onPointDown=new Emitter,this.onPointerDown=this._onPointDown.event,this._onDropped=new Emitter,this.onDrop=this._onDropped.event,this._onDragStart=new Emitter,this.onDragStart=this._onDragStart.event,this._element=document.createElement("div"),this._element.className="dv-tab",this._element.tabIndex=0,this._element.draggable=!this.accessor.options.disableDnd,toggleClass(this.element,"dv-inactive-tab",!0),this.dragHandler=new TabDragHandler(this._element,this.accessor,this.group,this.panel,!!this.accessor.options.disableDnd),this.dropTarget=new Droptarget(this._element,{acceptedTargetZones:["left","right"],overlayModel:{activationSize:{value:50,type:"percentage"}},canDisplayOverlay:(e,t)=>{if(this.group.locked)return!1;const r=getPanelData();return!(!r||this.accessor.id!==r.viewId)||this.group.model.canDisplayOverlay(e,t,"tab")},getOverrideTarget:()=>{var e;return null===(e=r.model.dropTargetContainer)||void 0===e?void 0:e.model}}),this.onWillShowOverlay=this.dropTarget.onWillShowOverlay,this.addDisposables(this._onPointDown,this._onDropped,this._onDragStart,this.dragHandler.onDragStart((e=>{if(e.dataTransfer){const t=getComputedStyle(this.element),r=this.element.cloneNode(!0);Array.from(t).forEach((e=>r.style.setProperty(e,t.getPropertyValue(e),t.getPropertyPriority(e)))),r.style.position="absolute",addGhostImage(e.dataTransfer,r,{y:-10,x:30})}this._onDragStart.fire(e)})),this.dragHandler,addDisposableListener(this._element,"pointerdown",(e=>{this._onPointDown.fire(e)})),this.dropTarget.onDrop((e=>{this._onDropped.fire(e)})),this.dropTarget)}setActive(e){toggleClass(this.element,"dv-active-tab",e),toggleClass(this.element,"dv-inactive-tab",!e)}setContent(e){this.content&&this._element.removeChild(this.content.element),this.content=e,this._element.appendChild(this.content.element)}updateDragAndDropState(){this._element.draggable=!this.accessor.options.disableDnd,this.dragHandler.setDisabled(!!this.accessor.options.disableDnd)}dispose(){super.dispose()}}
//# sourceMappingURL=/sm/927f013060c5dc03a2820701defc058060ea9d61b38bea1bb300866f27edc000.map