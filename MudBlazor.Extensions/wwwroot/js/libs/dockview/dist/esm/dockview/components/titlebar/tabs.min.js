/**
 * Minified by jsDelivr using Terser v5.39.0.
 * Original file: /npm/dockview-core@4.7.1/dist/esm/dockview/components/titlebar/tabs.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{getPanelData}from"../../../dnd/dataTransfer";import{isChildEntirelyVisibleWithinParent,OverflowObserver}from"../../../dom";import{addDisposableListener,Emitter}from"../../../events";import{CompositeDisposable,Disposable,MutableDisposable}from"../../../lifecycle";import{Scrollbar}from"../../../scrollbar";import{WillShowOverlayLocationEvent}from"../../events";import{Tab}from"../tab/tab";export class Tabs extends CompositeDisposable{get showTabsOverflowControl(){return this._showTabsOverflowControl}set showTabsOverflowControl(e){if(this._showTabsOverflowControl!=e&&(this._showTabsOverflowControl=e,e)){const e=new OverflowObserver(this._tabsList);this._observerDisposable.value=new CompositeDisposable(e,e.onDidChange((e=>{const t=e.hasScrollX||e.hasScrollY;this.toggleDropdown({reset:!t})})),addDisposableListener(this._tabsList,"scroll",(()=>{this.toggleDropdown({reset:!1})})))}}get element(){return this._element}get panels(){return this._tabs.map((e=>e.value.panel.id))}get size(){return this._tabs.length}get tabs(){return this._tabs.map((e=>e.value))}constructor(e,t,s){if(super(),this.group=e,this.accessor=t,this._observerDisposable=new MutableDisposable,this._tabs=[],this.selectedIndex=-1,this._showTabsOverflowControl=!1,this._onTabDragStart=new Emitter,this.onTabDragStart=this._onTabDragStart.event,this._onDrop=new Emitter,this.onDrop=this._onDrop.event,this._onWillShowOverlay=new Emitter,this.onWillShowOverlay=this._onWillShowOverlay.event,this._onOverflowTabsChange=new Emitter,this.onOverflowTabsChange=this._onOverflowTabsChange.event,this._tabsList=document.createElement("div"),this._tabsList.className="dv-tabs-container dv-horizontal",this.showTabsOverflowControl=s.showTabsOverflowControl,"native"===t.options.scrollbars)this._element=this._tabsList;else{const e=new Scrollbar(this._tabsList);this._element=e.element,this.addDisposables(e)}this.addDisposables(this._onOverflowTabsChange,this._observerDisposable,this._onWillShowOverlay,this._onDrop,this._onTabDragStart,addDisposableListener(this.element,"pointerdown",(e=>{if(e.defaultPrevented)return;0===e.button&&this.accessor.doSetGroupActive(this.group)})),Disposable.from((()=>{for(const{value:e,disposable:t}of this._tabs)t.dispose(),e.dispose();this._tabs=[]})))}indexOf(e){return this._tabs.findIndex((t=>t.value.panel.id===e))}isActive(e){return this.selectedIndex>-1&&this._tabs[this.selectedIndex].value===e}setActivePanel(e){let t=0;for(const s of this._tabs){const i=e.id===s.value.panel.id;if(s.value.setActive(i),i){const e=s.value.element,i=e.parentElement;(t<i.scrollLeft||t+e.clientWidth>i.scrollLeft+i.clientWidth)&&(i.scrollLeft=t)}t+=s.value.element.clientWidth}}openPanel(e,t=this._tabs.length){if(this._tabs.find((t=>t.value.panel.id===e.id)))return;const s=new Tab(e,this.accessor,this.group);s.setContent(e.view.tab);const i=new CompositeDisposable(s.onDragStart((t=>{this._onTabDragStart.fire({nativeEvent:t,panel:e})})),s.onPointerDown((t=>{if(t.defaultPrevented)return;const i=!this.accessor.options.disableFloatingGroups,o="floating"===this.group.api.location.type&&1===this.size;if(i&&!o&&t.shiftKey){t.preventDefault();const e=this.accessor.getGroupPanel(s.panel.id),{top:i,left:o}=s.element.getBoundingClientRect(),{top:a,left:n}=this.accessor.element.getBoundingClientRect();this.accessor.addFloatingGroup(e,{x:o-n,y:i-a,inDragMode:!0})}else if(0===t.button)this.group.activePanel!==e&&this.group.model.openPanel(e)})),s.onDrop((e=>{this._onDrop.fire({event:e.nativeEvent,index:this._tabs.findIndex((e=>e.value===s))})})),s.onWillShowOverlay((e=>{this._onWillShowOverlay.fire(new WillShowOverlayLocationEvent(e,{kind:"tab",panel:this.group.activePanel,api:this.accessor.api,group:this.group,getData:getPanelData}))}))),o={value:s,disposable:i};this.addTab(o,t)}delete(e){const t=this.indexOf(e),s=this._tabs.splice(t,1)[0],{value:i,disposable:o}=s;o.dispose(),i.dispose(),i.element.remove()}addTab(e,t=this._tabs.length){if(t<0||t>this._tabs.length)throw new Error("invalid location");this._tabsList.insertBefore(e.value.element,this._tabsList.children[t]),this._tabs=[...this._tabs.slice(0,t),e,...this._tabs.slice(t)],this.selectedIndex<0&&(this.selectedIndex=t)}toggleDropdown(e){const t=e.reset?[]:this._tabs.filter((e=>!isChildEntirelyVisibleWithinParent(e.value.element,this._tabsList))).map((e=>e.value.panel.id));this._onOverflowTabsChange.fire({tabs:t,reset:e.reset})}updateDragAndDropState(){for(const e of this._tabs)e.value.updateDragAndDropState()}}
//# sourceMappingURL=/sm/1a0ca6007c8edb2eb9172047fdfa60af4baf76b62a57ac9de54be2923f7c61f1.map