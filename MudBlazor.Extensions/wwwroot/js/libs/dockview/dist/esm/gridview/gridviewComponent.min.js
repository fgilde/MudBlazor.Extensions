/**
 * Minified by jsDelivr using Terser v5.39.0.
 * Original file: /npm/dockview-core@4.7.1/dist/esm/gridview/gridviewComponent.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{getRelativeLocation,getGridLocation}from"./gridview";import{tail,sequenceEquals}from"../array";import{CompositeDisposable}from"../lifecycle";import{BaseGrid,toTarget}from"./baseComponentGridview";import{Emitter}from"../events";export class GridviewComponent extends BaseGrid{get orientation(){return this.gridview.orientation}set orientation(i){this.gridview.orientation=i}get options(){return this._options}get deserializer(){return this._deserializer}set deserializer(i){this._deserializer=i}constructor(i,e){var t;super(i,{proportionalLayout:null===(t=e.proportionalLayout)||void 0===t||t,orientation:e.orientation,styles:e.hideBorders?{separatorBorder:"transparent"}:void 0,disableAutoResizing:e.disableAutoResizing,className:e.className}),this._onDidLayoutfromJSON=new Emitter,this.onDidLayoutFromJSON=this._onDidLayoutfromJSON.event,this._onDidRemoveGroup=new Emitter,this.onDidRemoveGroup=this._onDidRemoveGroup.event,this._onDidAddGroup=new Emitter,this.onDidAddGroup=this._onDidAddGroup.event,this._onDidActiveGroupChange=new Emitter,this.onDidActiveGroupChange=this._onDidActiveGroupChange.event,this._options=e,this.addDisposables(this._onDidAddGroup,this._onDidRemoveGroup,this._onDidActiveGroupChange,this.onDidAdd((i=>{this._onDidAddGroup.fire(i)})),this.onDidRemove((i=>{this._onDidRemoveGroup.fire(i)})),this.onDidActiveChange((i=>{this._onDidActiveGroupChange.fire(i)})))}updateOptions(i){super.updateOptions(i);const e="string"==typeof i.orientation&&this.gridview.orientation!==i.orientation;this._options=Object.assign(Object.assign({},this.options),i),e&&(this.gridview.orientation=i.orientation),this.layout(this.gridview.width,this.gridview.height,!0)}removePanel(i){this.removeGroup(i)}toJSON(){var i;return{grid:this.gridview.serialize(),activePanel:null===(i=this.activeGroup)||void 0===i?void 0:i.id}}setVisible(i,e){this.gridview.setViewVisible(getGridLocation(i.element),e)}setActive(i){this._groups.forEach(((e,t)=>{e.value.setActive(i===e.value)}))}focus(){var i;null===(i=this.activeGroup)||void 0===i||i.focus()}fromJSON(i){this.clear();const{grid:e,activePanel:t}=i;try{const i=[],o=this.width,r=this.height;if(this.gridview.deserialize(e,{fromJSON:e=>{const{data:t}=e,o=this.options.createComponent({id:t.id,name:t.component});return i.push((()=>o.init({params:t.params,minimumWidth:t.minimumWidth,maximumWidth:t.maximumWidth,minimumHeight:t.minimumHeight,maximumHeight:t.maximumHeight,priority:t.priority,snap:!!t.snap,accessor:this,isVisible:e.visible}))),this._onDidAddGroup.fire(o),this.registerPanel(o),o}}),this.layout(o,r,!0),i.forEach((i=>i())),"string"==typeof t){const i=this.getPanel(t);i&&this.doSetGroupActive(i)}}catch(i){for(const i of this.groups)i.dispose(),this._groups.delete(i.id),this._onDidRemoveGroup.fire(i);throw this.clear(),i}this._onDidLayoutfromJSON.fire()}clear(){const i=this.activeGroup,e=Array.from(this._groups.values());for(const i of e)i.disposable.dispose(),this.doRemoveGroup(i.value,{skipActive:!0});i&&this.doSetGroupActive(void 0),this.gridview.clear()}movePanel(i,e){var t;let o;const r=this.gridview.remove(i),s=null===(t=this._groups.get(e.reference))||void 0===t?void 0:t.value;if(!s)throw new Error(`reference group ${e.reference} does not exist`);const n=toTarget(e.direction);if("center"===n)throw new Error(`${n} not supported as an option`);{const i=getGridLocation(s.element);o=getRelativeLocation(this.gridview.orientation,i,n)}this.doAddGroup(r,o,e.size)}addPanel(i){var e,t,o,r;let s=null!==(e=i.location)&&void 0!==e?e:[0];if(null===(t=i.position)||void 0===t?void 0:t.referencePanel){const e=null===(o=this._groups.get(i.position.referencePanel))||void 0===o?void 0:o.value;if(!e)throw new Error(`reference group ${i.position.referencePanel} does not exist`);const t=toTarget(i.position.direction);if("center"===t)throw new Error(`${t} not supported as an option`);{const i=getGridLocation(e.element);s=getRelativeLocation(this.gridview.orientation,i,t)}}const n=this.options.createComponent({id:i.id,name:i.component});return n.init({params:null!==(r=i.params)&&void 0!==r?r:{},minimumWidth:i.minimumWidth,maximumWidth:i.maximumWidth,minimumHeight:i.minimumHeight,maximumHeight:i.maximumHeight,priority:i.priority,snap:!!i.snap,accessor:this,isVisible:!0}),this.registerPanel(n),this.doAddGroup(n,s,i.size),this.doSetGroupActive(n),n}registerPanel(i){const e=new CompositeDisposable(i.api.onDidFocusChange((e=>{e.isFocused&&this._groups.forEach((e=>{const t=e.value;t!==i?t.setActive(!1):t.setActive(!0)}))})));this._groups.set(i.id,{value:i,disposable:e})}moveGroup(i,e,t){const o=this.getPanel(e);if(!o)throw new Error("invalid operation");const r=getGridLocation(i.element),s=getRelativeLocation(this.gridview.orientation,r,t),[n,a]=tail(s),d=getGridLocation(o.element),[h,p]=tail(d);if(sequenceEquals(h,n))return void this.gridview.moveView(h,p,a);const m=this.doRemoveGroup(o,{skipActive:!0,skipDispose:!0}),u=getGridLocation(i.element),c=getRelativeLocation(this.gridview.orientation,u,t);this.doAddGroup(m,c)}removeGroup(i){super.removeGroup(i)}dispose(){super.dispose(),this._onDidLayoutfromJSON.dispose()}}
//# sourceMappingURL=/sm/07e16db3b7bd449bdcdf10489e55455f8ec6f388715142631ced18d2695a9e8c.map