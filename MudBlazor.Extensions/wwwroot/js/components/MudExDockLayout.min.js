export function initializeMudExDockLayout(t,i,r,u){return new n(t,i,r,u)}class n{elementRef;dotnet;options;containerRef;api;elementStore=new Map;bootstrapped=false;observer=null;constructor(n,t,i,r){this.elementRef=n;this.dotnet=i;this.containerRef=t;this.options=r||{};this.init()}async init(){const{createDockview:n}=await import(this.options.module);this.api=n(this.containerRef,{className:this.options.className??"dockview-theme-abyss",createComponent:n=>{const t=this.elementStore.get(n.id);if(t)return t.style.display="",t.style.height="100%",t.style.width="100%",t.style.overflow="auto",{element:t,init(){},update(){},dispose(){}};const i=document.createElement("div");return i.textContent=`${n.name??"panel"} content`,{element:i,init(){},update(){},dispose(){}}}});this.dotnet?.invokeMethodAsync("OnJsReady");this.observeAndBootstrap()}observeAndBootstrap(){const n=()=>{if(!this.bootstrapped){const n=this._rootNodes();n.length!==0&&(this.bootstrapFromDom(n),this.bootstrapped=!0,this.observer?.disconnect())}};n();this.observer=new MutationObserver(()=>n());this.observer.observe(this.containerRef,{childList:!0,subtree:!0})}setOptions(n){this.options=n}_rootNodes(){return Array.from(this.containerRef.children).filter(n=>n.classList?.contains("dv-node"))}bootstrapFromDom(n){const t=[];let i=null;for(const r of n)this._planFromNode(r,"right",t,()=>i,n=>i=n);for(const n of t){const t={id:n.id,component:"blazor",title:n.title};n.position&&(t.position=n.position);n.float===!0&&(t.float=!0);n.locked===!0&&(t.locked=!0);const i=this.api.addPanel(t);if(n.hideHeader===!0&&!this.containerRef.classList.contains("dv-hide-tabs")){const n=i.group?.element??i.group?._element??null;n&&n.classList.add("dv-hide-tabs")}}}_planFromNode(n,t,i,r,u){const e=Array.from(n.children).filter(n=>n.classList?.contains("dv-node")),o=e.length>0;if(!o){const f=n.dataset.dvId||`p_${Math.random().toString(36).slice(2)}`,s=n.dataset.dvTitle||f,h=n.dataset.dvHide==="true",c=n.dataset.dvClose!=="false",l=n.dataset.dvFloat==="true";n.style.display="none";this.elementStore.set(f,n);const e={id:f,title:s,hideHeader:h,float:l,locked:!c,position:null},o=r();o&&(e.position={referencePanel:o,direction:t});i.push(e);u(f);return}const s=(n.dataset.dvDir||"right").toLowerCase();let f=r();for(const n of e){const t=i.length;this._planFromNode(n,s,i,()=>f,n=>{f=n});i.length>t&&!f&&(f=i[i.length-1].id)}}toJSON(){try{return JSON.stringify(this.api?.toJSON()??{})}catch(n){return"{}"}}fromJSON(n){try{this.api?.fromJSON(typeof n=="string"?JSON.parse(n):n)}catch(t){}}}window.MudExDockLayout=n;