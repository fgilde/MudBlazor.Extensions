export function initializeMudExGoogleFilePicker(t,i,r){return new n(t,i,r)}class n extends MudExExternalFilePickerBase{gisInited=false;tokenClient;loadApi(){const n=document.createElement("script");n.async=!0;n.defer=!0;n.src="https://apis.google.com/js/api.js";n.onload=this.gapiLoaded.bind(this);document.body.appendChild(n);const t=document.createElement("script");t.async=!0;t.defer=!0;t.src="https://accounts.google.com/gsi/client";t.onload=this.gisLoaded.bind(this);document.body.appendChild(t)}gapiLoaded(){gapi.load("client:picker",this.initializePicker.bind(this))}async initializePicker(){await gapi.client.load("https://www.googleapis.com/discovery/v1/apis/drive/v3/rest");this.pickerInited=!0;this.maybeEnableButtons()}gisLoaded(){this.tokenClient=google.accounts.oauth2.initTokenClient({client_id:this.options.clientId,scope:"https://www.googleapis.com/auth/drive.readonly",callback:""});this.gisInited=!0;this.maybeEnableButtons()}maybeEnableButtons(){this.pickerInited&&this.gisInited&&this.dotnet.invokeMethodAsync(this.options.onReadyCallback)}openPicker(){this.tokenClient.callback=async n=>{if(n.error!==undefined)throw n;this.accessToken=n.access_token;this.dotnet.invokeMethodAsync(this.options.onAuthorizedCallback,this.accessToken);await this.createPicker()};this.accessToken===null?this.tokenClient.requestAccessToken({prompt:"consent"}):this.tokenClient.requestAccessToken({prompt:""})}handleSignoutClick(){this.accessToken&&(this.accessToken=null,google.accounts.oauth2.revoke(this.accessToken))}createPicker(){const t=(new google.picker.DocsView).setIncludeFolders(this.options.allowFolderNavigation||this.options.allowFolderSelect).setSelectFolderEnabled(this.options.allowFolderSelect&&this.options.multiSelect);this.options.allowedMimeTypes&&t.setMimeTypes(this.options.allowedMimeTypes);const n=(new google.picker.PickerBuilder).setOAuthToken(this.accessToken).addView(t).setCallback(this.pickerCallback.bind(this));this.options.allowUpload&&(n.addView(new google.picker.DocsUploadView),n.enableFeature(google.picker.Feature.SIMPLE_UPLOAD_ENABLED));this.options.multiSelect&&n.enableFeature(google.picker.Feature.MULTISELECT_ENABLED);this.options.apiKey&&n.setDeveloperKey(this.options.apiKey);this.options.appId&&n.setAppId(this.options.appId);const i=n.build();i.setVisible(!0)}async pickerCallback(n){if(n.action===google.picker.Action.PICKED){let t=[];for(const i of n.docs){const n=i.id,r=i.name,u=i.mimeType;if(u==="application/vnd.google-apps.folder"){const i=await this.getAllFilesInFolder(n,r+"/");for(const n of i){const i=await this.processFile(n.id,n.name,n.path);t.push(i)}}else{const i=await this.processFile(n,r,"");t.push(i)}}this.dotnet.invokeMethodAsync(this.options.onFilesSelectedCallback,t)}else n.action===google.picker.Action.CANCEL&&this.dotnet.invokeMethodAsync(this.options.onFilesSelectedCallback,[])}async processFile(n,t,i){const f=t.split(".").pop(),r=await gapi.client.drive.files.get({fileId:n,fields:"webViewLink, webContentLink, parents, mimeType, size"}),e=r.result.parents||[];this.options.alwaysLoadPath&&(i=await this.getFolderPath(e[0]));let u={id:n,accessToken:this.accessToken,fileName:t,extension:f,contentType:r.result.mimeType,webViewLink:r.result.webViewLink,webContentLink:r.result.webContentLink,path:i};if(r.result.size&&(u.size=parseFloat(r.result.size)),this.options.autoLoadFileDataBytes){const t=await fetch(`https://www.googleapis.com/drive/v3/files/${n}?alt=media`,{headers:new Headers({Authorization:`Bearer ${this.accessToken}`})}),i=await t.blob();u.data=await MudExUriHelper.blobToByteArray(i)}return u}async getFolderPath(n){let t="",i=n;while(i){const n=await gapi.client.drive.files.get({fileId:i,fields:"name, parents"});if(!n.result.parents)break;t=n.result.name+(t?"/"+t:"");i=n.result.parents[0]}return t}async getAllFilesInFolder(n,t){let i=[],r=null;do{const u=await gapi.client.drive.files.list({q:`'${n}' in parents and trashed=false`,fields:"nextPageToken, files(id, name, mimeType)",pageToken:r});for(const n of u.result.files)if(n.mimeType==="application/vnd.google-apps.folder"){const r=await this.getAllFilesInFolder(n.id,t+n.name+"/");i=i.concat(r)}else n.path=t,i.push(n);r=u.result.nextPageToken}while(r);return i}dispose(){}}window.MudExGoogleFilePicker=n;