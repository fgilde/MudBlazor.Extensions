export function initializeMudExOneDriveFilePicker(t,i,r){return new n(t,i,r)}class n extends MudExExternalFilePickerBase{openPicker(){const n={clientId:this.options.clientId,action:"query",multiSelect:this.options.multiSelect||!1,viewType:this.options.allowFolderSelect?"all":"files",advanced:{redirectUri:this.options.redirectUri||window.location.origin,accessToken:this.accessToken||undefined},success:n=>{this.accessToken=n.accessToken,this.apiEndpoint=n.apiEndpoint,this.dotnet.invokeMethodAsync(this.options.onAuthorizedCallback,this.accessToken),this.processResult(n)},cancel:()=>{this.dotnet.invokeMethodAsync(this.options.onFilesSelectedCallback,[])},error:n=>{console.error(n)}};OneDrive.open(n)}async processResult(n){const t=[];for(const i of n.value)if(i.folder){const n=await this.getAllFilesInFolder(i.id);t.push(...n)}else{const n=await this.processFile(i);t.push(n)}this.dotnet.invokeMethodAsync(this.options.onFilesSelectedCallback,t)}async getFileDetails(n){const t=await fetch(`${this.apiEndpoint}me/drive/items/${n}`,{headers:new Headers({Authorization:`Bearer ${this.accessToken}`})});return t.json()}async processFile(n){const i=n.id,t=await this.getFileDetails(i),r=t.name,f=r.split(".").pop();let u={id:i,size:t.size,accessToken:this.accessToken,apiPath:this.apiEndpoint,fileName:r,extension:f,contentType:t.file.mimeType,webUrl:t.webUrl,url:t["@microsoft.graph.downloadUrl"],downloadUrl:t["@microsoft.graph.downloadUrl"],path:(t.parentReference?.path||"").split(":").pop()};if(this.options.autoLoadFileDataBytes){const n=await fetch(t["@microsoft.graph.downloadUrl"],{headers:new Headers({Authorization:`Bearer ${this.accessToken}`})}),i=await n.blob();u.data=await MudExUriHelper.blobToByteArray(i)}return u}async getAllFilesInFolder(n){let t=[],i=`${this.apiEndpoint}me/drive/items/${n}/children`;while(i){const r=await fetch(i,{headers:new Headers({Authorization:`Bearer ${this.accessToken}`})}),n=await r.json();for(const i of n.value)if(i.folder){const n=await this.getAllFilesInFolder(i.id);t.push(...n)}else t.push(await this.processFile(i));i=n["@odata.nextLink"]}return t}dispose(){}}window.MudExOneDriveFilePicker=n;