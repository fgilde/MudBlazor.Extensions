@using MudBlazor.Extensions.Components.ObjectEdit
@using MudBlazor.Extensions.Core
@using MudBlazor.Extensions.Core.Enums

@inherits MudExBaseComponent<MudExFileDisplayZip>

@if (_innerPreview != null)
{
    <MudExFileDisplay FallBackInIframe="@FallBackInIframe"
                      Localizer="@Localizer"
                      CanClose="true"
                      ElementId="@ElementId"
                      OnCloseClick="@(ClosePreview)"
                      ShowContentError="@ShowContentError"
                      SandBoxIframes="@SandBoxIframes"
                      ImageAsBackgroundImage="@ImageAsBackgroundImage"
                      ViewDependsOnContentType="@ViewDependsOnContentType"
                      HandleContentErrorFunc="@HandleContentErrorFunc"
                      CustomContentErrorMessage="@CustomContentErrorMessage"
                      StreamUrlHandling="@StreamUrlHandling"
                      ColorizeIcons="@ColorizeIcons"
                      IconColor="@IconColor"
                      Dense="@Dense"
                      ForceNativeRender="@ForceNativeRender"
                      ParametersForSubControls="@ParametersForSubControls"
                      FileName="@_innerPreview.Name"
                      ContentStream="@_innerPreviewStream"
                      ContentType="@_innerPreview.ContentType"
                      Url="@_innerPreviewUrl"></MudExFileDisplay>
}

else
{
    <div class="mud-ex-file-display-zip">
        @if (_zipEntries == null)
        {
            <MudProgressCircular Style="margin-top: 20%; margin-left: 50%;" Color="Color.Primary" Indeterminate="true" />
        }
        else
        {
            <MudExTreeView ToolBarClass="@($"{ToolBarPaperClass} {(StickyToolbar ? "mud-ex-toolbar-sticky" : "")}")"
                           @ref="_treeView"
                           @bind-Filters="Filters"
                           @bind-Filter="SearchString"
                           InitiallyExpanded="true"
                           
                           Parameters="@(new Dictionary<string, object> {{nameof(MudExTreeViewList<MudExArchiveStructure>.RootName), RootFolderName}})"
                           ToolBarStyle="@ToolbarStyle()"
                           ToggleableViewModes="new [] { TreeViewMode.Default , TreeViewMode.List, TreeViewMode.FlatList}"
                           TreeViewModeToggleComponent="@(AllowToggleTree ? TreeViewModeToggleComponent.ToggleButton : TreeViewModeToggleComponent.None)"
                           Dense="@Dense"
                           @bind-ViewMode="ViewMode"
                           FilterBehaviour="HierarchicalFilterBehaviour.Default"
                           FilterMode="PropertyFilterMode.Toggleable"
                           TextFunc="@(i => i.Name)" Items="@_zipStructure">
                <ItemContentTemplate>
                    <MudAlert NoIcon="true"
                              OnClick="(a) => Select(context.Value, a)"
                              Severity="@((IsSelected(context.Value?.BrowserFile) ? Severity.Warning : Severity.Normal))"
                              Square="true"
                              Dense="@Dense"
                              Variant="Variant.Text"
                              Style="width: 100%"
                              Class="mud-ex-file-display-tree p-0 mr-1 ml-1 mud-alert-message-w-100 mud-alert-message-mt-5">

                        <div style="display: flex; align-items: center;">
                            <MudExIcon Class="mr-3" Color="@(ColorizeIcons ? context.Value.Color : IconColor)" Icon="@context.Value.Icon" />
                            <MudText>
                                <p>
                                    <MudHighlighter Text="@context.Value.Name" HighlightedText="@context.Highlight" />
                                    @if (context.Value.IsDirectory)
                                    {
                                        <span class="mud-ex-fd-child-count-label">@context.Value.Children.Count</span>
                                    }
                                </p>

                                <p class="mud-ex-fd-size-display">@Nextended.Blazor.Extensions.BrowserFileExtensions.GetReadableFileSize(context.Value.Size, LocalizerToUse, true)</p>
                            </MudText>
                        </div>
                        <span style="float: right; margin-top: -35px;" class="mud-ex-fd-tree-actions">
                            @if (!context.Value.IsDirectory && AllowPreview)
                            {
                                <MudTooltip Placement="Placement.Left" Delay="600" Color="Color.Primary" Text="@($"{TryLocalize("Preview")} ({context.Value.Name})")">
                                    <MudIconButton OnClick="@(() => Preview(context.Value.BrowserFile))" Icon="@Icons.Material.Filled.ZoomIn" Color="@ActionButtonColor" Size="Size.Medium" />
                                </MudTooltip>
                            }
                            @if (AllowDownload)
                            {
                                <MudTooltip Placement="Placement.Right" Delay="600" Color="Color.Primary" Text="@($"{TryLocalize("Download")} ({context.Value.Name})")">
                                    <MudMenu @ref="_downloadMenu" Style="margin-left: 10px;" Disabled="@context.Value.IsDownloading" Icon="@(context.Value.IsDownloading ? Icons.Material.Filled.Downloading : Icons.Material.Filled.Download)" Color="@ActionButtonColor" Size="Size.Medium" Dense="@Dense">
                                        <MudMenuItem Icon="@Icons.Material.Filled.FileDownload" OnClick="@(() => DownloadAsync(context.Value, false))">@DownloadText(context.Value, false) </MudMenuItem>
                                        <MudMenuItem Icon="@Icons.Material.Filled.Archive" OnClick="@(() => DownloadAsync(context.Value, true))">@DownloadText(context.Value, true) </MudMenuItem>
                                    </MudMenu>
                                </MudTooltip>
                            }
                        </span>
                    </MudAlert>
                </ItemContentTemplate>
            </MudExTreeView>

        }
    </div>
}