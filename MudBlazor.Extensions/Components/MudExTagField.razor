@inherits MudExTextField<T>
@using Microsoft.AspNetCore.Components.Rendering
@typeparam T


@if (RenderChipsAdditional == Adornment.Start)
{
    <div class="mud-ex-additional-chip-container-start">
        @RenderDataVisualizer
    </div>
}

@Inherited()

@if (RenderChipsAdditional == Adornment.End)
{
    <div class="mud-ex-additional-chip-container-end">
        @RenderDataVisualizer
    </div>
}

@code {

    private RenderFragment Inherited() => builder => base.BuildRenderTree(builder);

    private void RenderDataVisualizer(RenderTreeBuilder __builder)
    {
        <MudChipSet Class="@ChipClassname" Style="@($"max-width: {ChipsMaxWidth}")" AllClosable="@Closeable" T="T" OnClose="Remove">
            @for (int i = 0; i < Math.Min(Values?.Count ?? 0, MaxChips == 0 ? int.MaxValue : MaxChips); i++)
            {

                var value = Values[i];
                <MudChip Class="@ClassChip"
                         Style="@ChipStyleName"
                         @onmouseover="@(args => HandleOnChipMouseOver(args, value))"
                         @onmouseout="@(args =>HandleOnChipMouseOut(args, value))"
                         Color="@(ChipColor.IsColor ? ChipColor.AsColor : MudBlazor.Color.Default)"
                         Ripple="false"
                         Text="@Converter.Set(value)"
                         Value="@value"
                         Variant="@ChipVariant"
                         Size="@ChipSize"
                         Disabled="@Disabled" />
            }
        </MudChipSet>

        @if (Values != null && MaxChips != 0 && MaxChips < Values.Count)
        {
            var chipsNotShown = Values.Skip(MaxChips).ToList();
            var tooltipText = string.Join(", ", chipsNotShown);

            <MudTooltip Text="@tooltipText">
                <MudChip Ripple="false"
                         T="T"
                         Text="@($" +{chipsNotShown.Count}")"
                         Style="@ChipStyleName"
                         Color="@(ChipColor.IsColor ? ChipColor.AsColor : MudBlazor.Color.Default)"
                         Variant="@ChipVariant"
                         Size="@ChipSize"
                         Disabled="@Disabled" />
            </MudTooltip>
        }

    }
}