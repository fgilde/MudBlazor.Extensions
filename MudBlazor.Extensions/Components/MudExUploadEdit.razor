@using MudBlazor.Extensions.Helper
@using Nextended.Core.Extensions
@inherits MudExJsRequiredBaseComponent<MudExUploadEdit<T>>
@typeparam T;

@if (!string.IsNullOrWhiteSpace(Label))
{
    <label class="@($"{(UploadRequests?.Any() == true ? "upload-request-label-small" : "")} upload-request-label mud-input-label-animated mud-input-label-text")">@Label</label>
}

<div class="@(Variant == Variant.Outlined ? "upload-request-outlined-border" : "")">

    <div @ref="ElementReference" style="@StyleStr()" class="upload-request-edit @(AllowDrop ? "drop-zone" : "") @Class">

        @if (!string.IsNullOrWhiteSpace(_errorMessage) && DisplayErrors)
        {
            <MudAlert Style="@($"animation: {ErrorAnimation.GetAnimationCssStyle(TimeSpan.FromMilliseconds(300))};")" Severity="Severity.Error" Class="upload-request-alert" ShowCloseIcon="true" CloseIconClicked="@(() => SetError())">
                <span class="upload-request-alert-text">@_errorMessage</span>
            </MudAlert>

        }
        else if (AllowDrop && !string.IsNullOrEmpty(TextDropZone) && !HasData())
        {
            <p style="@($"{(HasValidDropZoneClickAction ? "cursor:pointer" : "")}")" @onclick="@(() => DropZoneClick(UploadFieldId))" class="mud-ex-upload-edit-drop-zone-text">@GetTextDropZone()</p>
        }

        <MudGrid Spacing="1">

            @if (!ReadOnly)
            {
                @if (AllowMultiple)
                {
                    <InputFile @ref="_inputFile" id="@(UploadFieldId)" hidden multiple OnChange="UploadFiles" accept="@($"{_accept}")" />
                }
                else
                {
                    <InputFile @ref="_inputFile" id="@(UploadFieldId)" hidden OnChange="UploadFiles" accept="@($"{_accept}")" />
                }
            }

            @if (_loading)
            {
                <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7" />
            }
            else
            {
                @foreach (var request in (UploadRequests ?? Enumerable.Empty<T>()))
                {
                    var isLoading = IsLoading(request);
                    var loadingState = isLoading ? _loadings[request] : default;
                    <MudItem xs="12">
                        <MudItem>
                            <MudAlert NoIcon="true"
                                      Class="mud-alert-message-w-100"
                                      Severity="@(IsSelected(request) ? Severity.Warning : (_withErrors.Contains(request) ? Severity.Error : Severity.Normal))"
                                      OnClick="(a) => Select(request, a)"
                                      ShowCloseIcon="@(AllowRemovingItems && !ReadOnly && !isLoading)"
                                      CloseIcon="@Icons.Material.Filled.Delete"
                                      CloseIconClicked="(() => Remove(request))">
                                <div title="@($"{request.Path?.EnsureEndsWith("/")}{request.FileName}")" style="display: flex; align-items: center; width: 90%">
                                    @if (isLoading)
                                    {
                                        <MudProgressCircular Class="mr-3" Size="@Size.Small" Color="@Color.Info" Indeterminate="@(!ShowProgressForLoadingData)" Max="@loadingState.Size" Value="@loadingState.ReadBytes" />
                                    }
                                    else
                                    {
                                        <MudExIcon Class="mr-3" Color="@GetIconColor(request)" Icon="@GetIcon(request)"/>
                                    }
                                    @if (AllowRename && !ReadOnly && !isLoading)
                                    {
                                        <MudTextField Style="height: 12px;" Class="mud-ex-collection-inline-string-edit" DisableUnderLine="true" Error="@(string.IsNullOrWhiteSpace(request.FileName))" @bind-Value="@request.FileName"></MudTextField>
                                    }
                                    else
                                    {
                                        <MudText Style="height: 12px; margin-top: -13px" Typo="Typo.subtitle1">@request.FileName</MudText>
                                    }
                                </div>
                                @if (AllowPreview && !isLoading)
                                {
                                    <MudIconButton OnClick="@(() => Preview(request))" Style="margin-top: -24px; float: right;" Icon="@Icons.Material.Filled.ZoomIn" Color="Color.Inherit" Size="Size.Small" />
                                }
                            </MudAlert>
                        </MudItem>
                    </MudItem>
                }
                @if (ShowClearButton && HasData() && !ReadOnly)
                {
                    <MudGrid Class="mr-5 mt-2" Justify="Justify.FlexEnd">
                        <MudIconButton Title="@TryLocalize(TextRemoveAll)" OnClick="@RemoveAll" Icon="@Icons.Material.Filled.DeleteForever" Color="Color.Primary" Size="Size.Small" />
                    </MudGrid>
                }
            }
        </MudGrid>
    </div>
    

    <MudGrid Justify="@ButtonsJustify" Class="mt-5 multi-upload-actions">
        @if (ShowFileUploadButton && !ReadOnly)
        {

            <MudButton HtmlTag="label"
                       Variant="@ButtonVariant"
                       Color="@ButtonColor"
                       Size="@ButtonSize"
                       StartIcon="@(AllowMultiple ? Icons.Material.Filled.FileUpload : Icons.Material.Filled.UploadFile)"
                       for="@UploadFieldId">
                @(AllowMultiple ? TryLocalize(TextUploadFiles) : TryLocalize(TextUploadFile))
            </MudButton>

        }

        @if (AllowFolderUpload && AllowMultiple && ShowFolderUploadButton && !ReadOnly)
        {
            <span class="action-margin"></span>
            <MudButton HtmlTag="label"
                       OnClick="@(UploadFolder)"
                       Variant="@ButtonVariant"
                       Color="@ButtonColor"
                       Size="@ButtonSize"
                       StartIcon="@Icons.Material.Filled.DriveFolderUpload">
                @TryLocalize(TextUploadFolder)
            </MudButton>
        }

        @if (AllowExternalUrl && !ReadOnly)
        {
            <span class="action-margin"></span>
            <MudButton HtmlTag="label"
                       OnClick="@(AddUrl)"
                       Variant="@ButtonVariant"
                       Color="@ButtonColor"
                       Size="@ButtonSize"
                       StartIcon="@Icons.Material.Filled.CloudUpload">
                @TryLocalize(TextAddUrl)
            </MudButton>
        }
        
        @if (CanUseGoogleDrive && !ReadOnly)
        {
            <span class="action-margin"></span>
            <MudExGoogleFilePicker @ref="_googleFilePicker"
                                   ClientId="787005879852-vkv0cduhl70u087pq4a8s2jtkdgv1n6s.apps.googleusercontent.com"
                                   Variant="@ButtonVariant"
                                   Color="@ButtonColor"
                                   Size="@ButtonSize"
                                   MultiSelect="@AllowMultiple"
                                   AllowFolderNavigation="true"
                                   AutoLoadFileDataBytes="@AutoLoadFileDataBytes"
                                   AllowFolderSelect="@AllowFolderUpload"
                                   AllowedMimeTypes="@_allowedMimeTypes"
                                   FilesSelected="@Add">
                @TryLocalize(TextAddFromGoogle)
            </MudExGoogleFilePicker>
        }
        
        <span class="action-margin"></span>
        <MudExDropBoxFilePicker ApiKey="2ak2m6cfpdeb9f1"
                                Variant="@ButtonVariant"
                                Color="@ButtonColor"
                                Size="@ButtonSize"
                                MaxFileSize="@MaxFileSize"
                                MultiSelect="@AllowMultiple"
                                AutoLoadFileDataBytes="@AutoLoadFileDataBytes"
                                AllowedMimeTypes="@_allowedMimeTypes"
                                FilesSelected="@Add">
            @TryLocalize("DropBox")
        </MudExDropBoxFilePicker>
        
        <span class="action-margin"></span>
        <MudExOneDriveFilePicker ClientId="2ak2m6cfpdeb9f1"
                                Variant="@ButtonVariant"
                                Color="@ButtonColor"
                                Size="@ButtonSize"
                                MultiSelect="@AllowMultiple"
                                AutoLoadFileDataBytes="@AutoLoadFileDataBytes"
                                AllowedMimeTypes="@_allowedMimeTypes"
                                FilesSelected="@Add">
            @TryLocalize("One Drive")
        </MudExOneDriveFilePicker>

    </MudGrid>
</div>

@if (!string.IsNullOrWhiteSpace(HelperText))
{
    <label style="margin-left: 8px;" class="mud-input-helper-text">@HelperText</label>
}