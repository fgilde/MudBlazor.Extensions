@typeparam T
@inherits MudExTreeViewFlatList<T>
@namespace MudBlazor.Extensions.Components

@using Nextended.Core.Extensions
@using Nextended.Core.Types

@RenderSearchBar()

<MudList T="T" Class="@Class" Style="@AnimationStyleStr()" Dense="@Dense" Clickable="true">
    @{
        var nodeRenderInfo = LevelNodes();
    }
    @if (LastSelectedNode != null && !nodeRenderInfo.IsRoot)
    {
        @RenderBackNode()
    }
    @foreach (var item in nodeRenderInfo.Nodes.EmptyIfNull())
    {
        var search = FilterManager.GetMatchedSearch(item);
        if (search.Found)
        {
            @ItemRender(item, search.Term)
        }
    }
</MudList>

@code {

    protected virtual RenderFragment RenderBackNode(string style = "")
    {
        var targetNode = GetBackNodeTarget();
        return @<RenderChild>
                   <MudListItem T="T" Class="@ItemClassStr(targetNode.Context)" 
                                Value="@targetNode.Context.Item"
                                Style="@ItemStyleStr(targetNode.Context, style)"
                                OnClick="@(() => { _animationIn = true; NodeClick(targetNode.Context.Item); })" Text="@targetNode.Label" Icon="@Icons.Material.Filled.ArrowBack" />
                   <MudDivider/>
                </RenderChild>;
    }
 
    private RenderFragment ItemRender(T item, string search = "")
    {
        var context = CreateContext(item, search);
        if (ItemTemplate != null)
            return ItemTemplate(context);

        return IsSeparator(item) ? RenderSeparator() : RenderItem(context);
    }

    public virtual RenderFragment RenderItem(TreeViewItemContext<T> context)
    {
        return
        @<MudListItem T="T" Style="@ItemStyleStr(context)" Value="@context.Item" Class="@ItemClassStr(context)" OnClick="@(() => NodeClick(context.Item))">
            <div class="@ListItemClassStr()">
                @RenderItemContent(context, true, false)
                @if(context.Item.HasChildren())
                {
                    <MudExIcon Icon="@ExpandedIcon" />
                }
            </div>
            @RenderPath(context)
        </MudListItem>;
    }
}
